Windows.Win32.Foundation.WIN32_ERROR|
/// {@category enum}
extension type const WIN32_ERROR(int _) implements int {
  static const NO_ERROR = WIN32_ERROR(0x00000000);
  static const ERROR_EXPECTED_SECTION_NAME = WIN32_ERROR(0xe0000000);
  static const ERROR_BAD_SECTION_NAME_LINE = WIN32_ERROR(0xe0000001);
  static const ERROR_SECTION_NAME_TOO_LONG = WIN32_ERROR(0xe0000002);
  static const ERROR_GENERAL_SYNTAX = WIN32_ERROR(0xe0000003);
  static const ERROR_WRONG_INF_STYLE = WIN32_ERROR(0xe0000100);
  static const ERROR_SECTION_NOT_FOUND = WIN32_ERROR(0xe0000101);
  static const ERROR_LINE_NOT_FOUND = WIN32_ERROR(0xe0000102);
  static const ERROR_NO_BACKUP = WIN32_ERROR(0xe0000103);
  static const ERROR_NO_ASSOCIATED_CLASS = WIN32_ERROR(0xe0000200);
  static const ERROR_CLASS_MISMATCH = WIN32_ERROR(0xe0000201);
  static const ERROR_DUPLICATE_FOUND = WIN32_ERROR(0xe0000202);
  static const ERROR_NO_DRIVER_SELECTED = WIN32_ERROR(0xe0000203);
  static const ERROR_KEY_DOES_NOT_EXIST = WIN32_ERROR(0xe0000204);
  static const ERROR_INVALID_DEVINST_NAME = WIN32_ERROR(0xe0000205);
  static const ERROR_INVALID_CLASS = WIN32_ERROR(0xe0000206);
  static const ERROR_DEVINST_ALREADY_EXISTS = WIN32_ERROR(0xe0000207);
  static const ERROR_DEVINFO_NOT_REGISTERED = WIN32_ERROR(0xe0000208);
  static const ERROR_INVALID_REG_PROPERTY = WIN32_ERROR(0xe0000209);
  static const ERROR_NO_INF = WIN32_ERROR(0xe000020a);
  static const ERROR_NO_SUCH_DEVINST = WIN32_ERROR(0xe000020b);
  static const ERROR_CANT_LOAD_CLASS_ICON = WIN32_ERROR(0xe000020c);
  static const ERROR_INVALID_CLASS_INSTALLER = WIN32_ERROR(0xe000020d);
  static const ERROR_DI_DO_DEFAULT = WIN32_ERROR(0xe000020e);
  static const ERROR_DI_NOFILECOPY = WIN32_ERROR(0xe000020f);
  static const ERROR_INVALID_HWPROFILE = WIN32_ERROR(0xe0000210);
  static const ERROR_NO_DEVICE_SELECTED = WIN32_ERROR(0xe0000211);
  static const ERROR_DEVINFO_LIST_LOCKED = WIN32_ERROR(0xe0000212);
  static const ERROR_DEVINFO_DATA_LOCKED = WIN32_ERROR(0xe0000213);
  static const ERROR_DI_BAD_PATH = WIN32_ERROR(0xe0000214);
  static const ERROR_NO_CLASSINSTALL_PARAMS = WIN32_ERROR(0xe0000215);
  static const ERROR_FILEQUEUE_LOCKED = WIN32_ERROR(0xe0000216);
  static const ERROR_BAD_SERVICE_INSTALLSECT = WIN32_ERROR(0xe0000217);
  static const ERROR_NO_CLASS_DRIVER_LIST = WIN32_ERROR(0xe0000218);
  static const ERROR_NO_ASSOCIATED_SERVICE = WIN32_ERROR(0xe0000219);
  static const ERROR_NO_DEFAULT_DEVICE_INTERFACE = WIN32_ERROR(0xe000021a);
  static const ERROR_DEVICE_INTERFACE_ACTIVE = WIN32_ERROR(0xe000021b);
  static const ERROR_DEVICE_INTERFACE_REMOVED = WIN32_ERROR(0xe000021c);
  static const ERROR_BAD_INTERFACE_INSTALLSECT = WIN32_ERROR(0xe000021d);
  static const ERROR_NO_SUCH_INTERFACE_CLASS = WIN32_ERROR(0xe000021e);
  static const ERROR_INVALID_REFERENCE_STRING = WIN32_ERROR(0xe000021f);
  static const ERROR_INVALID_MACHINENAME = WIN32_ERROR(0xe0000220);
  static const ERROR_REMOTE_COMM_FAILURE = WIN32_ERROR(0xe0000221);
  static const ERROR_MACHINE_UNAVAILABLE = WIN32_ERROR(0xe0000222);
  static const ERROR_NO_CONFIGMGR_SERVICES = WIN32_ERROR(0xe0000223);
  static const ERROR_INVALID_PROPPAGE_PROVIDER = WIN32_ERROR(0xe0000224);
  static const ERROR_NO_SUCH_DEVICE_INTERFACE = WIN32_ERROR(0xe0000225);
  static const ERROR_DI_POSTPROCESSING_REQUIRED = WIN32_ERROR(0xe0000226);
  static const ERROR_INVALID_COINSTALLER = WIN32_ERROR(0xe0000227);
  static const ERROR_NO_COMPAT_DRIVERS = WIN32_ERROR(0xe0000228);
  static const ERROR_NO_DEVICE_ICON = WIN32_ERROR(0xe0000229);
  static const ERROR_INVALID_INF_LOGCONFIG = WIN32_ERROR(0xe000022a);
  static const ERROR_DI_DONT_INSTALL = WIN32_ERROR(0xe000022b);
  static const ERROR_INVALID_FILTER_DRIVER = WIN32_ERROR(0xe000022c);
  static const ERROR_NON_WINDOWS_NT_DRIVER = WIN32_ERROR(0xe000022d);
  static const ERROR_NON_WINDOWS_DRIVER = WIN32_ERROR(0xe000022e);
  static const ERROR_NO_CATALOG_FOR_OEM_INF = WIN32_ERROR(0xe000022f);
  static const ERROR_DEVINSTALL_QUEUE_NONNATIVE = WIN32_ERROR(0xe0000230);
  static const ERROR_NOT_DISABLEABLE = WIN32_ERROR(0xe0000231);
  static const ERROR_CANT_REMOVE_DEVINST = WIN32_ERROR(0xe0000232);
  static const ERROR_INVALID_TARGET = WIN32_ERROR(0xe0000233);
  static const ERROR_DRIVER_NONNATIVE = WIN32_ERROR(0xe0000234);
  static const ERROR_IN_WOW64 = WIN32_ERROR(0xe0000235);
  static const ERROR_SET_SYSTEM_RESTORE_POINT = WIN32_ERROR(0xe0000236);
  static const ERROR_SCE_DISABLED = WIN32_ERROR(0xe0000238);
  static const ERROR_UNKNOWN_EXCEPTION = WIN32_ERROR(0xe0000239);
  static const ERROR_PNP_REGISTRY_ERROR = WIN32_ERROR(0xe000023a);
  static const ERROR_REMOTE_REQUEST_UNSUPPORTED = WIN32_ERROR(0xe000023b);
  static const ERROR_NOT_AN_INSTALLED_OEM_INF = WIN32_ERROR(0xe000023c);
  static const ERROR_INF_IN_USE_BY_DEVICES = WIN32_ERROR(0xe000023d);
  static const ERROR_DI_FUNCTION_OBSOLETE = WIN32_ERROR(0xe000023e);
  static const ERROR_NO_AUTHENTICODE_CATALOG = WIN32_ERROR(0xe000023f);
  static const ERROR_AUTHENTICODE_DISALLOWED = WIN32_ERROR(0xe0000240);
  static const ERROR_AUTHENTICODE_TRUSTED_PUBLISHER = WIN32_ERROR(0xe0000241);
  static const ERROR_AUTHENTICODE_TRUST_NOT_ESTABLISHED =
      WIN32_ERROR(0xe0000242);
  static const ERROR_AUTHENTICODE_PUBLISHER_NOT_TRUSTED =
      WIN32_ERROR(0xe0000243);
  static const ERROR_SIGNATURE_OSATTRIBUTE_MISMATCH = WIN32_ERROR(0xe0000244);
  static const ERROR_ONLY_VALIDATE_VIA_AUTHENTICODE = WIN32_ERROR(0xe0000245);
  static const ERROR_DEVICE_INSTALLER_NOT_READY = WIN32_ERROR(0xe0000246);
  static const ERROR_DRIVER_STORE_ADD_FAILED = WIN32_ERROR(0xe0000247);
  static const ERROR_DEVICE_INSTALL_BLOCKED = WIN32_ERROR(0xe0000248);
  static const ERROR_DRIVER_INSTALL_BLOCKED = WIN32_ERROR(0xe0000249);
  static const ERROR_WRONG_INF_TYPE = WIN32_ERROR(0xe000024a);
  static const ERROR_FILE_HASH_NOT_IN_CATALOG = WIN32_ERROR(0xe000024b);
  static const ERROR_DRIVER_STORE_DELETE_FAILED = WIN32_ERROR(0xe000024c);
  static const ERROR_UNRECOVERABLE_STACK_OVERFLOW = WIN32_ERROR(0xe0000300);
  static const ERROR_NO_DEFAULT_INTERFACE_DEVICE = WIN32_ERROR(0xe000021a);
  static const ERROR_INTERFACE_DEVICE_ACTIVE = WIN32_ERROR(0xe000021b);
  static const ERROR_INTERFACE_DEVICE_REMOVED = WIN32_ERROR(0xe000021c);
  static const ERROR_NO_SUCH_INTERFACE_DEVICE = WIN32_ERROR(0xe0000225);
  static const ERROR_NOT_INSTALLED = WIN32_ERROR(0xe0001000);
  static const ERROR_SUCCESS = WIN32_ERROR(0x00000000);
  static const ERROR_INVALID_FUNCTION = WIN32_ERROR(0x00000001);
  static const ERROR_FILE_NOT_FOUND = WIN32_ERROR(0x00000002);
  static const ERROR_PATH_NOT_FOUND = WIN32_ERROR(0x00000003);
  static const ERROR_TOO_MANY_OPEN_FILES = WIN32_ERROR(0x00000004);
  static const ERROR_ACCESS_DENIED = WIN32_ERROR(0x00000005);
  static const ERROR_INVALID_HANDLE = WIN32_ERROR(0x00000006);
  static const ERROR_ARENA_TRASHED = WIN32_ERROR(0x00000007);
  static const ERROR_NOT_ENOUGH_MEMORY = WIN32_ERROR(0x00000008);
  static const ERROR_INVALID_BLOCK = WIN32_ERROR(0x00000009);
  static const ERROR_BAD_ENVIRONMENT = WIN32_ERROR(0x0000000a);
  static const ERROR_BAD_FORMAT = WIN32_ERROR(0x0000000b);
  static const ERROR_INVALID_ACCESS = WIN32_ERROR(0x0000000c);
  static const ERROR_INVALID_DATA = WIN32_ERROR(0x0000000d);
  static const ERROR_OUTOFMEMORY = WIN32_ERROR(0x0000000e);
  static const ERROR_INVALID_DRIVE = WIN32_ERROR(0x0000000f);
  static const ERROR_CURRENT_DIRECTORY = WIN32_ERROR(0x00000010);
  static const ERROR_NOT_SAME_DEVICE = WIN32_ERROR(0x00000011);
  static const ERROR_NO_MORE_FILES = WIN32_ERROR(0x00000012);
  static const ERROR_WRITE_PROTECT = WIN32_ERROR(0x00000013);
  static const ERROR_BAD_UNIT = WIN32_ERROR(0x00000014);
  static const ERROR_NOT_READY = WIN32_ERROR(0x00000015);
  static const ERROR_BAD_COMMAND = WIN32_ERROR(0x00000016);
  static const ERROR_CRC = WIN32_ERROR(0x00000017);
  static const ERROR_BAD_LENGTH = WIN32_ERROR(0x00000018);
  static const ERROR_SEEK = WIN32_ERROR(0x00000019);
  static const ERROR_NOT_DOS_DISK = WIN32_ERROR(0x0000001a);
  static const ERROR_SECTOR_NOT_FOUND = WIN32_ERROR(0x0000001b);
  static const ERROR_OUT_OF_PAPER = WIN32_ERROR(0x0000001c);
  static const ERROR_WRITE_FAULT = WIN32_ERROR(0x0000001d);
  static const ERROR_READ_FAULT = WIN32_ERROR(0x0000001e);
  static const ERROR_GEN_FAILURE = WIN32_ERROR(0x0000001f);
  static const ERROR_SHARING_VIOLATION = WIN32_ERROR(0x00000020);
  static const ERROR_LOCK_VIOLATION = WIN32_ERROR(0x00000021);
  static const ERROR_WRONG_DISK = WIN32_ERROR(0x00000022);
  static const ERROR_SHARING_BUFFER_EXCEEDED = WIN32_ERROR(0x00000024);
  static const ERROR_HANDLE_EOF = WIN32_ERROR(0x00000026);
  static const ERROR_HANDLE_DISK_FULL = WIN32_ERROR(0x00000027);
  static const ERROR_NOT_SUPPORTED = WIN32_ERROR(0x00000032);
  static const ERROR_REM_NOT_LIST = WIN32_ERROR(0x00000033);
  static const ERROR_DUP_NAME = WIN32_ERROR(0x00000034);
  static const ERROR_BAD_NETPATH = WIN32_ERROR(0x00000035);
  static const ERROR_NETWORK_BUSY = WIN32_ERROR(0x00000036);
  static const ERROR_DEV_NOT_EXIST = WIN32_ERROR(0x00000037);
  static const ERROR_TOO_MANY_CMDS = WIN32_ERROR(0x00000038);
  static const ERROR_ADAP_HDW_ERR = WIN32_ERROR(0x00000039);
  static const ERROR_BAD_NET_RESP = WIN32_ERROR(0x0000003a);
  static const ERROR_UNEXP_NET_ERR = WIN32_ERROR(0x0000003b);
  static const ERROR_BAD_REM_ADAP = WIN32_ERROR(0x0000003c);
  static const ERROR_PRINTQ_FULL = WIN32_ERROR(0x0000003d);
  static const ERROR_NO_SPOOL_SPACE = WIN32_ERROR(0x0000003e);
  static const ERROR_PRINT_CANCELLED = WIN32_ERROR(0x0000003f);
  static const ERROR_NETNAME_DELETED = WIN32_ERROR(0x00000040);
  static const ERROR_NETWORK_ACCESS_DENIED = WIN32_ERROR(0x00000041);
  static const ERROR_BAD_DEV_TYPE = WIN32_ERROR(0x00000042);
  static const ERROR_BAD_NET_NAME = WIN32_ERROR(0x00000043);
  static const ERROR_TOO_MANY_NAMES = WIN32_ERROR(0x00000044);
  static const ERROR_TOO_MANY_SESS = WIN32_ERROR(0x00000045);
  static const ERROR_SHARING_PAUSED = WIN32_ERROR(0x00000046);
  static const ERROR_REQ_NOT_ACCEP = WIN32_ERROR(0x00000047);
  static const ERROR_REDIR_PAUSED = WIN32_ERROR(0x00000048);
  static const ERROR_FILE_EXISTS = WIN32_ERROR(0x00000050);
  static const ERROR_CANNOT_MAKE = WIN32_ERROR(0x00000052);
  static const ERROR_FAIL_I24 = WIN32_ERROR(0x00000053);
  static const ERROR_OUT_OF_STRUCTURES = WIN32_ERROR(0x00000054);
  static const ERROR_ALREADY_ASSIGNED = WIN32_ERROR(0x00000055);
  static const ERROR_INVALID_PASSWORD = WIN32_ERROR(0x00000056);
  static const ERROR_INVALID_PARAMETER = WIN32_ERROR(0x00000057);
  static const ERROR_NET_WRITE_FAULT = WIN32_ERROR(0x00000058);
  static const ERROR_NO_PROC_SLOTS = WIN32_ERROR(0x00000059);
  static const ERROR_TOO_MANY_SEMAPHORES = WIN32_ERROR(0x00000064);
  static const ERROR_EXCL_SEM_ALREADY_OWNED = WIN32_ERROR(0x00000065);
  static const ERROR_SEM_IS_SET = WIN32_ERROR(0x00000066);
  static const ERROR_TOO_MANY_SEM_REQUESTS = WIN32_ERROR(0x00000067);
  static const ERROR_INVALID_AT_INTERRUPT_TIME = WIN32_ERROR(0x00000068);
  static const ERROR_SEM_OWNER_DIED = WIN32_ERROR(0x00000069);
  static const ERROR_SEM_USER_LIMIT = WIN32_ERROR(0x0000006a);
  static const ERROR_DISK_CHANGE = WIN32_ERROR(0x0000006b);
  static const ERROR_DRIVE_LOCKED = WIN32_ERROR(0x0000006c);
  static const ERROR_BROKEN_PIPE = WIN32_ERROR(0x0000006d);
  static const ERROR_OPEN_FAILED = WIN32_ERROR(0x0000006e);
  static const ERROR_BUFFER_OVERFLOW = WIN32_ERROR(0x0000006f);
  static const ERROR_DISK_FULL = WIN32_ERROR(0x00000070);
  static const ERROR_NO_MORE_SEARCH_HANDLES = WIN32_ERROR(0x00000071);
  static const ERROR_INVALID_TARGET_HANDLE = WIN32_ERROR(0x00000072);
  static const ERROR_INVALID_CATEGORY = WIN32_ERROR(0x00000075);
  static const ERROR_INVALID_VERIFY_SWITCH = WIN32_ERROR(0x00000076);
  static const ERROR_BAD_DRIVER_LEVEL = WIN32_ERROR(0x00000077);
  static const ERROR_CALL_NOT_IMPLEMENTED = WIN32_ERROR(0x00000078);
  static const ERROR_SEM_TIMEOUT = WIN32_ERROR(0x00000079);
  static const ERROR_INSUFFICIENT_BUFFER = WIN32_ERROR(0x0000007a);
  static const ERROR_INVALID_NAME = WIN32_ERROR(0x0000007b);
  static const ERROR_INVALID_LEVEL = WIN32_ERROR(0x0000007c);
  static const ERROR_NO_VOLUME_LABEL = WIN32_ERROR(0x0000007d);
  static const ERROR_MOD_NOT_FOUND = WIN32_ERROR(0x0000007e);
  static const ERROR_PROC_NOT_FOUND = WIN32_ERROR(0x0000007f);
  static const ERROR_WAIT_NO_CHILDREN = WIN32_ERROR(0x00000080);
  static const ERROR_CHILD_NOT_COMPLETE = WIN32_ERROR(0x00000081);
  static const ERROR_DIRECT_ACCESS_HANDLE = WIN32_ERROR(0x00000082);
  static const ERROR_NEGATIVE_SEEK = WIN32_ERROR(0x00000083);
  static const ERROR_SEEK_ON_DEVICE = WIN32_ERROR(0x00000084);
  static const ERROR_IS_JOIN_TARGET = WIN32_ERROR(0x00000085);
  static const ERROR_IS_JOINED = WIN32_ERROR(0x00000086);
  static const ERROR_IS_SUBSTED = WIN32_ERROR(0x00000087);
  static const ERROR_NOT_JOINED = WIN32_ERROR(0x00000088);
  static const ERROR_NOT_SUBSTED = WIN32_ERROR(0x00000089);
  static const ERROR_JOIN_TO_JOIN = WIN32_ERROR(0x0000008a);
  static const ERROR_SUBST_TO_SUBST = WIN32_ERROR(0x0000008b);
  static const ERROR_JOIN_TO_SUBST = WIN32_ERROR(0x0000008c);
  static const ERROR_SUBST_TO_JOIN = WIN32_ERROR(0x0000008d);
  static const ERROR_BUSY_DRIVE = WIN32_ERROR(0x0000008e);
  static const ERROR_SAME_DRIVE = WIN32_ERROR(0x0000008f);
  static const ERROR_DIR_NOT_ROOT = WIN32_ERROR(0x00000090);
  static const ERROR_DIR_NOT_EMPTY = WIN32_ERROR(0x00000091);
  static const ERROR_IS_SUBST_PATH = WIN32_ERROR(0x00000092);
  static const ERROR_IS_JOIN_PATH = WIN32_ERROR(0x00000093);
  static const ERROR_PATH_BUSY = WIN32_ERROR(0x00000094);
  static const ERROR_IS_SUBST_TARGET = WIN32_ERROR(0x00000095);
  static const ERROR_SYSTEM_TRACE = WIN32_ERROR(0x00000096);
  static const ERROR_INVALID_EVENT_COUNT = WIN32_ERROR(0x00000097);
  static const ERROR_TOO_MANY_MUXWAITERS = WIN32_ERROR(0x00000098);
  static const ERROR_INVALID_LIST_FORMAT = WIN32_ERROR(0x00000099);
  static const ERROR_LABEL_TOO_LONG = WIN32_ERROR(0x0000009a);
  static const ERROR_TOO_MANY_TCBS = WIN32_ERROR(0x0000009b);
  static const ERROR_SIGNAL_REFUSED = WIN32_ERROR(0x0000009c);
  static const ERROR_DISCARDED = WIN32_ERROR(0x0000009d);
  static const ERROR_NOT_LOCKED = WIN32_ERROR(0x0000009e);
  static const ERROR_BAD_THREADID_ADDR = WIN32_ERROR(0x0000009f);
  static const ERROR_BAD_ARGUMENTS = WIN32_ERROR(0x000000a0);
  static const ERROR_BAD_PATHNAME = WIN32_ERROR(0x000000a1);
  static const ERROR_SIGNAL_PENDING = WIN32_ERROR(0x000000a2);
  static const ERROR_MAX_THRDS_REACHED = WIN32_ERROR(0x000000a4);
  static const ERROR_LOCK_FAILED = WIN32_ERROR(0x000000a7);
  static const ERROR_BUSY = WIN32_ERROR(0x000000aa);
  static const ERROR_DEVICE_SUPPORT_IN_PROGRESS = WIN32_ERROR(0x000000ab);
  static const ERROR_CANCEL_VIOLATION = WIN32_ERROR(0x000000ad);
  static const ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = WIN32_ERROR(0x000000ae);
  static const ERROR_INVALID_SEGMENT_NUMBER = WIN32_ERROR(0x000000b4);
  static const ERROR_INVALID_ORDINAL = WIN32_ERROR(0x000000b6);
  static const ERROR_ALREADY_EXISTS = WIN32_ERROR(0x000000b7);
  static const ERROR_INVALID_FLAG_NUMBER = WIN32_ERROR(0x000000ba);
  static const ERROR_SEM_NOT_FOUND = WIN32_ERROR(0x000000bb);
  static const ERROR_INVALID_STARTING_CODESEG = WIN32_ERROR(0x000000bc);
  static const ERROR_INVALID_STACKSEG = WIN32_ERROR(0x000000bd);
  static const ERROR_INVALID_MODULETYPE = WIN32_ERROR(0x000000be);
  static const ERROR_INVALID_EXE_SIGNATURE = WIN32_ERROR(0x000000bf);
  static const ERROR_EXE_MARKED_INVALID = WIN32_ERROR(0x000000c0);
  static const ERROR_BAD_EXE_FORMAT = WIN32_ERROR(0x000000c1);
  static const ERROR_ITERATED_DATA_EXCEEDS_64k = WIN32_ERROR(0x000000c2);
  static const ERROR_INVALID_MINALLOCSIZE = WIN32_ERROR(0x000000c3);
  static const ERROR_DYNLINK_FROM_INVALID_RING = WIN32_ERROR(0x000000c4);
  static const ERROR_IOPL_NOT_ENABLED = WIN32_ERROR(0x000000c5);
  static const ERROR_INVALID_SEGDPL = WIN32_ERROR(0x000000c6);
  static const ERROR_AUTODATASEG_EXCEEDS_64k = WIN32_ERROR(0x000000c7);
  static const ERROR_RING2SEG_MUST_BE_MOVABLE = WIN32_ERROR(0x000000c8);
  static const ERROR_RELOC_CHAIN_XEEDS_SEGLIM = WIN32_ERROR(0x000000c9);
  static const ERROR_INFLOOP_IN_RELOC_CHAIN = WIN32_ERROR(0x000000ca);
  static const ERROR_ENVVAR_NOT_FOUND = WIN32_ERROR(0x000000cb);
  static const ERROR_NO_SIGNAL_SENT = WIN32_ERROR(0x000000cd);
  static const ERROR_FILENAME_EXCED_RANGE = WIN32_ERROR(0x000000ce);
  static const ERROR_RING2_STACK_IN_USE = WIN32_ERROR(0x000000cf);
  static const ERROR_META_EXPANSION_TOO_LONG = WIN32_ERROR(0x000000d0);
  static const ERROR_INVALID_SIGNAL_NUMBER = WIN32_ERROR(0x000000d1);
  static const ERROR_THREAD_1_INACTIVE = WIN32_ERROR(0x000000d2);
  static const ERROR_LOCKED = WIN32_ERROR(0x000000d4);
  static const ERROR_TOO_MANY_MODULES = WIN32_ERROR(0x000000d6);
  static const ERROR_NESTING_NOT_ALLOWED = WIN32_ERROR(0x000000d7);
  static const ERROR_EXE_MACHINE_TYPE_MISMATCH = WIN32_ERROR(0x000000d8);
  static const ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY = WIN32_ERROR(0x000000d9);
  static const ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY =
      WIN32_ERROR(0x000000da);
  static const ERROR_FILE_CHECKED_OUT = WIN32_ERROR(0x000000dc);
  static const ERROR_CHECKOUT_REQUIRED = WIN32_ERROR(0x000000dd);
  static const ERROR_BAD_FILE_TYPE = WIN32_ERROR(0x000000de);
  static const ERROR_FILE_TOO_LARGE = WIN32_ERROR(0x000000df);
  static const ERROR_FORMS_AUTH_REQUIRED = WIN32_ERROR(0x000000e0);
  static const ERROR_VIRUS_INFECTED = WIN32_ERROR(0x000000e1);
  static const ERROR_VIRUS_DELETED = WIN32_ERROR(0x000000e2);
  static const ERROR_PIPE_LOCAL = WIN32_ERROR(0x000000e5);
  static const ERROR_BAD_PIPE = WIN32_ERROR(0x000000e6);
  static const ERROR_PIPE_BUSY = WIN32_ERROR(0x000000e7);
  static const ERROR_NO_DATA = WIN32_ERROR(0x000000e8);
  static const ERROR_PIPE_NOT_CONNECTED = WIN32_ERROR(0x000000e9);
  static const ERROR_MORE_DATA = WIN32_ERROR(0x000000ea);
  static const ERROR_NO_WORK_DONE = WIN32_ERROR(0x000000eb);
  static const ERROR_VC_DISCONNECTED = WIN32_ERROR(0x000000f0);
  static const ERROR_INVALID_EA_NAME = WIN32_ERROR(0x000000fe);
  static const ERROR_EA_LIST_INCONSISTENT = WIN32_ERROR(0x000000ff);
  static const ERROR_NO_MORE_ITEMS = WIN32_ERROR(0x00000103);
  static const ERROR_CANNOT_COPY = WIN32_ERROR(0x0000010a);
  static const ERROR_DIRECTORY = WIN32_ERROR(0x0000010b);
  static const ERROR_EAS_DIDNT_FIT = WIN32_ERROR(0x00000113);
  static const ERROR_EA_FILE_CORRUPT = WIN32_ERROR(0x00000114);
  static const ERROR_EA_TABLE_FULL = WIN32_ERROR(0x00000115);
  static const ERROR_INVALID_EA_HANDLE = WIN32_ERROR(0x00000116);
  static const ERROR_EAS_NOT_SUPPORTED = WIN32_ERROR(0x0000011a);
  static const ERROR_NOT_OWNER = WIN32_ERROR(0x00000120);
  static const ERROR_TOO_MANY_POSTS = WIN32_ERROR(0x0000012a);
  static const ERROR_PARTIAL_COPY = WIN32_ERROR(0x0000012b);
  static const ERROR_OPLOCK_NOT_GRANTED = WIN32_ERROR(0x0000012c);
  static const ERROR_INVALID_OPLOCK_PROTOCOL = WIN32_ERROR(0x0000012d);
  static const ERROR_DISK_TOO_FRAGMENTED = WIN32_ERROR(0x0000012e);
  static const ERROR_DELETE_PENDING = WIN32_ERROR(0x0000012f);
  static const ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING =
      WIN32_ERROR(0x00000130);
  static const ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME =
      WIN32_ERROR(0x00000131);
  static const ERROR_SECURITY_STREAM_IS_INCONSISTENT = WIN32_ERROR(0x00000132);
  static const ERROR_INVALID_LOCK_RANGE = WIN32_ERROR(0x00000133);
  static const ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT = WIN32_ERROR(0x00000134);
  static const ERROR_NOTIFICATION_GUID_ALREADY_DEFINED =
      WIN32_ERROR(0x00000135);
  static const ERROR_INVALID_EXCEPTION_HANDLER = WIN32_ERROR(0x00000136);
  static const ERROR_DUPLICATE_PRIVILEGES = WIN32_ERROR(0x00000137);
  static const ERROR_NO_RANGES_PROCESSED = WIN32_ERROR(0x00000138);
  static const ERROR_NOT_ALLOWED_ON_SYSTEM_FILE = WIN32_ERROR(0x00000139);
  static const ERROR_DISK_RESOURCES_EXHAUSTED = WIN32_ERROR(0x0000013a);
  static const ERROR_INVALID_TOKEN = WIN32_ERROR(0x0000013b);
  static const ERROR_DEVICE_FEATURE_NOT_SUPPORTED = WIN32_ERROR(0x0000013c);
  static const ERROR_MR_MID_NOT_FOUND = WIN32_ERROR(0x0000013d);
  static const ERROR_SCOPE_NOT_FOUND = WIN32_ERROR(0x0000013e);
  static const ERROR_UNDEFINED_SCOPE = WIN32_ERROR(0x0000013f);
  static const ERROR_INVALID_CAP = WIN32_ERROR(0x00000140);
  static const ERROR_DEVICE_UNREACHABLE = WIN32_ERROR(0x00000141);
  static const ERROR_DEVICE_NO_RESOURCES = WIN32_ERROR(0x00000142);
  static const ERROR_DATA_CHECKSUM_ERROR = WIN32_ERROR(0x00000143);
  static const ERROR_INTERMIXED_KERNEL_EA_OPERATION = WIN32_ERROR(0x00000144);
  static const ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED = WIN32_ERROR(0x00000146);
  static const ERROR_OFFSET_ALIGNMENT_VIOLATION = WIN32_ERROR(0x00000147);
  static const ERROR_INVALID_FIELD_IN_PARAMETER_LIST = WIN32_ERROR(0x00000148);
  static const ERROR_OPERATION_IN_PROGRESS = WIN32_ERROR(0x00000149);
  static const ERROR_BAD_DEVICE_PATH = WIN32_ERROR(0x0000014a);
  static const ERROR_TOO_MANY_DESCRIPTORS = WIN32_ERROR(0x0000014b);
  static const ERROR_SCRUB_DATA_DISABLED = WIN32_ERROR(0x0000014c);
  static const ERROR_NOT_REDUNDANT_STORAGE = WIN32_ERROR(0x0000014d);
  static const ERROR_RESIDENT_FILE_NOT_SUPPORTED = WIN32_ERROR(0x0000014e);
  static const ERROR_COMPRESSED_FILE_NOT_SUPPORTED = WIN32_ERROR(0x0000014f);
  static const ERROR_DIRECTORY_NOT_SUPPORTED = WIN32_ERROR(0x00000150);
  static const ERROR_NOT_READ_FROM_COPY = WIN32_ERROR(0x00000151);
  static const ERROR_FT_WRITE_FAILURE = WIN32_ERROR(0x00000152);
  static const ERROR_FT_DI_SCAN_REQUIRED = WIN32_ERROR(0x00000153);
  static const ERROR_INVALID_KERNEL_INFO_VERSION = WIN32_ERROR(0x00000154);
  static const ERROR_INVALID_PEP_INFO_VERSION = WIN32_ERROR(0x00000155);
  static const ERROR_OBJECT_NOT_EXTERNALLY_BACKED = WIN32_ERROR(0x00000156);
  static const ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN =
      WIN32_ERROR(0x00000157);
  static const ERROR_COMPRESSION_NOT_BENEFICIAL = WIN32_ERROR(0x00000158);
  static const ERROR_STORAGE_TOPOLOGY_ID_MISMATCH = WIN32_ERROR(0x00000159);
  static const ERROR_BLOCKED_BY_PARENTAL_CONTROLS = WIN32_ERROR(0x0000015a);
  static const ERROR_BLOCK_TOO_MANY_REFERENCES = WIN32_ERROR(0x0000015b);
  static const ERROR_MARKED_TO_DISALLOW_WRITES = WIN32_ERROR(0x0000015c);
  static const ERROR_ENCLAVE_FAILURE = WIN32_ERROR(0x0000015d);
  static const ERROR_FAIL_NOACTION_REBOOT = WIN32_ERROR(0x0000015e);
  static const ERROR_FAIL_SHUTDOWN = WIN32_ERROR(0x0000015f);
  static const ERROR_FAIL_RESTART = WIN32_ERROR(0x00000160);
  static const ERROR_MAX_SESSIONS_REACHED = WIN32_ERROR(0x00000161);
  static const ERROR_NETWORK_ACCESS_DENIED_EDP = WIN32_ERROR(0x00000162);
  static const ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL =
      WIN32_ERROR(0x00000163);
  static const ERROR_EDP_POLICY_DENIES_OPERATION = WIN32_ERROR(0x00000164);
  static const ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED = WIN32_ERROR(0x00000165);
  static const ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT =
      WIN32_ERROR(0x00000166);
  static const ERROR_DEVICE_IN_MAINTENANCE = WIN32_ERROR(0x00000167);
  static const ERROR_NOT_SUPPORTED_ON_DAX = WIN32_ERROR(0x00000168);
  static const ERROR_DAX_MAPPING_EXISTS = WIN32_ERROR(0x00000169);
  static const ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING = WIN32_ERROR(0x0000016a);
  static const ERROR_CLOUD_FILE_METADATA_CORRUPT = WIN32_ERROR(0x0000016b);
  static const ERROR_CLOUD_FILE_METADATA_TOO_LARGE = WIN32_ERROR(0x0000016c);
  static const ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE =
      WIN32_ERROR(0x0000016d);
  static const ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH =
      WIN32_ERROR(0x0000016e);
  static const ERROR_CHILD_PROCESS_BLOCKED = WIN32_ERROR(0x0000016f);
  static const ERROR_STORAGE_LOST_DATA_PERSISTENCE = WIN32_ERROR(0x00000170);
  static const ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE =
      WIN32_ERROR(0x00000171);
  static const ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT =
      WIN32_ERROR(0x00000172);
  static const ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY = WIN32_ERROR(0x00000173);
  static const ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN =
      WIN32_ERROR(0x00000174);
  static const ERROR_GDI_HANDLE_LEAK = WIN32_ERROR(0x00000175);
  static const ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS =
      WIN32_ERROR(0x00000176);
  static const ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED =
      WIN32_ERROR(0x00000177);
  static const ERROR_NOT_A_CLOUD_FILE = WIN32_ERROR(0x00000178);
  static const ERROR_CLOUD_FILE_NOT_IN_SYNC = WIN32_ERROR(0x00000179);
  static const ERROR_CLOUD_FILE_ALREADY_CONNECTED = WIN32_ERROR(0x0000017a);
  static const ERROR_CLOUD_FILE_NOT_SUPPORTED = WIN32_ERROR(0x0000017b);
  static const ERROR_CLOUD_FILE_INVALID_REQUEST = WIN32_ERROR(0x0000017c);
  static const ERROR_CLOUD_FILE_READ_ONLY_VOLUME = WIN32_ERROR(0x0000017d);
  static const ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY =
      WIN32_ERROR(0x0000017e);
  static const ERROR_CLOUD_FILE_VALIDATION_FAILED = WIN32_ERROR(0x0000017f);
  static const ERROR_SMB1_NOT_AVAILABLE = WIN32_ERROR(0x00000180);
  static const ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION =
      WIN32_ERROR(0x00000181);
  static const ERROR_CLOUD_FILE_AUTHENTICATION_FAILED = WIN32_ERROR(0x00000182);
  static const ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES =
      WIN32_ERROR(0x00000183);
  static const ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE = WIN32_ERROR(0x00000184);
  static const ERROR_CLOUD_FILE_UNSUCCESSFUL = WIN32_ERROR(0x00000185);
  static const ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT = WIN32_ERROR(0x00000186);
  static const ERROR_CLOUD_FILE_IN_USE = WIN32_ERROR(0x00000187);
  static const ERROR_CLOUD_FILE_PINNED = WIN32_ERROR(0x00000188);
  static const ERROR_CLOUD_FILE_REQUEST_ABORTED = WIN32_ERROR(0x00000189);
  static const ERROR_CLOUD_FILE_PROPERTY_CORRUPT = WIN32_ERROR(0x0000018a);
  static const ERROR_CLOUD_FILE_ACCESS_DENIED = WIN32_ERROR(0x0000018b);
  static const ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS =
      WIN32_ERROR(0x0000018c);
  static const ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT =
      WIN32_ERROR(0x0000018d);
  static const ERROR_CLOUD_FILE_REQUEST_CANCELED = WIN32_ERROR(0x0000018e);
  static const ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED = WIN32_ERROR(0x0000018f);
  static const ERROR_THREAD_MODE_ALREADY_BACKGROUND = WIN32_ERROR(0x00000190);
  static const ERROR_THREAD_MODE_NOT_BACKGROUND = WIN32_ERROR(0x00000191);
  static const ERROR_PROCESS_MODE_ALREADY_BACKGROUND = WIN32_ERROR(0x00000192);
  static const ERROR_PROCESS_MODE_NOT_BACKGROUND = WIN32_ERROR(0x00000193);
  static const ERROR_CLOUD_FILE_PROVIDER_TERMINATED = WIN32_ERROR(0x00000194);
  static const ERROR_NOT_A_CLOUD_SYNC_ROOT = WIN32_ERROR(0x00000195);
  static const ERROR_FILE_PROTECTED_UNDER_DPL = WIN32_ERROR(0x00000196);
  static const ERROR_VOLUME_NOT_CLUSTER_ALIGNED = WIN32_ERROR(0x00000197);
  static const ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND =
      WIN32_ERROR(0x00000198);
  static const ERROR_APPX_FILE_NOT_ENCRYPTED = WIN32_ERROR(0x00000199);
  static const ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED =
      WIN32_ERROR(0x0000019a);
  static const ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET =
      WIN32_ERROR(0x0000019b);
  static const ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE =
      WIN32_ERROR(0x0000019c);
  static const ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER =
      WIN32_ERROR(0x0000019d);
  static const ERROR_LINUX_SUBSYSTEM_NOT_PRESENT = WIN32_ERROR(0x0000019e);
  static const ERROR_FT_READ_FAILURE = WIN32_ERROR(0x0000019f);
  static const ERROR_STORAGE_RESERVE_ID_INVALID = WIN32_ERROR(0x000001a0);
  static const ERROR_STORAGE_RESERVE_DOES_NOT_EXIST = WIN32_ERROR(0x000001a1);
  static const ERROR_STORAGE_RESERVE_ALREADY_EXISTS = WIN32_ERROR(0x000001a2);
  static const ERROR_STORAGE_RESERVE_NOT_EMPTY = WIN32_ERROR(0x000001a3);
  static const ERROR_NOT_A_DAX_VOLUME = WIN32_ERROR(0x000001a4);
  static const ERROR_NOT_DAX_MAPPABLE = WIN32_ERROR(0x000001a5);
  static const ERROR_TIME_SENSITIVE_THREAD = WIN32_ERROR(0x000001a6);
  static const ERROR_DPL_NOT_SUPPORTED_FOR_USER = WIN32_ERROR(0x000001a7);
  static const ERROR_CASE_DIFFERING_NAMES_IN_DIR = WIN32_ERROR(0x000001a8);
  static const ERROR_FILE_NOT_SUPPORTED = WIN32_ERROR(0x000001a9);
  static const ERROR_CLOUD_FILE_REQUEST_TIMEOUT = WIN32_ERROR(0x000001aa);
  static const ERROR_NO_TASK_QUEUE = WIN32_ERROR(0x000001ab);
  static const ERROR_SRC_SRV_DLL_LOAD_FAILED = WIN32_ERROR(0x000001ac);
  static const ERROR_NOT_SUPPORTED_WITH_BTT = WIN32_ERROR(0x000001ad);
  static const ERROR_ENCRYPTION_DISABLED = WIN32_ERROR(0x000001ae);
  static const ERROR_ENCRYPTING_METADATA_DISALLOWED = WIN32_ERROR(0x000001af);
  static const ERROR_CANT_CLEAR_ENCRYPTION_FLAG = WIN32_ERROR(0x000001b0);
  static const ERROR_NO_SUCH_DEVICE = WIN32_ERROR(0x000001b1);
  static const ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED =
      WIN32_ERROR(0x000001b2);
  static const ERROR_FILE_SNAP_IN_PROGRESS = WIN32_ERROR(0x000001b3);
  static const ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED =
      WIN32_ERROR(0x000001b4);
  static const ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED = WIN32_ERROR(0x000001b5);
  static const ERROR_FILE_SNAP_IO_NOT_COORDINATED = WIN32_ERROR(0x000001b6);
  static const ERROR_FILE_SNAP_UNEXPECTED_ERROR = WIN32_ERROR(0x000001b7);
  static const ERROR_FILE_SNAP_INVALID_PARAMETER = WIN32_ERROR(0x000001b8);
  static const ERROR_UNSATISFIED_DEPENDENCIES = WIN32_ERROR(0x000001b9);
  static const ERROR_CASE_SENSITIVE_PATH = WIN32_ERROR(0x000001ba);
  static const ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR = WIN32_ERROR(0x000001bb);
  static const ERROR_LINUX_SUBSYSTEM_UPDATE_REQUIRED = WIN32_ERROR(0x000001bc);
  static const ERROR_DLP_POLICY_WARNS_AGAINST_OPERATION =
      WIN32_ERROR(0x000001bd);
  static const ERROR_DLP_POLICY_DENIES_OPERATION = WIN32_ERROR(0x000001be);
  static const ERROR_SECURITY_DENIES_OPERATION = WIN32_ERROR(0x000001bf);
  static const ERROR_UNTRUSTED_MOUNT_POINT = WIN32_ERROR(0x000001c0);
  static const ERROR_DLP_POLICY_SILENTLY_FAIL = WIN32_ERROR(0x000001c1);
  static const ERROR_CAPAUTHZ_NOT_DEVUNLOCKED = WIN32_ERROR(0x000001c2);
  static const ERROR_CAPAUTHZ_CHANGE_TYPE = WIN32_ERROR(0x000001c3);
  static const ERROR_CAPAUTHZ_NOT_PROVISIONED = WIN32_ERROR(0x000001c4);
  static const ERROR_CAPAUTHZ_NOT_AUTHORIZED = WIN32_ERROR(0x000001c5);
  static const ERROR_CAPAUTHZ_NO_POLICY = WIN32_ERROR(0x000001c6);
  static const ERROR_CAPAUTHZ_DB_CORRUPTED = WIN32_ERROR(0x000001c7);
  static const ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG = WIN32_ERROR(0x000001c8);
  static const ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY = WIN32_ERROR(0x000001c9);
  static const ERROR_CAPAUTHZ_SCCD_PARSE_ERROR = WIN32_ERROR(0x000001ca);
  static const ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED = WIN32_ERROR(0x000001cb);
  static const ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH =
      WIN32_ERROR(0x000001cc);
  static const ERROR_CIMFS_IMAGE_CORRUPT = WIN32_ERROR(0x000001d6);
  static const ERROR_CIMFS_IMAGE_VERSION_NOT_SUPPORTED =
      WIN32_ERROR(0x000001d7);
  static const ERROR_STORAGE_STACK_ACCESS_DENIED = WIN32_ERROR(0x000001d8);
  static const ERROR_INSUFFICIENT_VIRTUAL_ADDR_RESOURCES =
      WIN32_ERROR(0x000001d9);
  static const ERROR_INDEX_OUT_OF_BOUNDS = WIN32_ERROR(0x000001da);
  static const ERROR_CLOUD_FILE_US_MESSAGE_TIMEOUT = WIN32_ERROR(0x000001db);
  static const ERROR_NOT_A_DEV_VOLUME = WIN32_ERROR(0x000001dc);
  static const ERROR_FS_GUID_MISMATCH = WIN32_ERROR(0x000001dd);
  static const ERROR_CANT_ATTACH_TO_DEV_VOLUME = WIN32_ERROR(0x000001de);
  static const ERROR_INVALID_CONFIG_VALUE = WIN32_ERROR(0x000001df);
  static const ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT = WIN32_ERROR(0x000001e0);
  static const ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT =
      WIN32_ERROR(0x000001e1);
  static const ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT =
      WIN32_ERROR(0x000001e2);
  static const ERROR_DEVICE_HARDWARE_ERROR = WIN32_ERROR(0x000001e3);
  static const ERROR_INVALID_ADDRESS = WIN32_ERROR(0x000001e7);
  static const ERROR_HAS_SYSTEM_CRITICAL_FILES = WIN32_ERROR(0x000001e8);
  static const ERROR_ENCRYPTED_FILE_NOT_SUPPORTED = WIN32_ERROR(0x000001e9);
  static const ERROR_SPARSE_FILE_NOT_SUPPORTED = WIN32_ERROR(0x000001ea);
  static const ERROR_PAGEFILE_NOT_SUPPORTED = WIN32_ERROR(0x000001eb);
  static const ERROR_VOLUME_NOT_SUPPORTED = WIN32_ERROR(0x000001ec);
  static const ERROR_NOT_SUPPORTED_WITH_BYPASSIO = WIN32_ERROR(0x000001ed);
  static const ERROR_NO_BYPASSIO_DRIVER_SUPPORT = WIN32_ERROR(0x000001ee);
  static const ERROR_NOT_SUPPORTED_WITH_ENCRYPTION = WIN32_ERROR(0x000001ef);
  static const ERROR_NOT_SUPPORTED_WITH_COMPRESSION = WIN32_ERROR(0x000001f0);
  static const ERROR_NOT_SUPPORTED_WITH_REPLICATION = WIN32_ERROR(0x000001f1);
  static const ERROR_NOT_SUPPORTED_WITH_DEDUPLICATION = WIN32_ERROR(0x000001f2);
  static const ERROR_NOT_SUPPORTED_WITH_AUDITING = WIN32_ERROR(0x000001f3);
  static const ERROR_USER_PROFILE_LOAD = WIN32_ERROR(0x000001f4);
  static const ERROR_SESSION_KEY_TOO_SHORT = WIN32_ERROR(0x000001f5);
  static const ERROR_ACCESS_DENIED_APPDATA = WIN32_ERROR(0x000001f6);
  static const ERROR_NOT_SUPPORTED_WITH_MONITORING = WIN32_ERROR(0x000001f7);
  static const ERROR_NOT_SUPPORTED_WITH_SNAPSHOT = WIN32_ERROR(0x000001f8);
  static const ERROR_NOT_SUPPORTED_WITH_VIRTUALIZATION =
      WIN32_ERROR(0x000001f9);
  static const ERROR_BYPASSIO_FLT_NOT_SUPPORTED = WIN32_ERROR(0x000001fa);
  static const ERROR_DEVICE_RESET_REQUIRED = WIN32_ERROR(0x000001fb);
  static const ERROR_VOLUME_WRITE_ACCESS_DENIED = WIN32_ERROR(0x000001fc);
  static const ERROR_NOT_SUPPORTED_WITH_CACHED_HANDLE = WIN32_ERROR(0x000001fd);
  static const ERROR_FS_METADATA_INCONSISTENT = WIN32_ERROR(0x000001fe);
  static const ERROR_BLOCK_WEAK_REFERENCE_INVALID = WIN32_ERROR(0x000001ff);
  static const ERROR_BLOCK_SOURCE_WEAK_REFERENCE_INVALID =
      WIN32_ERROR(0x00000200);
  static const ERROR_BLOCK_TARGET_WEAK_REFERENCE_INVALID =
      WIN32_ERROR(0x00000201);
  static const ERROR_BLOCK_SHARED = WIN32_ERROR(0x00000202);
  static const ERROR_VOLUME_UPGRADE_NOT_NEEDED = WIN32_ERROR(0x00000203);
  static const ERROR_VOLUME_UPGRADE_PENDING = WIN32_ERROR(0x00000204);
  static const ERROR_VOLUME_UPGRADE_DISABLED = WIN32_ERROR(0x00000205);
  static const ERROR_VOLUME_UPGRADE_DISABLED_TILL_OS_DOWNGRADE_EXPIRED =
      WIN32_ERROR(0x00000206);
  static const ERROR_ARITHMETIC_OVERFLOW = WIN32_ERROR(0x00000216);
  static const ERROR_PIPE_CONNECTED = WIN32_ERROR(0x00000217);
  static const ERROR_PIPE_LISTENING = WIN32_ERROR(0x00000218);
  static const ERROR_VERIFIER_STOP = WIN32_ERROR(0x00000219);
  static const ERROR_ABIOS_ERROR = WIN32_ERROR(0x0000021a);
  static const ERROR_WX86_WARNING = WIN32_ERROR(0x0000021b);
  static const ERROR_WX86_ERROR = WIN32_ERROR(0x0000021c);
  static const ERROR_TIMER_NOT_CANCELED = WIN32_ERROR(0x0000021d);
  static const ERROR_UNWIND = WIN32_ERROR(0x0000021e);
  static const ERROR_BAD_STACK = WIN32_ERROR(0x0000021f);
  static const ERROR_INVALID_UNWIND_TARGET = WIN32_ERROR(0x00000220);
  static const ERROR_INVALID_PORT_ATTRIBUTES = WIN32_ERROR(0x00000221);
  static const ERROR_PORT_MESSAGE_TOO_LONG = WIN32_ERROR(0x00000222);
  static const ERROR_INVALID_QUOTA_LOWER = WIN32_ERROR(0x00000223);
  static const ERROR_DEVICE_ALREADY_ATTACHED = WIN32_ERROR(0x00000224);
  static const ERROR_INSTRUCTION_MISALIGNMENT = WIN32_ERROR(0x00000225);
  static const ERROR_PROFILING_NOT_STARTED = WIN32_ERROR(0x00000226);
  static const ERROR_PROFILING_NOT_STOPPED = WIN32_ERROR(0x00000227);
  static const ERROR_COULD_NOT_INTERPRET = WIN32_ERROR(0x00000228);
  static const ERROR_PROFILING_AT_LIMIT = WIN32_ERROR(0x00000229);
  static const ERROR_CANT_WAIT = WIN32_ERROR(0x0000022a);
  static const ERROR_CANT_TERMINATE_SELF = WIN32_ERROR(0x0000022b);
  static const ERROR_UNEXPECTED_MM_CREATE_ERR = WIN32_ERROR(0x0000022c);
  static const ERROR_UNEXPECTED_MM_MAP_ERROR = WIN32_ERROR(0x0000022d);
  static const ERROR_UNEXPECTED_MM_EXTEND_ERR = WIN32_ERROR(0x0000022e);
  static const ERROR_BAD_FUNCTION_TABLE = WIN32_ERROR(0x0000022f);
  static const ERROR_NO_GUID_TRANSLATION = WIN32_ERROR(0x00000230);
  static const ERROR_INVALID_LDT_SIZE = WIN32_ERROR(0x00000231);
  static const ERROR_INVALID_LDT_OFFSET = WIN32_ERROR(0x00000233);
  static const ERROR_INVALID_LDT_DESCRIPTOR = WIN32_ERROR(0x00000234);
  static const ERROR_TOO_MANY_THREADS = WIN32_ERROR(0x00000235);
  static const ERROR_THREAD_NOT_IN_PROCESS = WIN32_ERROR(0x00000236);
  static const ERROR_PAGEFILE_QUOTA_EXCEEDED = WIN32_ERROR(0x00000237);
  static const ERROR_LOGON_SERVER_CONFLICT = WIN32_ERROR(0x00000238);
  static const ERROR_SYNCHRONIZATION_REQUIRED = WIN32_ERROR(0x00000239);
  static const ERROR_NET_OPEN_FAILED = WIN32_ERROR(0x0000023a);
  static const ERROR_IO_PRIVILEGE_FAILED = WIN32_ERROR(0x0000023b);
  static const ERROR_CONTROL_C_EXIT = WIN32_ERROR(0x0000023c);
  static const ERROR_MISSING_SYSTEMFILE = WIN32_ERROR(0x0000023d);
  static const ERROR_UNHANDLED_EXCEPTION = WIN32_ERROR(0x0000023e);
  static const ERROR_APP_INIT_FAILURE = WIN32_ERROR(0x0000023f);
  static const ERROR_PAGEFILE_CREATE_FAILED = WIN32_ERROR(0x00000240);
  static const ERROR_INVALID_IMAGE_HASH = WIN32_ERROR(0x00000241);
  static const ERROR_NO_PAGEFILE = WIN32_ERROR(0x00000242);
  static const ERROR_ILLEGAL_FLOAT_CONTEXT = WIN32_ERROR(0x00000243);
  static const ERROR_NO_EVENT_PAIR = WIN32_ERROR(0x00000244);
  static const ERROR_DOMAIN_CTRLR_CONFIG_ERROR = WIN32_ERROR(0x00000245);
  static const ERROR_ILLEGAL_CHARACTER = WIN32_ERROR(0x00000246);
  static const ERROR_UNDEFINED_CHARACTER = WIN32_ERROR(0x00000247);
  static const ERROR_FLOPPY_VOLUME = WIN32_ERROR(0x00000248);
  static const ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT = WIN32_ERROR(0x00000249);
  static const ERROR_BACKUP_CONTROLLER = WIN32_ERROR(0x0000024a);
  static const ERROR_MUTANT_LIMIT_EXCEEDED = WIN32_ERROR(0x0000024b);
  static const ERROR_FS_DRIVER_REQUIRED = WIN32_ERROR(0x0000024c);
  static const ERROR_CANNOT_LOAD_REGISTRY_FILE = WIN32_ERROR(0x0000024d);
  static const ERROR_DEBUG_ATTACH_FAILED = WIN32_ERROR(0x0000024e);
  static const ERROR_SYSTEM_PROCESS_TERMINATED = WIN32_ERROR(0x0000024f);
  static const ERROR_DATA_NOT_ACCEPTED = WIN32_ERROR(0x00000250);
  static const ERROR_VDM_HARD_ERROR = WIN32_ERROR(0x00000251);
  static const ERROR_DRIVER_CANCEL_TIMEOUT = WIN32_ERROR(0x00000252);
  static const ERROR_REPLY_MESSAGE_MISMATCH = WIN32_ERROR(0x00000253);
  static const ERROR_LOST_WRITEBEHIND_DATA = WIN32_ERROR(0x00000254);
  static const ERROR_CLIENT_SERVER_PARAMETERS_INVALID = WIN32_ERROR(0x00000255);
  static const ERROR_NOT_TINY_STREAM = WIN32_ERROR(0x00000256);
  static const ERROR_STACK_OVERFLOW_READ = WIN32_ERROR(0x00000257);
  static const ERROR_CONVERT_TO_LARGE = WIN32_ERROR(0x00000258);
  static const ERROR_FOUND_OUT_OF_SCOPE = WIN32_ERROR(0x00000259);
  static const ERROR_ALLOCATE_BUCKET = WIN32_ERROR(0x0000025a);
  static const ERROR_MARSHALL_OVERFLOW = WIN32_ERROR(0x0000025b);
  static const ERROR_INVALID_VARIANT = WIN32_ERROR(0x0000025c);
  static const ERROR_BAD_COMPRESSION_BUFFER = WIN32_ERROR(0x0000025d);
  static const ERROR_AUDIT_FAILED = WIN32_ERROR(0x0000025e);
  static const ERROR_TIMER_RESOLUTION_NOT_SET = WIN32_ERROR(0x0000025f);
  static const ERROR_INSUFFICIENT_LOGON_INFO = WIN32_ERROR(0x00000260);
  static const ERROR_BAD_DLL_ENTRYPOINT = WIN32_ERROR(0x00000261);
  static const ERROR_BAD_SERVICE_ENTRYPOINT = WIN32_ERROR(0x00000262);
  static const ERROR_IP_ADDRESS_CONFLICT1 = WIN32_ERROR(0x00000263);
  static const ERROR_IP_ADDRESS_CONFLICT2 = WIN32_ERROR(0x00000264);
  static const ERROR_REGISTRY_QUOTA_LIMIT = WIN32_ERROR(0x00000265);
  static const ERROR_NO_CALLBACK_ACTIVE = WIN32_ERROR(0x00000266);
  static const ERROR_PWD_TOO_SHORT = WIN32_ERROR(0x00000267);
  static const ERROR_PWD_TOO_RECENT = WIN32_ERROR(0x00000268);
  static const ERROR_PWD_HISTORY_CONFLICT = WIN32_ERROR(0x00000269);
  static const ERROR_UNSUPPORTED_COMPRESSION = WIN32_ERROR(0x0000026a);
  static const ERROR_INVALID_HW_PROFILE = WIN32_ERROR(0x0000026b);
  static const ERROR_INVALID_PLUGPLAY_DEVICE_PATH = WIN32_ERROR(0x0000026c);
  static const ERROR_QUOTA_LIST_INCONSISTENT = WIN32_ERROR(0x0000026d);
  static const ERROR_EVALUATION_EXPIRATION = WIN32_ERROR(0x0000026e);
  static const ERROR_ILLEGAL_DLL_RELOCATION = WIN32_ERROR(0x0000026f);
  static const ERROR_DLL_INIT_FAILED_LOGOFF = WIN32_ERROR(0x00000270);
  static const ERROR_VALIDATE_CONTINUE = WIN32_ERROR(0x00000271);
  static const ERROR_NO_MORE_MATCHES = WIN32_ERROR(0x00000272);
  static const ERROR_RANGE_LIST_CONFLICT = WIN32_ERROR(0x00000273);
  static const ERROR_SERVER_SID_MISMATCH = WIN32_ERROR(0x00000274);
  static const ERROR_CANT_ENABLE_DENY_ONLY = WIN32_ERROR(0x00000275);
  static const ERROR_FLOAT_MULTIPLE_FAULTS = WIN32_ERROR(0x00000276);
  static const ERROR_FLOAT_MULTIPLE_TRAPS = WIN32_ERROR(0x00000277);
  static const ERROR_NOINTERFACE = WIN32_ERROR(0x00000278);
  static const ERROR_DRIVER_FAILED_SLEEP = WIN32_ERROR(0x00000279);
  static const ERROR_CORRUPT_SYSTEM_FILE = WIN32_ERROR(0x0000027a);
  static const ERROR_COMMITMENT_MINIMUM = WIN32_ERROR(0x0000027b);
  static const ERROR_PNP_RESTART_ENUMERATION = WIN32_ERROR(0x0000027c);
  static const ERROR_SYSTEM_IMAGE_BAD_SIGNATURE = WIN32_ERROR(0x0000027d);
  static const ERROR_PNP_REBOOT_REQUIRED = WIN32_ERROR(0x0000027e);
  static const ERROR_INSUFFICIENT_POWER = WIN32_ERROR(0x0000027f);
  static const ERROR_MULTIPLE_FAULT_VIOLATION = WIN32_ERROR(0x00000280);
  static const ERROR_SYSTEM_SHUTDOWN = WIN32_ERROR(0x00000281);
  static const ERROR_PORT_NOT_SET = WIN32_ERROR(0x00000282);
  static const ERROR_DS_VERSION_CHECK_FAILURE = WIN32_ERROR(0x00000283);
  static const ERROR_RANGE_NOT_FOUND = WIN32_ERROR(0x00000284);
  static const ERROR_NOT_SAFE_MODE_DRIVER = WIN32_ERROR(0x00000286);
  static const ERROR_FAILED_DRIVER_ENTRY = WIN32_ERROR(0x00000287);
  static const ERROR_DEVICE_ENUMERATION_ERROR = WIN32_ERROR(0x00000288);
  static const ERROR_MOUNT_POINT_NOT_RESOLVED = WIN32_ERROR(0x00000289);
  static const ERROR_INVALID_DEVICE_OBJECT_PARAMETER = WIN32_ERROR(0x0000028a);
  static const ERROR_MCA_OCCURED = WIN32_ERROR(0x0000028b);
  static const ERROR_DRIVER_DATABASE_ERROR = WIN32_ERROR(0x0000028c);
  static const ERROR_SYSTEM_HIVE_TOO_LARGE = WIN32_ERROR(0x0000028d);
  static const ERROR_DRIVER_FAILED_PRIOR_UNLOAD = WIN32_ERROR(0x0000028e);
  static const ERROR_VOLSNAP_PREPARE_HIBERNATE = WIN32_ERROR(0x0000028f);
  static const ERROR_HIBERNATION_FAILURE = WIN32_ERROR(0x00000290);
  static const ERROR_PWD_TOO_LONG = WIN32_ERROR(0x00000291);
  static const ERROR_FILE_SYSTEM_LIMITATION = WIN32_ERROR(0x00000299);
  static const ERROR_ASSERTION_FAILURE = WIN32_ERROR(0x0000029c);
  static const ERROR_ACPI_ERROR = WIN32_ERROR(0x0000029d);
  static const ERROR_WOW_ASSERTION = WIN32_ERROR(0x0000029e);
  static const ERROR_PNP_BAD_MPS_TABLE = WIN32_ERROR(0x0000029f);
  static const ERROR_PNP_TRANSLATION_FAILED = WIN32_ERROR(0x000002a0);
  static const ERROR_PNP_IRQ_TRANSLATION_FAILED = WIN32_ERROR(0x000002a1);
  static const ERROR_PNP_INVALID_ID = WIN32_ERROR(0x000002a2);
  static const ERROR_WAKE_SYSTEM_DEBUGGER = WIN32_ERROR(0x000002a3);
  static const ERROR_HANDLES_CLOSED = WIN32_ERROR(0x000002a4);
  static const ERROR_EXTRANEOUS_INFORMATION = WIN32_ERROR(0x000002a5);
  static const ERROR_RXACT_COMMIT_NECESSARY = WIN32_ERROR(0x000002a6);
  static const ERROR_MEDIA_CHECK = WIN32_ERROR(0x000002a7);
  static const ERROR_GUID_SUBSTITUTION_MADE = WIN32_ERROR(0x000002a8);
  static const ERROR_STOPPED_ON_SYMLINK = WIN32_ERROR(0x000002a9);
  static const ERROR_LONGJUMP = WIN32_ERROR(0x000002aa);
  static const ERROR_PLUGPLAY_QUERY_VETOED = WIN32_ERROR(0x000002ab);
  static const ERROR_UNWIND_CONSOLIDATE = WIN32_ERROR(0x000002ac);
  static const ERROR_REGISTRY_HIVE_RECOVERED = WIN32_ERROR(0x000002ad);
  static const ERROR_DLL_MIGHT_BE_INSECURE = WIN32_ERROR(0x000002ae);
  static const ERROR_DLL_MIGHT_BE_INCOMPATIBLE = WIN32_ERROR(0x000002af);
  static const ERROR_DBG_EXCEPTION_NOT_HANDLED = WIN32_ERROR(0x000002b0);
  static const ERROR_DBG_REPLY_LATER = WIN32_ERROR(0x000002b1);
  static const ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE = WIN32_ERROR(0x000002b2);
  static const ERROR_DBG_TERMINATE_THREAD = WIN32_ERROR(0x000002b3);
  static const ERROR_DBG_TERMINATE_PROCESS = WIN32_ERROR(0x000002b4);
  static const ERROR_DBG_CONTROL_C = WIN32_ERROR(0x000002b5);
  static const ERROR_DBG_PRINTEXCEPTION_C = WIN32_ERROR(0x000002b6);
  static const ERROR_DBG_RIPEXCEPTION = WIN32_ERROR(0x000002b7);
  static const ERROR_DBG_CONTROL_BREAK = WIN32_ERROR(0x000002b8);
  static const ERROR_DBG_COMMAND_EXCEPTION = WIN32_ERROR(0x000002b9);
  static const ERROR_OBJECT_NAME_EXISTS = WIN32_ERROR(0x000002ba);
  static const ERROR_THREAD_WAS_SUSPENDED = WIN32_ERROR(0x000002bb);
  static const ERROR_IMAGE_NOT_AT_BASE = WIN32_ERROR(0x000002bc);
  static const ERROR_RXACT_STATE_CREATED = WIN32_ERROR(0x000002bd);
  static const ERROR_SEGMENT_NOTIFICATION = WIN32_ERROR(0x000002be);
  static const ERROR_BAD_CURRENT_DIRECTORY = WIN32_ERROR(0x000002bf);
  static const ERROR_FT_READ_RECOVERY_FROM_BACKUP = WIN32_ERROR(0x000002c0);
  static const ERROR_FT_WRITE_RECOVERY = WIN32_ERROR(0x000002c1);
  static const ERROR_IMAGE_MACHINE_TYPE_MISMATCH = WIN32_ERROR(0x000002c2);
  static const ERROR_RECEIVE_PARTIAL = WIN32_ERROR(0x000002c3);
  static const ERROR_RECEIVE_EXPEDITED = WIN32_ERROR(0x000002c4);
  static const ERROR_RECEIVE_PARTIAL_EXPEDITED = WIN32_ERROR(0x000002c5);
  static const ERROR_EVENT_DONE = WIN32_ERROR(0x000002c6);
  static const ERROR_EVENT_PENDING = WIN32_ERROR(0x000002c7);
  static const ERROR_CHECKING_FILE_SYSTEM = WIN32_ERROR(0x000002c8);
  static const ERROR_FATAL_APP_EXIT = WIN32_ERROR(0x000002c9);
  static const ERROR_PREDEFINED_HANDLE = WIN32_ERROR(0x000002ca);
  static const ERROR_WAS_UNLOCKED = WIN32_ERROR(0x000002cb);
  static const ERROR_SERVICE_NOTIFICATION = WIN32_ERROR(0x000002cc);
  static const ERROR_WAS_LOCKED = WIN32_ERROR(0x000002cd);
  static const ERROR_LOG_HARD_ERROR = WIN32_ERROR(0x000002ce);
  static const ERROR_ALREADY_WIN32 = WIN32_ERROR(0x000002cf);
  static const ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE = WIN32_ERROR(0x000002d0);
  static const ERROR_NO_YIELD_PERFORMED = WIN32_ERROR(0x000002d1);
  static const ERROR_TIMER_RESUME_IGNORED = WIN32_ERROR(0x000002d2);
  static const ERROR_ARBITRATION_UNHANDLED = WIN32_ERROR(0x000002d3);
  static const ERROR_CARDBUS_NOT_SUPPORTED = WIN32_ERROR(0x000002d4);
  static const ERROR_MP_PROCESSOR_MISMATCH = WIN32_ERROR(0x000002d5);
  static const ERROR_HIBERNATED = WIN32_ERROR(0x000002d6);
  static const ERROR_RESUME_HIBERNATION = WIN32_ERROR(0x000002d7);
  static const ERROR_FIRMWARE_UPDATED = WIN32_ERROR(0x000002d8);
  static const ERROR_DRIVERS_LEAKING_LOCKED_PAGES = WIN32_ERROR(0x000002d9);
  static const ERROR_WAKE_SYSTEM = WIN32_ERROR(0x000002da);
  static const ERROR_WAIT_1 = WIN32_ERROR(0x000002db);
  static const ERROR_WAIT_2 = WIN32_ERROR(0x000002dc);
  static const ERROR_WAIT_3 = WIN32_ERROR(0x000002dd);
  static const ERROR_WAIT_63 = WIN32_ERROR(0x000002de);
  static const ERROR_ABANDONED_WAIT_0 = WIN32_ERROR(0x000002df);
  static const ERROR_ABANDONED_WAIT_63 = WIN32_ERROR(0x000002e0);
  static const ERROR_USER_APC = WIN32_ERROR(0x000002e1);
  static const ERROR_KERNEL_APC = WIN32_ERROR(0x000002e2);
  static const ERROR_ALERTED = WIN32_ERROR(0x000002e3);
  static const ERROR_ELEVATION_REQUIRED = WIN32_ERROR(0x000002e4);
  static const ERROR_REPARSE = WIN32_ERROR(0x000002e5);
  static const ERROR_OPLOCK_BREAK_IN_PROGRESS = WIN32_ERROR(0x000002e6);
  static const ERROR_VOLUME_MOUNTED = WIN32_ERROR(0x000002e7);
  static const ERROR_RXACT_COMMITTED = WIN32_ERROR(0x000002e8);
  static const ERROR_NOTIFY_CLEANUP = WIN32_ERROR(0x000002e9);
  static const ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED = WIN32_ERROR(0x000002ea);
  static const ERROR_PAGE_FAULT_TRANSITION = WIN32_ERROR(0x000002eb);
  static const ERROR_PAGE_FAULT_DEMAND_ZERO = WIN32_ERROR(0x000002ec);
  static const ERROR_PAGE_FAULT_COPY_ON_WRITE = WIN32_ERROR(0x000002ed);
  static const ERROR_PAGE_FAULT_GUARD_PAGE = WIN32_ERROR(0x000002ee);
  static const ERROR_PAGE_FAULT_PAGING_FILE = WIN32_ERROR(0x000002ef);
  static const ERROR_CACHE_PAGE_LOCKED = WIN32_ERROR(0x000002f0);
  static const ERROR_CRASH_DUMP = WIN32_ERROR(0x000002f1);
  static const ERROR_BUFFER_ALL_ZEROS = WIN32_ERROR(0x000002f2);
  static const ERROR_REPARSE_OBJECT = WIN32_ERROR(0x000002f3);
  static const ERROR_RESOURCE_REQUIREMENTS_CHANGED = WIN32_ERROR(0x000002f4);
  static const ERROR_TRANSLATION_COMPLETE = WIN32_ERROR(0x000002f5);
  static const ERROR_NOTHING_TO_TERMINATE = WIN32_ERROR(0x000002f6);
  static const ERROR_PROCESS_NOT_IN_JOB = WIN32_ERROR(0x000002f7);
  static const ERROR_PROCESS_IN_JOB = WIN32_ERROR(0x000002f8);
  static const ERROR_VOLSNAP_HIBERNATE_READY = WIN32_ERROR(0x000002f9);
  static const ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY =
      WIN32_ERROR(0x000002fa);
  static const ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED =
      WIN32_ERROR(0x000002fb);
  static const ERROR_INTERRUPT_STILL_CONNECTED = WIN32_ERROR(0x000002fc);
  static const ERROR_WAIT_FOR_OPLOCK = WIN32_ERROR(0x000002fd);
  static const ERROR_DBG_EXCEPTION_HANDLED = WIN32_ERROR(0x000002fe);
  static const ERROR_DBG_CONTINUE = WIN32_ERROR(0x000002ff);
  static const ERROR_CALLBACK_POP_STACK = WIN32_ERROR(0x00000300);
  static const ERROR_COMPRESSION_DISABLED = WIN32_ERROR(0x00000301);
  static const ERROR_CANTFETCHBACKWARDS = WIN32_ERROR(0x00000302);
  static const ERROR_CANTSCROLLBACKWARDS = WIN32_ERROR(0x00000303);
  static const ERROR_ROWSNOTRELEASED = WIN32_ERROR(0x00000304);
  static const ERROR_BAD_ACCESSOR_FLAGS = WIN32_ERROR(0x00000305);
  static const ERROR_ERRORS_ENCOUNTERED = WIN32_ERROR(0x00000306);
  static const ERROR_NOT_CAPABLE = WIN32_ERROR(0x00000307);
  static const ERROR_REQUEST_OUT_OF_SEQUENCE = WIN32_ERROR(0x00000308);
  static const ERROR_VERSION_PARSE_ERROR = WIN32_ERROR(0x00000309);
  static const ERROR_BADSTARTPOSITION = WIN32_ERROR(0x0000030a);
  static const ERROR_MEMORY_HARDWARE = WIN32_ERROR(0x0000030b);
  static const ERROR_DISK_REPAIR_DISABLED = WIN32_ERROR(0x0000030c);
  static const ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE =
      WIN32_ERROR(0x0000030d);
  static const ERROR_SYSTEM_POWERSTATE_TRANSITION = WIN32_ERROR(0x0000030e);
  static const ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION =
      WIN32_ERROR(0x0000030f);
  static const ERROR_MCA_EXCEPTION = WIN32_ERROR(0x00000310);
  static const ERROR_ACCESS_AUDIT_BY_POLICY = WIN32_ERROR(0x00000311);
  static const ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY =
      WIN32_ERROR(0x00000312);
  static const ERROR_ABANDON_HIBERFILE = WIN32_ERROR(0x00000313);
  static const ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED =
      WIN32_ERROR(0x00000314);
  static const ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR =
      WIN32_ERROR(0x00000315);
  static const ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR =
      WIN32_ERROR(0x00000316);
  static const ERROR_BAD_MCFG_TABLE = WIN32_ERROR(0x00000317);
  static const ERROR_DISK_REPAIR_REDIRECTED = WIN32_ERROR(0x00000318);
  static const ERROR_DISK_REPAIR_UNSUCCESSFUL = WIN32_ERROR(0x00000319);
  static const ERROR_CORRUPT_LOG_OVERFULL = WIN32_ERROR(0x0000031a);
  static const ERROR_CORRUPT_LOG_CORRUPTED = WIN32_ERROR(0x0000031b);
  static const ERROR_CORRUPT_LOG_UNAVAILABLE = WIN32_ERROR(0x0000031c);
  static const ERROR_CORRUPT_LOG_DELETED_FULL = WIN32_ERROR(0x0000031d);
  static const ERROR_CORRUPT_LOG_CLEARED = WIN32_ERROR(0x0000031e);
  static const ERROR_ORPHAN_NAME_EXHAUSTED = WIN32_ERROR(0x0000031f);
  static const ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE = WIN32_ERROR(0x00000320);
  static const ERROR_CANNOT_GRANT_REQUESTED_OPLOCK = WIN32_ERROR(0x00000321);
  static const ERROR_CANNOT_BREAK_OPLOCK = WIN32_ERROR(0x00000322);
  static const ERROR_OPLOCK_HANDLE_CLOSED = WIN32_ERROR(0x00000323);
  static const ERROR_NO_ACE_CONDITION = WIN32_ERROR(0x00000324);
  static const ERROR_INVALID_ACE_CONDITION = WIN32_ERROR(0x00000325);
  static const ERROR_FILE_HANDLE_REVOKED = WIN32_ERROR(0x00000326);
  static const ERROR_IMAGE_AT_DIFFERENT_BASE = WIN32_ERROR(0x00000327);
  static const ERROR_ENCRYPTED_IO_NOT_POSSIBLE = WIN32_ERROR(0x00000328);
  static const ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS =
      WIN32_ERROR(0x00000329);
  static const ERROR_QUOTA_ACTIVITY = WIN32_ERROR(0x0000032a);
  static const ERROR_HANDLE_REVOKED = WIN32_ERROR(0x0000032b);
  static const ERROR_CALLBACK_INVOKE_INLINE = WIN32_ERROR(0x0000032c);
  static const ERROR_CPU_SET_INVALID = WIN32_ERROR(0x0000032d);
  static const ERROR_ENCLAVE_NOT_TERMINATED = WIN32_ERROR(0x0000032e);
  static const ERROR_ENCLAVE_VIOLATION = WIN32_ERROR(0x0000032f);
  static const ERROR_SERVER_TRANSPORT_CONFLICT = WIN32_ERROR(0x00000330);
  static const ERROR_CERTIFICATE_VALIDATION_PREFERENCE_CONFLICT =
      WIN32_ERROR(0x00000331);
  static const ERROR_FT_READ_FROM_COPY_FAILURE = WIN32_ERROR(0x00000332);
  static const ERROR_SECTION_DIRECT_MAP_ONLY = WIN32_ERROR(0x00000333);
  static const ERROR_EA_ACCESS_DENIED = WIN32_ERROR(0x000003e2);
  static const ERROR_OPERATION_ABORTED = WIN32_ERROR(0x000003e3);
  static const ERROR_IO_INCOMPLETE = WIN32_ERROR(0x000003e4);
  static const ERROR_IO_PENDING = WIN32_ERROR(0x000003e5);
  static const ERROR_NOACCESS = WIN32_ERROR(0x000003e6);
  static const ERROR_SWAPERROR = WIN32_ERROR(0x000003e7);
  static const ERROR_STACK_OVERFLOW = WIN32_ERROR(0x000003e9);
  static const ERROR_INVALID_MESSAGE = WIN32_ERROR(0x000003ea);
  static const ERROR_CAN_NOT_COMPLETE = WIN32_ERROR(0x000003eb);
  static const ERROR_INVALID_FLAGS = WIN32_ERROR(0x000003ec);
  static const ERROR_UNRECOGNIZED_VOLUME = WIN32_ERROR(0x000003ed);
  static const ERROR_FILE_INVALID = WIN32_ERROR(0x000003ee);
  static const ERROR_FULLSCREEN_MODE = WIN32_ERROR(0x000003ef);
  static const ERROR_NO_TOKEN = WIN32_ERROR(0x000003f0);
  static const ERROR_BADDB = WIN32_ERROR(0x000003f1);
  static const ERROR_BADKEY = WIN32_ERROR(0x000003f2);
  static const ERROR_CANTOPEN = WIN32_ERROR(0x000003f3);
  static const ERROR_CANTREAD = WIN32_ERROR(0x000003f4);
  static const ERROR_CANTWRITE = WIN32_ERROR(0x000003f5);
  static const ERROR_REGISTRY_RECOVERED = WIN32_ERROR(0x000003f6);
  static const ERROR_REGISTRY_CORRUPT = WIN32_ERROR(0x000003f7);
  static const ERROR_REGISTRY_IO_FAILED = WIN32_ERROR(0x000003f8);
  static const ERROR_NOT_REGISTRY_FILE = WIN32_ERROR(0x000003f9);
  static const ERROR_KEY_DELETED = WIN32_ERROR(0x000003fa);
  static const ERROR_NO_LOG_SPACE = WIN32_ERROR(0x000003fb);
  static const ERROR_KEY_HAS_CHILDREN = WIN32_ERROR(0x000003fc);
  static const ERROR_CHILD_MUST_BE_VOLATILE = WIN32_ERROR(0x000003fd);
  static const ERROR_NOTIFY_ENUM_DIR = WIN32_ERROR(0x000003fe);
  static const ERROR_DEPENDENT_SERVICES_RUNNING = WIN32_ERROR(0x0000041b);
  static const ERROR_INVALID_SERVICE_CONTROL = WIN32_ERROR(0x0000041c);
  static const ERROR_SERVICE_REQUEST_TIMEOUT = WIN32_ERROR(0x0000041d);
  static const ERROR_SERVICE_NO_THREAD = WIN32_ERROR(0x0000041e);
  static const ERROR_SERVICE_DATABASE_LOCKED = WIN32_ERROR(0x0000041f);
  static const ERROR_SERVICE_ALREADY_RUNNING = WIN32_ERROR(0x00000420);
  static const ERROR_INVALID_SERVICE_ACCOUNT = WIN32_ERROR(0x00000421);
  static const ERROR_SERVICE_DISABLED = WIN32_ERROR(0x00000422);
  static const ERROR_CIRCULAR_DEPENDENCY = WIN32_ERROR(0x00000423);
  static const ERROR_SERVICE_DOES_NOT_EXIST = WIN32_ERROR(0x00000424);
  static const ERROR_SERVICE_CANNOT_ACCEPT_CTRL = WIN32_ERROR(0x00000425);
  static const ERROR_SERVICE_NOT_ACTIVE = WIN32_ERROR(0x00000426);
  static const ERROR_FAILED_SERVICE_CONTROLLER_CONNECT =
      WIN32_ERROR(0x00000427);
  static const ERROR_EXCEPTION_IN_SERVICE = WIN32_ERROR(0x00000428);
  static const ERROR_DATABASE_DOES_NOT_EXIST = WIN32_ERROR(0x00000429);
  static const ERROR_SERVICE_SPECIFIC_ERROR = WIN32_ERROR(0x0000042a);
  static const ERROR_PROCESS_ABORTED = WIN32_ERROR(0x0000042b);
  static const ERROR_SERVICE_DEPENDENCY_FAIL = WIN32_ERROR(0x0000042c);
  static const ERROR_SERVICE_LOGON_FAILED = WIN32_ERROR(0x0000042d);
  static const ERROR_SERVICE_START_HANG = WIN32_ERROR(0x0000042e);
  static const ERROR_INVALID_SERVICE_LOCK = WIN32_ERROR(0x0000042f);
  static const ERROR_SERVICE_MARKED_FOR_DELETE = WIN32_ERROR(0x00000430);
  static const ERROR_SERVICE_EXISTS = WIN32_ERROR(0x00000431);
  static const ERROR_ALREADY_RUNNING_LKG = WIN32_ERROR(0x00000432);
  static const ERROR_SERVICE_DEPENDENCY_DELETED = WIN32_ERROR(0x00000433);
  static const ERROR_BOOT_ALREADY_ACCEPTED = WIN32_ERROR(0x00000434);
  static const ERROR_SERVICE_NEVER_STARTED = WIN32_ERROR(0x00000435);
  static const ERROR_DUPLICATE_SERVICE_NAME = WIN32_ERROR(0x00000436);
  static const ERROR_DIFFERENT_SERVICE_ACCOUNT = WIN32_ERROR(0x00000437);
  static const ERROR_CANNOT_DETECT_DRIVER_FAILURE = WIN32_ERROR(0x00000438);
  static const ERROR_CANNOT_DETECT_PROCESS_ABORT = WIN32_ERROR(0x00000439);
  static const ERROR_NO_RECOVERY_PROGRAM = WIN32_ERROR(0x0000043a);
  static const ERROR_SERVICE_NOT_IN_EXE = WIN32_ERROR(0x0000043b);
  static const ERROR_NOT_SAFEBOOT_SERVICE = WIN32_ERROR(0x0000043c);
  static const ERROR_END_OF_MEDIA = WIN32_ERROR(0x0000044c);
  static const ERROR_FILEMARK_DETECTED = WIN32_ERROR(0x0000044d);
  static const ERROR_BEGINNING_OF_MEDIA = WIN32_ERROR(0x0000044e);
  static const ERROR_SETMARK_DETECTED = WIN32_ERROR(0x0000044f);
  static const ERROR_NO_DATA_DETECTED = WIN32_ERROR(0x00000450);
  static const ERROR_PARTITION_FAILURE = WIN32_ERROR(0x00000451);
  static const ERROR_INVALID_BLOCK_LENGTH = WIN32_ERROR(0x00000452);
  static const ERROR_DEVICE_NOT_PARTITIONED = WIN32_ERROR(0x00000453);
  static const ERROR_UNABLE_TO_LOCK_MEDIA = WIN32_ERROR(0x00000454);
  static const ERROR_UNABLE_TO_UNLOAD_MEDIA = WIN32_ERROR(0x00000455);
  static const ERROR_MEDIA_CHANGED = WIN32_ERROR(0x00000456);
  static const ERROR_BUS_RESET = WIN32_ERROR(0x00000457);
  static const ERROR_NO_MEDIA_IN_DRIVE = WIN32_ERROR(0x00000458);
  static const ERROR_NO_UNICODE_TRANSLATION = WIN32_ERROR(0x00000459);
  static const ERROR_DLL_INIT_FAILED = WIN32_ERROR(0x0000045a);
  static const ERROR_SHUTDOWN_IN_PROGRESS = WIN32_ERROR(0x0000045b);
  static const ERROR_NO_SHUTDOWN_IN_PROGRESS = WIN32_ERROR(0x0000045c);
  static const ERROR_IO_DEVICE = WIN32_ERROR(0x0000045d);
  static const ERROR_SERIAL_NO_DEVICE = WIN32_ERROR(0x0000045e);
  static const ERROR_IRQ_BUSY = WIN32_ERROR(0x0000045f);
  static const ERROR_MORE_WRITES = WIN32_ERROR(0x00000460);
  static const ERROR_COUNTER_TIMEOUT = WIN32_ERROR(0x00000461);
  static const ERROR_FLOPPY_ID_MARK_NOT_FOUND = WIN32_ERROR(0x00000462);
  static const ERROR_FLOPPY_WRONG_CYLINDER = WIN32_ERROR(0x00000463);
  static const ERROR_FLOPPY_UNKNOWN_ERROR = WIN32_ERROR(0x00000464);
  static const ERROR_FLOPPY_BAD_REGISTERS = WIN32_ERROR(0x00000465);
  static const ERROR_DISK_RECALIBRATE_FAILED = WIN32_ERROR(0x00000466);
  static const ERROR_DISK_OPERATION_FAILED = WIN32_ERROR(0x00000467);
  static const ERROR_DISK_RESET_FAILED = WIN32_ERROR(0x00000468);
  static const ERROR_EOM_OVERFLOW = WIN32_ERROR(0x00000469);
  static const ERROR_NOT_ENOUGH_SERVER_MEMORY = WIN32_ERROR(0x0000046a);
  static const ERROR_POSSIBLE_DEADLOCK = WIN32_ERROR(0x0000046b);
  static const ERROR_MAPPED_ALIGNMENT = WIN32_ERROR(0x0000046c);
  static const ERROR_SET_POWER_STATE_VETOED = WIN32_ERROR(0x00000474);
  static const ERROR_SET_POWER_STATE_FAILED = WIN32_ERROR(0x00000475);
  static const ERROR_TOO_MANY_LINKS = WIN32_ERROR(0x00000476);
  static const ERROR_OLD_WIN_VERSION = WIN32_ERROR(0x0000047e);
  static const ERROR_APP_WRONG_OS = WIN32_ERROR(0x0000047f);
  static const ERROR_SINGLE_INSTANCE_APP = WIN32_ERROR(0x00000480);
  static const ERROR_RMODE_APP = WIN32_ERROR(0x00000481);
  static const ERROR_INVALID_DLL = WIN32_ERROR(0x00000482);
  static const ERROR_NO_ASSOCIATION = WIN32_ERROR(0x00000483);
  static const ERROR_DDE_FAIL = WIN32_ERROR(0x00000484);
  static const ERROR_DLL_NOT_FOUND = WIN32_ERROR(0x00000485);
  static const ERROR_NO_MORE_USER_HANDLES = WIN32_ERROR(0x00000486);
  static const ERROR_MESSAGE_SYNC_ONLY = WIN32_ERROR(0x00000487);
  static const ERROR_SOURCE_ELEMENT_EMPTY = WIN32_ERROR(0x00000488);
  static const ERROR_DESTINATION_ELEMENT_FULL = WIN32_ERROR(0x00000489);
  static const ERROR_ILLEGAL_ELEMENT_ADDRESS = WIN32_ERROR(0x0000048a);
  static const ERROR_MAGAZINE_NOT_PRESENT = WIN32_ERROR(0x0000048b);
  static const ERROR_DEVICE_REINITIALIZATION_NEEDED = WIN32_ERROR(0x0000048c);
  static const ERROR_DEVICE_REQUIRES_CLEANING = WIN32_ERROR(0x0000048d);
  static const ERROR_DEVICE_DOOR_OPEN = WIN32_ERROR(0x0000048e);
  static const ERROR_DEVICE_NOT_CONNECTED = WIN32_ERROR(0x0000048f);
  static const ERROR_NOT_FOUND = WIN32_ERROR(0x00000490);
  static const ERROR_NO_MATCH = WIN32_ERROR(0x00000491);
  static const ERROR_SET_NOT_FOUND = WIN32_ERROR(0x00000492);
  static const ERROR_POINT_NOT_FOUND = WIN32_ERROR(0x00000493);
  static const ERROR_NO_TRACKING_SERVICE = WIN32_ERROR(0x00000494);
  static const ERROR_NO_VOLUME_ID = WIN32_ERROR(0x00000495);
  static const ERROR_UNABLE_TO_REMOVE_REPLACED = WIN32_ERROR(0x00000497);
  static const ERROR_UNABLE_TO_MOVE_REPLACEMENT = WIN32_ERROR(0x00000498);
  static const ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 = WIN32_ERROR(0x00000499);
  static const ERROR_JOURNAL_DELETE_IN_PROGRESS = WIN32_ERROR(0x0000049a);
  static const ERROR_JOURNAL_NOT_ACTIVE = WIN32_ERROR(0x0000049b);
  static const ERROR_POTENTIAL_FILE_FOUND = WIN32_ERROR(0x0000049c);
  static const ERROR_JOURNAL_ENTRY_DELETED = WIN32_ERROR(0x0000049d);
  static const ERROR_PARTITION_TERMINATING = WIN32_ERROR(0x000004a0);
  static const ERROR_SHUTDOWN_IS_SCHEDULED = WIN32_ERROR(0x000004a6);
  static const ERROR_SHUTDOWN_USERS_LOGGED_ON = WIN32_ERROR(0x000004a7);
  static const ERROR_SHUTDOWN_DISKS_NOT_IN_MAINTENANCE_MODE =
      WIN32_ERROR(0x000004a8);
  static const ERROR_BAD_DEVICE = WIN32_ERROR(0x000004b0);
  static const ERROR_CONNECTION_UNAVAIL = WIN32_ERROR(0x000004b1);
  static const ERROR_DEVICE_ALREADY_REMEMBERED = WIN32_ERROR(0x000004b2);
  static const ERROR_NO_NET_OR_BAD_PATH = WIN32_ERROR(0x000004b3);
  static const ERROR_BAD_PROVIDER = WIN32_ERROR(0x000004b4);
  static const ERROR_CANNOT_OPEN_PROFILE = WIN32_ERROR(0x000004b5);
  static const ERROR_BAD_PROFILE = WIN32_ERROR(0x000004b6);
  static const ERROR_NOT_CONTAINER = WIN32_ERROR(0x000004b7);
  static const ERROR_EXTENDED_ERROR = WIN32_ERROR(0x000004b8);
  static const ERROR_INVALID_GROUPNAME = WIN32_ERROR(0x000004b9);
  static const ERROR_INVALID_COMPUTERNAME = WIN32_ERROR(0x000004ba);
  static const ERROR_INVALID_EVENTNAME = WIN32_ERROR(0x000004bb);
  static const ERROR_INVALID_DOMAINNAME = WIN32_ERROR(0x000004bc);
  static const ERROR_INVALID_SERVICENAME = WIN32_ERROR(0x000004bd);
  static const ERROR_INVALID_NETNAME = WIN32_ERROR(0x000004be);
  static const ERROR_INVALID_SHARENAME = WIN32_ERROR(0x000004bf);
  static const ERROR_INVALID_PASSWORDNAME = WIN32_ERROR(0x000004c0);
  static const ERROR_INVALID_MESSAGENAME = WIN32_ERROR(0x000004c1);
  static const ERROR_INVALID_MESSAGEDEST = WIN32_ERROR(0x000004c2);
  static const ERROR_SESSION_CREDENTIAL_CONFLICT = WIN32_ERROR(0x000004c3);
  static const ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = WIN32_ERROR(0x000004c4);
  static const ERROR_DUP_DOMAINNAME = WIN32_ERROR(0x000004c5);
  static const ERROR_NO_NETWORK = WIN32_ERROR(0x000004c6);
  static const ERROR_CANCELLED = WIN32_ERROR(0x000004c7);
  static const ERROR_USER_MAPPED_FILE = WIN32_ERROR(0x000004c8);
  static const ERROR_CONNECTION_REFUSED = WIN32_ERROR(0x000004c9);
  static const ERROR_GRACEFUL_DISCONNECT = WIN32_ERROR(0x000004ca);
  static const ERROR_ADDRESS_ALREADY_ASSOCIATED = WIN32_ERROR(0x000004cb);
  static const ERROR_ADDRESS_NOT_ASSOCIATED = WIN32_ERROR(0x000004cc);
  static const ERROR_CONNECTION_INVALID = WIN32_ERROR(0x000004cd);
  static const ERROR_CONNECTION_ACTIVE = WIN32_ERROR(0x000004ce);
  static const ERROR_NETWORK_UNREACHABLE = WIN32_ERROR(0x000004cf);
  static const ERROR_HOST_UNREACHABLE = WIN32_ERROR(0x000004d0);
  static const ERROR_PROTOCOL_UNREACHABLE = WIN32_ERROR(0x000004d1);
  static const ERROR_PORT_UNREACHABLE = WIN32_ERROR(0x000004d2);
  static const ERROR_REQUEST_ABORTED = WIN32_ERROR(0x000004d3);
  static const ERROR_CONNECTION_ABORTED = WIN32_ERROR(0x000004d4);
  static const ERROR_RETRY = WIN32_ERROR(0x000004d5);
  static const ERROR_CONNECTION_COUNT_LIMIT = WIN32_ERROR(0x000004d6);
  static const ERROR_LOGIN_TIME_RESTRICTION = WIN32_ERROR(0x000004d7);
  static const ERROR_LOGIN_WKSTA_RESTRICTION = WIN32_ERROR(0x000004d8);
  static const ERROR_INCORRECT_ADDRESS = WIN32_ERROR(0x000004d9);
  static const ERROR_ALREADY_REGISTERED = WIN32_ERROR(0x000004da);
  static const ERROR_SERVICE_NOT_FOUND = WIN32_ERROR(0x000004db);
  static const ERROR_NOT_AUTHENTICATED = WIN32_ERROR(0x000004dc);
  static const ERROR_NOT_LOGGED_ON = WIN32_ERROR(0x000004dd);
  static const ERROR_CONTINUE = WIN32_ERROR(0x000004de);
  static const ERROR_ALREADY_INITIALIZED = WIN32_ERROR(0x000004df);
  static const ERROR_NO_MORE_DEVICES = WIN32_ERROR(0x000004e0);
  static const ERROR_NO_SUCH_SITE = WIN32_ERROR(0x000004e1);
  static const ERROR_DOMAIN_CONTROLLER_EXISTS = WIN32_ERROR(0x000004e2);
  static const ERROR_ONLY_IF_CONNECTED = WIN32_ERROR(0x000004e3);
  static const ERROR_OVERRIDE_NOCHANGES = WIN32_ERROR(0x000004e4);
  static const ERROR_BAD_USER_PROFILE = WIN32_ERROR(0x000004e5);
  static const ERROR_NOT_SUPPORTED_ON_SBS = WIN32_ERROR(0x000004e6);
  static const ERROR_SERVER_SHUTDOWN_IN_PROGRESS = WIN32_ERROR(0x000004e7);
  static const ERROR_HOST_DOWN = WIN32_ERROR(0x000004e8);
  static const ERROR_NON_ACCOUNT_SID = WIN32_ERROR(0x000004e9);
  static const ERROR_NON_DOMAIN_SID = WIN32_ERROR(0x000004ea);
  static const ERROR_APPHELP_BLOCK = WIN32_ERROR(0x000004eb);
  static const ERROR_ACCESS_DISABLED_BY_POLICY = WIN32_ERROR(0x000004ec);
  static const ERROR_REG_NAT_CONSUMPTION = WIN32_ERROR(0x000004ed);
  static const ERROR_CSCSHARE_OFFLINE = WIN32_ERROR(0x000004ee);
  static const ERROR_PKINIT_FAILURE = WIN32_ERROR(0x000004ef);
  static const ERROR_SMARTCARD_SUBSYSTEM_FAILURE = WIN32_ERROR(0x000004f0);
  static const ERROR_DOWNGRADE_DETECTED = WIN32_ERROR(0x000004f1);
  static const ERROR_MACHINE_LOCKED = WIN32_ERROR(0x000004f7);
  static const ERROR_SMB_GUEST_LOGON_BLOCKED = WIN32_ERROR(0x000004f8);
  static const ERROR_CALLBACK_SUPPLIED_INVALID_DATA = WIN32_ERROR(0x000004f9);
  static const ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = WIN32_ERROR(0x000004fa);
  static const ERROR_DRIVER_BLOCKED = WIN32_ERROR(0x000004fb);
  static const ERROR_INVALID_IMPORT_OF_NON_DLL = WIN32_ERROR(0x000004fc);
  static const ERROR_ACCESS_DISABLED_WEBBLADE = WIN32_ERROR(0x000004fd);
  static const ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER = WIN32_ERROR(0x000004fe);
  static const ERROR_RECOVERY_FAILURE = WIN32_ERROR(0x000004ff);
  static const ERROR_ALREADY_FIBER = WIN32_ERROR(0x00000500);
  static const ERROR_ALREADY_THREAD = WIN32_ERROR(0x00000501);
  static const ERROR_STACK_BUFFER_OVERRUN = WIN32_ERROR(0x00000502);
  static const ERROR_PARAMETER_QUOTA_EXCEEDED = WIN32_ERROR(0x00000503);
  static const ERROR_DEBUGGER_INACTIVE = WIN32_ERROR(0x00000504);
  static const ERROR_DELAY_LOAD_FAILED = WIN32_ERROR(0x00000505);
  static const ERROR_VDM_DISALLOWED = WIN32_ERROR(0x00000506);
  static const ERROR_UNIDENTIFIED_ERROR = WIN32_ERROR(0x00000507);
  static const ERROR_INVALID_CRUNTIME_PARAMETER = WIN32_ERROR(0x00000508);
  static const ERROR_BEYOND_VDL = WIN32_ERROR(0x00000509);
  static const ERROR_INCOMPATIBLE_SERVICE_SID_TYPE = WIN32_ERROR(0x0000050a);
  static const ERROR_DRIVER_PROCESS_TERMINATED = WIN32_ERROR(0x0000050b);
  static const ERROR_IMPLEMENTATION_LIMIT = WIN32_ERROR(0x0000050c);
  static const ERROR_PROCESS_IS_PROTECTED = WIN32_ERROR(0x0000050d);
  static const ERROR_SERVICE_NOTIFY_CLIENT_LAGGING = WIN32_ERROR(0x0000050e);
  static const ERROR_DISK_QUOTA_EXCEEDED = WIN32_ERROR(0x0000050f);
  static const ERROR_CONTENT_BLOCKED = WIN32_ERROR(0x00000510);
  static const ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE = WIN32_ERROR(0x00000511);
  static const ERROR_APP_HANG = WIN32_ERROR(0x00000512);
  static const ERROR_INVALID_LABEL = WIN32_ERROR(0x00000513);
  static const ERROR_NOT_ALL_ASSIGNED = WIN32_ERROR(0x00000514);
  static const ERROR_SOME_NOT_MAPPED = WIN32_ERROR(0x00000515);
  static const ERROR_NO_QUOTAS_FOR_ACCOUNT = WIN32_ERROR(0x00000516);
  static const ERROR_LOCAL_USER_SESSION_KEY = WIN32_ERROR(0x00000517);
  static const ERROR_NULL_LM_PASSWORD = WIN32_ERROR(0x00000518);
  static const ERROR_UNKNOWN_REVISION = WIN32_ERROR(0x00000519);
  static const ERROR_REVISION_MISMATCH = WIN32_ERROR(0x0000051a);
  static const ERROR_INVALID_OWNER = WIN32_ERROR(0x0000051b);
  static const ERROR_INVALID_PRIMARY_GROUP = WIN32_ERROR(0x0000051c);
  static const ERROR_NO_IMPERSONATION_TOKEN = WIN32_ERROR(0x0000051d);
  static const ERROR_CANT_DISABLE_MANDATORY = WIN32_ERROR(0x0000051e);
  static const ERROR_NO_LOGON_SERVERS = WIN32_ERROR(0x0000051f);
  static const ERROR_NO_SUCH_LOGON_SESSION = WIN32_ERROR(0x00000520);
  static const ERROR_NO_SUCH_PRIVILEGE = WIN32_ERROR(0x00000521);
  static const ERROR_PRIVILEGE_NOT_HELD = WIN32_ERROR(0x00000522);
  static const ERROR_INVALID_ACCOUNT_NAME = WIN32_ERROR(0x00000523);
  static const ERROR_USER_EXISTS = WIN32_ERROR(0x00000524);
  static const ERROR_NO_SUCH_USER = WIN32_ERROR(0x00000525);
  static const ERROR_GROUP_EXISTS = WIN32_ERROR(0x00000526);
  static const ERROR_NO_SUCH_GROUP = WIN32_ERROR(0x00000527);
  static const ERROR_MEMBER_IN_GROUP = WIN32_ERROR(0x00000528);
  static const ERROR_MEMBER_NOT_IN_GROUP = WIN32_ERROR(0x00000529);
  static const ERROR_LAST_ADMIN = WIN32_ERROR(0x0000052a);
  static const ERROR_WRONG_PASSWORD = WIN32_ERROR(0x0000052b);
  static const ERROR_ILL_FORMED_PASSWORD = WIN32_ERROR(0x0000052c);
  static const ERROR_PASSWORD_RESTRICTION = WIN32_ERROR(0x0000052d);
  static const ERROR_LOGON_FAILURE = WIN32_ERROR(0x0000052e);
  static const ERROR_ACCOUNT_RESTRICTION = WIN32_ERROR(0x0000052f);
  static const ERROR_INVALID_LOGON_HOURS = WIN32_ERROR(0x00000530);
  static const ERROR_INVALID_WORKSTATION = WIN32_ERROR(0x00000531);
  static const ERROR_PASSWORD_EXPIRED = WIN32_ERROR(0x00000532);
  static const ERROR_ACCOUNT_DISABLED = WIN32_ERROR(0x00000533);
  static const ERROR_NONE_MAPPED = WIN32_ERROR(0x00000534);
  static const ERROR_TOO_MANY_LUIDS_REQUESTED = WIN32_ERROR(0x00000535);
  static const ERROR_LUIDS_EXHAUSTED = WIN32_ERROR(0x00000536);
  static const ERROR_INVALID_SUB_AUTHORITY = WIN32_ERROR(0x00000537);
  static const ERROR_INVALID_ACL = WIN32_ERROR(0x00000538);
  static const ERROR_INVALID_SID = WIN32_ERROR(0x00000539);
  static const ERROR_INVALID_SECURITY_DESCR = WIN32_ERROR(0x0000053a);
  static const ERROR_BAD_INHERITANCE_ACL = WIN32_ERROR(0x0000053c);
  static const ERROR_SERVER_DISABLED = WIN32_ERROR(0x0000053d);
  static const ERROR_SERVER_NOT_DISABLED = WIN32_ERROR(0x0000053e);
  static const ERROR_INVALID_ID_AUTHORITY = WIN32_ERROR(0x0000053f);
  static const ERROR_ALLOTTED_SPACE_EXCEEDED = WIN32_ERROR(0x00000540);
  static const ERROR_INVALID_GROUP_ATTRIBUTES = WIN32_ERROR(0x00000541);
  static const ERROR_BAD_IMPERSONATION_LEVEL = WIN32_ERROR(0x00000542);
  static const ERROR_CANT_OPEN_ANONYMOUS = WIN32_ERROR(0x00000543);
  static const ERROR_BAD_VALIDATION_CLASS = WIN32_ERROR(0x00000544);
  static const ERROR_BAD_TOKEN_TYPE = WIN32_ERROR(0x00000545);
  static const ERROR_NO_SECURITY_ON_OBJECT = WIN32_ERROR(0x00000546);
  static const ERROR_CANT_ACCESS_DOMAIN_INFO = WIN32_ERROR(0x00000547);
  static const ERROR_INVALID_SERVER_STATE = WIN32_ERROR(0x00000548);
  static const ERROR_INVALID_DOMAIN_STATE = WIN32_ERROR(0x00000549);
  static const ERROR_INVALID_DOMAIN_ROLE = WIN32_ERROR(0x0000054a);
  static const ERROR_NO_SUCH_DOMAIN = WIN32_ERROR(0x0000054b);
  static const ERROR_DOMAIN_EXISTS = WIN32_ERROR(0x0000054c);
  static const ERROR_DOMAIN_LIMIT_EXCEEDED = WIN32_ERROR(0x0000054d);
  static const ERROR_INTERNAL_DB_CORRUPTION = WIN32_ERROR(0x0000054e);
  static const ERROR_INTERNAL_ERROR = WIN32_ERROR(0x0000054f);
  static const ERROR_GENERIC_NOT_MAPPED = WIN32_ERROR(0x00000550);
  static const ERROR_BAD_DESCRIPTOR_FORMAT = WIN32_ERROR(0x00000551);
  static const ERROR_NOT_LOGON_PROCESS = WIN32_ERROR(0x00000552);
  static const ERROR_LOGON_SESSION_EXISTS = WIN32_ERROR(0x00000553);
  static const ERROR_NO_SUCH_PACKAGE = WIN32_ERROR(0x00000554);
  static const ERROR_BAD_LOGON_SESSION_STATE = WIN32_ERROR(0x00000555);
  static const ERROR_LOGON_SESSION_COLLISION = WIN32_ERROR(0x00000556);
  static const ERROR_INVALID_LOGON_TYPE = WIN32_ERROR(0x00000557);
  static const ERROR_CANNOT_IMPERSONATE = WIN32_ERROR(0x00000558);
  static const ERROR_RXACT_INVALID_STATE = WIN32_ERROR(0x00000559);
  static const ERROR_RXACT_COMMIT_FAILURE = WIN32_ERROR(0x0000055a);
  static const ERROR_SPECIAL_ACCOUNT = WIN32_ERROR(0x0000055b);
  static const ERROR_SPECIAL_GROUP = WIN32_ERROR(0x0000055c);
  static const ERROR_SPECIAL_USER = WIN32_ERROR(0x0000055d);
  static const ERROR_MEMBERS_PRIMARY_GROUP = WIN32_ERROR(0x0000055e);
  static const ERROR_TOKEN_ALREADY_IN_USE = WIN32_ERROR(0x0000055f);
  static const ERROR_NO_SUCH_ALIAS = WIN32_ERROR(0x00000560);
  static const ERROR_MEMBER_NOT_IN_ALIAS = WIN32_ERROR(0x00000561);
  static const ERROR_MEMBER_IN_ALIAS = WIN32_ERROR(0x00000562);
  static const ERROR_ALIAS_EXISTS = WIN32_ERROR(0x00000563);
  static const ERROR_LOGON_NOT_GRANTED = WIN32_ERROR(0x00000564);
  static const ERROR_TOO_MANY_SECRETS = WIN32_ERROR(0x00000565);
  static const ERROR_SECRET_TOO_LONG = WIN32_ERROR(0x00000566);
  static const ERROR_INTERNAL_DB_ERROR = WIN32_ERROR(0x00000567);
  static const ERROR_TOO_MANY_CONTEXT_IDS = WIN32_ERROR(0x00000568);
  static const ERROR_LOGON_TYPE_NOT_GRANTED = WIN32_ERROR(0x00000569);
  static const ERROR_NT_CROSS_ENCRYPTION_REQUIRED = WIN32_ERROR(0x0000056a);
  static const ERROR_NO_SUCH_MEMBER = WIN32_ERROR(0x0000056b);
  static const ERROR_INVALID_MEMBER = WIN32_ERROR(0x0000056c);
  static const ERROR_TOO_MANY_SIDS = WIN32_ERROR(0x0000056d);
  static const ERROR_LM_CROSS_ENCRYPTION_REQUIRED = WIN32_ERROR(0x0000056e);
  static const ERROR_NO_INHERITANCE = WIN32_ERROR(0x0000056f);
  static const ERROR_FILE_CORRUPT = WIN32_ERROR(0x00000570);
  static const ERROR_DISK_CORRUPT = WIN32_ERROR(0x00000571);
  static const ERROR_NO_USER_SESSION_KEY = WIN32_ERROR(0x00000572);
  static const ERROR_LICENSE_QUOTA_EXCEEDED = WIN32_ERROR(0x00000573);
  static const ERROR_WRONG_TARGET_NAME = WIN32_ERROR(0x00000574);
  static const ERROR_MUTUAL_AUTH_FAILED = WIN32_ERROR(0x00000575);
  static const ERROR_TIME_SKEW = WIN32_ERROR(0x00000576);
  static const ERROR_CURRENT_DOMAIN_NOT_ALLOWED = WIN32_ERROR(0x00000577);
  static const ERROR_INVALID_WINDOW_HANDLE = WIN32_ERROR(0x00000578);
  static const ERROR_INVALID_MENU_HANDLE = WIN32_ERROR(0x00000579);
  static const ERROR_INVALID_CURSOR_HANDLE = WIN32_ERROR(0x0000057a);
  static const ERROR_INVALID_ACCEL_HANDLE = WIN32_ERROR(0x0000057b);
  static const ERROR_INVALID_HOOK_HANDLE = WIN32_ERROR(0x0000057c);
  static const ERROR_INVALID_DWP_HANDLE = WIN32_ERROR(0x0000057d);
  static const ERROR_TLW_WITH_WSCHILD = WIN32_ERROR(0x0000057e);
  static const ERROR_CANNOT_FIND_WND_CLASS = WIN32_ERROR(0x0000057f);
  static const ERROR_WINDOW_OF_OTHER_THREAD = WIN32_ERROR(0x00000580);
  static const ERROR_HOTKEY_ALREADY_REGISTERED = WIN32_ERROR(0x00000581);
  static const ERROR_CLASS_ALREADY_EXISTS = WIN32_ERROR(0x00000582);
  static const ERROR_CLASS_DOES_NOT_EXIST = WIN32_ERROR(0x00000583);
  static const ERROR_CLASS_HAS_WINDOWS = WIN32_ERROR(0x00000584);
  static const ERROR_INVALID_INDEX = WIN32_ERROR(0x00000585);
  static const ERROR_INVALID_ICON_HANDLE = WIN32_ERROR(0x00000586);
  static const ERROR_PRIVATE_DIALOG_INDEX = WIN32_ERROR(0x00000587);
  static const ERROR_LISTBOX_ID_NOT_FOUND = WIN32_ERROR(0x00000588);
  static const ERROR_NO_WILDCARD_CHARACTERS = WIN32_ERROR(0x00000589);
  static const ERROR_CLIPBOARD_NOT_OPEN = WIN32_ERROR(0x0000058a);
  static const ERROR_HOTKEY_NOT_REGISTERED = WIN32_ERROR(0x0000058b);
  static const ERROR_WINDOW_NOT_DIALOG = WIN32_ERROR(0x0000058c);
  static const ERROR_CONTROL_ID_NOT_FOUND = WIN32_ERROR(0x0000058d);
  static const ERROR_INVALID_COMBOBOX_MESSAGE = WIN32_ERROR(0x0000058e);
  static const ERROR_WINDOW_NOT_COMBOBOX = WIN32_ERROR(0x0000058f);
  static const ERROR_INVALID_EDIT_HEIGHT = WIN32_ERROR(0x00000590);
  static const ERROR_DC_NOT_FOUND = WIN32_ERROR(0x00000591);
  static const ERROR_INVALID_HOOK_FILTER = WIN32_ERROR(0x00000592);
  static const ERROR_INVALID_FILTER_PROC = WIN32_ERROR(0x00000593);
  static const ERROR_HOOK_NEEDS_HMOD = WIN32_ERROR(0x00000594);
  static const ERROR_GLOBAL_ONLY_HOOK = WIN32_ERROR(0x00000595);
  static const ERROR_JOURNAL_HOOK_SET = WIN32_ERROR(0x00000596);
  static const ERROR_HOOK_NOT_INSTALLED = WIN32_ERROR(0x00000597);
  static const ERROR_INVALID_LB_MESSAGE = WIN32_ERROR(0x00000598);
  static const ERROR_SETCOUNT_ON_BAD_LB = WIN32_ERROR(0x00000599);
  static const ERROR_LB_WITHOUT_TABSTOPS = WIN32_ERROR(0x0000059a);
  static const ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = WIN32_ERROR(0x0000059b);
  static const ERROR_CHILD_WINDOW_MENU = WIN32_ERROR(0x0000059c);
  static const ERROR_NO_SYSTEM_MENU = WIN32_ERROR(0x0000059d);
  static const ERROR_INVALID_MSGBOX_STYLE = WIN32_ERROR(0x0000059e);
  static const ERROR_INVALID_SPI_VALUE = WIN32_ERROR(0x0000059f);
  static const ERROR_SCREEN_ALREADY_LOCKED = WIN32_ERROR(0x000005a0);
  static const ERROR_HWNDS_HAVE_DIFF_PARENT = WIN32_ERROR(0x000005a1);
  static const ERROR_NOT_CHILD_WINDOW = WIN32_ERROR(0x000005a2);
  static const ERROR_INVALID_GW_COMMAND = WIN32_ERROR(0x000005a3);
  static const ERROR_INVALID_THREAD_ID = WIN32_ERROR(0x000005a4);
  static const ERROR_NON_MDICHILD_WINDOW = WIN32_ERROR(0x000005a5);
  static const ERROR_POPUP_ALREADY_ACTIVE = WIN32_ERROR(0x000005a6);
  static const ERROR_NO_SCROLLBARS = WIN32_ERROR(0x000005a7);
  static const ERROR_INVALID_SCROLLBAR_RANGE = WIN32_ERROR(0x000005a8);
  static const ERROR_INVALID_SHOWWIN_COMMAND = WIN32_ERROR(0x000005a9);
  static const ERROR_NO_SYSTEM_RESOURCES = WIN32_ERROR(0x000005aa);
  static const ERROR_NONPAGED_SYSTEM_RESOURCES = WIN32_ERROR(0x000005ab);
  static const ERROR_PAGED_SYSTEM_RESOURCES = WIN32_ERROR(0x000005ac);
  static const ERROR_WORKING_SET_QUOTA = WIN32_ERROR(0x000005ad);
  static const ERROR_PAGEFILE_QUOTA = WIN32_ERROR(0x000005ae);
  static const ERROR_COMMITMENT_LIMIT = WIN32_ERROR(0x000005af);
  static const ERROR_MENU_ITEM_NOT_FOUND = WIN32_ERROR(0x000005b0);
  static const ERROR_INVALID_KEYBOARD_HANDLE = WIN32_ERROR(0x000005b1);
  static const ERROR_HOOK_TYPE_NOT_ALLOWED = WIN32_ERROR(0x000005b2);
  static const ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION =
      WIN32_ERROR(0x000005b3);
  static const ERROR_TIMEOUT = WIN32_ERROR(0x000005b4);
  static const ERROR_INVALID_MONITOR_HANDLE = WIN32_ERROR(0x000005b5);
  static const ERROR_INCORRECT_SIZE = WIN32_ERROR(0x000005b6);
  static const ERROR_SYMLINK_CLASS_DISABLED = WIN32_ERROR(0x000005b7);
  static const ERROR_SYMLINK_NOT_SUPPORTED = WIN32_ERROR(0x000005b8);
  static const ERROR_XML_PARSE_ERROR = WIN32_ERROR(0x000005b9);
  static const ERROR_XMLDSIG_ERROR = WIN32_ERROR(0x000005ba);
  static const ERROR_RESTART_APPLICATION = WIN32_ERROR(0x000005bb);
  static const ERROR_WRONG_COMPARTMENT = WIN32_ERROR(0x000005bc);
  static const ERROR_AUTHIP_FAILURE = WIN32_ERROR(0x000005bd);
  static const ERROR_NO_NVRAM_RESOURCES = WIN32_ERROR(0x000005be);
  static const ERROR_NOT_GUI_PROCESS = WIN32_ERROR(0x000005bf);
  static const ERROR_EVENTLOG_FILE_CORRUPT = WIN32_ERROR(0x000005dc);
  static const ERROR_EVENTLOG_CANT_START = WIN32_ERROR(0x000005dd);
  static const ERROR_LOG_FILE_FULL = WIN32_ERROR(0x000005de);
  static const ERROR_EVENTLOG_FILE_CHANGED = WIN32_ERROR(0x000005df);
  static const ERROR_CONTAINER_ASSIGNED = WIN32_ERROR(0x000005e0);
  static const ERROR_JOB_NO_CONTAINER = WIN32_ERROR(0x000005e1);
  static const ERROR_INVALID_TASK_NAME = WIN32_ERROR(0x0000060e);
  static const ERROR_INVALID_TASK_INDEX = WIN32_ERROR(0x0000060f);
  static const ERROR_THREAD_ALREADY_IN_TASK = WIN32_ERROR(0x00000610);
  static const ERROR_INSTALL_SERVICE_FAILURE = WIN32_ERROR(0x00000641);
  static const ERROR_INSTALL_USEREXIT = WIN32_ERROR(0x00000642);
  static const ERROR_INSTALL_FAILURE = WIN32_ERROR(0x00000643);
  static const ERROR_INSTALL_SUSPEND = WIN32_ERROR(0x00000644);
  static const ERROR_UNKNOWN_PRODUCT = WIN32_ERROR(0x00000645);
  static const ERROR_UNKNOWN_FEATURE = WIN32_ERROR(0x00000646);
  static const ERROR_UNKNOWN_COMPONENT = WIN32_ERROR(0x00000647);
  static const ERROR_UNKNOWN_PROPERTY = WIN32_ERROR(0x00000648);
  static const ERROR_INVALID_HANDLE_STATE = WIN32_ERROR(0x00000649);
  static const ERROR_BAD_CONFIGURATION = WIN32_ERROR(0x0000064a);
  static const ERROR_INDEX_ABSENT = WIN32_ERROR(0x0000064b);
  static const ERROR_INSTALL_SOURCE_ABSENT = WIN32_ERROR(0x0000064c);
  static const ERROR_INSTALL_PACKAGE_VERSION = WIN32_ERROR(0x0000064d);
  static const ERROR_PRODUCT_UNINSTALLED = WIN32_ERROR(0x0000064e);
  static const ERROR_BAD_QUERY_SYNTAX = WIN32_ERROR(0x0000064f);
  static const ERROR_INVALID_FIELD = WIN32_ERROR(0x00000650);
  static const ERROR_DEVICE_REMOVED = WIN32_ERROR(0x00000651);
  static const ERROR_INSTALL_ALREADY_RUNNING = WIN32_ERROR(0x00000652);
  static const ERROR_INSTALL_PACKAGE_OPEN_FAILED = WIN32_ERROR(0x00000653);
  static const ERROR_INSTALL_PACKAGE_INVALID = WIN32_ERROR(0x00000654);
  static const ERROR_INSTALL_UI_FAILURE = WIN32_ERROR(0x00000655);
  static const ERROR_INSTALL_LOG_FAILURE = WIN32_ERROR(0x00000656);
  static const ERROR_INSTALL_LANGUAGE_UNSUPPORTED = WIN32_ERROR(0x00000657);
  static const ERROR_INSTALL_TRANSFORM_FAILURE = WIN32_ERROR(0x00000658);
  static const ERROR_INSTALL_PACKAGE_REJECTED = WIN32_ERROR(0x00000659);
  static const ERROR_FUNCTION_NOT_CALLED = WIN32_ERROR(0x0000065a);
  static const ERROR_FUNCTION_FAILED = WIN32_ERROR(0x0000065b);
  static const ERROR_INVALID_TABLE = WIN32_ERROR(0x0000065c);
  static const ERROR_DATATYPE_MISMATCH = WIN32_ERROR(0x0000065d);
  static const ERROR_UNSUPPORTED_TYPE = WIN32_ERROR(0x0000065e);
  static const ERROR_CREATE_FAILED = WIN32_ERROR(0x0000065f);
  static const ERROR_INSTALL_TEMP_UNWRITABLE = WIN32_ERROR(0x00000660);
  static const ERROR_INSTALL_PLATFORM_UNSUPPORTED = WIN32_ERROR(0x00000661);
  static const ERROR_INSTALL_NOTUSED = WIN32_ERROR(0x00000662);
  static const ERROR_PATCH_PACKAGE_OPEN_FAILED = WIN32_ERROR(0x00000663);
  static const ERROR_PATCH_PACKAGE_INVALID = WIN32_ERROR(0x00000664);
  static const ERROR_PATCH_PACKAGE_UNSUPPORTED = WIN32_ERROR(0x00000665);
  static const ERROR_PRODUCT_VERSION = WIN32_ERROR(0x00000666);
  static const ERROR_INVALID_COMMAND_LINE = WIN32_ERROR(0x00000667);
  static const ERROR_INSTALL_REMOTE_DISALLOWED = WIN32_ERROR(0x00000668);
  static const ERROR_SUCCESS_REBOOT_INITIATED = WIN32_ERROR(0x00000669);
  static const ERROR_PATCH_TARGET_NOT_FOUND = WIN32_ERROR(0x0000066a);
  static const ERROR_PATCH_PACKAGE_REJECTED = WIN32_ERROR(0x0000066b);
  static const ERROR_INSTALL_TRANSFORM_REJECTED = WIN32_ERROR(0x0000066c);
  static const ERROR_INSTALL_REMOTE_PROHIBITED = WIN32_ERROR(0x0000066d);
  static const ERROR_PATCH_REMOVAL_UNSUPPORTED = WIN32_ERROR(0x0000066e);
  static const ERROR_UNKNOWN_PATCH = WIN32_ERROR(0x0000066f);
  static const ERROR_PATCH_NO_SEQUENCE = WIN32_ERROR(0x00000670);
  static const ERROR_PATCH_REMOVAL_DISALLOWED = WIN32_ERROR(0x00000671);
  static const ERROR_INVALID_PATCH_XML = WIN32_ERROR(0x00000672);
  static const ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT = WIN32_ERROR(0x00000673);
  static const ERROR_INSTALL_SERVICE_SAFEBOOT = WIN32_ERROR(0x00000674);
  static const ERROR_FAIL_FAST_EXCEPTION = WIN32_ERROR(0x00000675);
  static const ERROR_INSTALL_REJECTED = WIN32_ERROR(0x00000676);
  static const ERROR_DYNAMIC_CODE_BLOCKED = WIN32_ERROR(0x00000677);
  static const ERROR_NOT_SAME_OBJECT = WIN32_ERROR(0x00000678);
  static const ERROR_STRICT_CFG_VIOLATION = WIN32_ERROR(0x00000679);
  static const ERROR_SET_CONTEXT_DENIED = WIN32_ERROR(0x0000067c);
  static const ERROR_CROSS_PARTITION_VIOLATION = WIN32_ERROR(0x0000067d);
  static const ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT = WIN32_ERROR(0x0000067e);
  static const ERROR_INVALID_USER_BUFFER = WIN32_ERROR(0x000006f8);
  static const ERROR_UNRECOGNIZED_MEDIA = WIN32_ERROR(0x000006f9);
  static const ERROR_NO_TRUST_LSA_SECRET = WIN32_ERROR(0x000006fa);
  static const ERROR_NO_TRUST_SAM_ACCOUNT = WIN32_ERROR(0x000006fb);
  static const ERROR_TRUSTED_DOMAIN_FAILURE = WIN32_ERROR(0x000006fc);
  static const ERROR_TRUSTED_RELATIONSHIP_FAILURE = WIN32_ERROR(0x000006fd);
  static const ERROR_TRUST_FAILURE = WIN32_ERROR(0x000006fe);
  static const ERROR_NETLOGON_NOT_STARTED = WIN32_ERROR(0x00000700);
  static const ERROR_ACCOUNT_EXPIRED = WIN32_ERROR(0x00000701);
  static const ERROR_REDIRECTOR_HAS_OPEN_HANDLES = WIN32_ERROR(0x00000702);
  static const ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = WIN32_ERROR(0x00000703);
  static const ERROR_UNKNOWN_PORT = WIN32_ERROR(0x00000704);
  static const ERROR_UNKNOWN_PRINTER_DRIVER = WIN32_ERROR(0x00000705);
  static const ERROR_UNKNOWN_PRINTPROCESSOR = WIN32_ERROR(0x00000706);
  static const ERROR_INVALID_SEPARATOR_FILE = WIN32_ERROR(0x00000707);
  static const ERROR_INVALID_PRIORITY = WIN32_ERROR(0x00000708);
  static const ERROR_INVALID_PRINTER_NAME = WIN32_ERROR(0x00000709);
  static const ERROR_PRINTER_ALREADY_EXISTS = WIN32_ERROR(0x0000070a);
  static const ERROR_INVALID_PRINTER_COMMAND = WIN32_ERROR(0x0000070b);
  static const ERROR_INVALID_DATATYPE = WIN32_ERROR(0x0000070c);
  static const ERROR_INVALID_ENVIRONMENT = WIN32_ERROR(0x0000070d);
  static const ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT =
      WIN32_ERROR(0x0000070f);
  static const ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT =
      WIN32_ERROR(0x00000710);
  static const ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = WIN32_ERROR(0x00000711);
  static const ERROR_DOMAIN_TRUST_INCONSISTENT = WIN32_ERROR(0x00000712);
  static const ERROR_SERVER_HAS_OPEN_HANDLES = WIN32_ERROR(0x00000713);
  static const ERROR_RESOURCE_DATA_NOT_FOUND = WIN32_ERROR(0x00000714);
  static const ERROR_RESOURCE_TYPE_NOT_FOUND = WIN32_ERROR(0x00000715);
  static const ERROR_RESOURCE_NAME_NOT_FOUND = WIN32_ERROR(0x00000716);
  static const ERROR_RESOURCE_LANG_NOT_FOUND = WIN32_ERROR(0x00000717);
  static const ERROR_NOT_ENOUGH_QUOTA = WIN32_ERROR(0x00000718);
  static const ERROR_INVALID_TIME = WIN32_ERROR(0x0000076d);
  static const ERROR_INVALID_FORM_NAME = WIN32_ERROR(0x0000076e);
  static const ERROR_INVALID_FORM_SIZE = WIN32_ERROR(0x0000076f);
  static const ERROR_ALREADY_WAITING = WIN32_ERROR(0x00000770);
  static const ERROR_PRINTER_DELETED = WIN32_ERROR(0x00000771);
  static const ERROR_INVALID_PRINTER_STATE = WIN32_ERROR(0x00000772);
  static const ERROR_PASSWORD_MUST_CHANGE = WIN32_ERROR(0x00000773);
  static const ERROR_DOMAIN_CONTROLLER_NOT_FOUND = WIN32_ERROR(0x00000774);
  static const ERROR_ACCOUNT_LOCKED_OUT = WIN32_ERROR(0x00000775);
  static const ERROR_NO_SITENAME = WIN32_ERROR(0x0000077f);
  static const ERROR_CANT_ACCESS_FILE = WIN32_ERROR(0x00000780);
  static const ERROR_CANT_RESOLVE_FILENAME = WIN32_ERROR(0x00000781);
  static const ERROR_KM_DRIVER_BLOCKED = WIN32_ERROR(0x0000078a);
  static const ERROR_CONTEXT_EXPIRED = WIN32_ERROR(0x0000078b);
  static const ERROR_PER_USER_TRUST_QUOTA_EXCEEDED = WIN32_ERROR(0x0000078c);
  static const ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED = WIN32_ERROR(0x0000078d);
  static const ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED = WIN32_ERROR(0x0000078e);
  static const ERROR_AUTHENTICATION_FIREWALL_FAILED = WIN32_ERROR(0x0000078f);
  static const ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED = WIN32_ERROR(0x00000790);
  static const ERROR_NTLM_BLOCKED = WIN32_ERROR(0x00000791);
  static const ERROR_PASSWORD_CHANGE_REQUIRED = WIN32_ERROR(0x00000792);
  static const ERROR_LOST_MODE_LOGON_RESTRICTION = WIN32_ERROR(0x00000793);
  static const ERROR_INVALID_PIXEL_FORMAT = WIN32_ERROR(0x000007d0);
  static const ERROR_BAD_DRIVER = WIN32_ERROR(0x000007d1);
  static const ERROR_INVALID_WINDOW_STYLE = WIN32_ERROR(0x000007d2);
  static const ERROR_METAFILE_NOT_SUPPORTED = WIN32_ERROR(0x000007d3);
  static const ERROR_TRANSFORM_NOT_SUPPORTED = WIN32_ERROR(0x000007d4);
  static const ERROR_CLIPPING_NOT_SUPPORTED = WIN32_ERROR(0x000007d5);
  static const ERROR_INVALID_CMM = WIN32_ERROR(0x000007da);
  static const ERROR_INVALID_PROFILE = WIN32_ERROR(0x000007db);
  static const ERROR_TAG_NOT_FOUND = WIN32_ERROR(0x000007dc);
  static const ERROR_TAG_NOT_PRESENT = WIN32_ERROR(0x000007dd);
  static const ERROR_DUPLICATE_TAG = WIN32_ERROR(0x000007de);
  static const ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE =
      WIN32_ERROR(0x000007df);
  static const ERROR_PROFILE_NOT_FOUND = WIN32_ERROR(0x000007e0);
  static const ERROR_INVALID_COLORSPACE = WIN32_ERROR(0x000007e1);
  static const ERROR_ICM_NOT_ENABLED = WIN32_ERROR(0x000007e2);
  static const ERROR_DELETING_ICM_XFORM = WIN32_ERROR(0x000007e3);
  static const ERROR_INVALID_TRANSFORM = WIN32_ERROR(0x000007e4);
  static const ERROR_COLORSPACE_MISMATCH = WIN32_ERROR(0x000007e5);
  static const ERROR_INVALID_COLORINDEX = WIN32_ERROR(0x000007e6);
  static const ERROR_PROFILE_DOES_NOT_MATCH_DEVICE = WIN32_ERROR(0x000007e7);
  static const ERROR_CONNECTED_OTHER_PASSWORD = WIN32_ERROR(0x0000083c);
  static const ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT = WIN32_ERROR(0x0000083d);
  static const ERROR_BAD_USERNAME = WIN32_ERROR(0x0000089a);
  static const ERROR_NOT_CONNECTED = WIN32_ERROR(0x000008ca);
  static const ERROR_OPEN_FILES = WIN32_ERROR(0x00000961);
  static const ERROR_ACTIVE_CONNECTIONS = WIN32_ERROR(0x00000962);
  static const ERROR_DEVICE_IN_USE = WIN32_ERROR(0x00000964);
  static const ERROR_UNKNOWN_PRINT_MONITOR = WIN32_ERROR(0x00000bb8);
  static const ERROR_PRINTER_DRIVER_IN_USE = WIN32_ERROR(0x00000bb9);
  static const ERROR_SPOOL_FILE_NOT_FOUND = WIN32_ERROR(0x00000bba);
  static const ERROR_SPL_NO_STARTDOC = WIN32_ERROR(0x00000bbb);
  static const ERROR_SPL_NO_ADDJOB = WIN32_ERROR(0x00000bbc);
  static const ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED =
      WIN32_ERROR(0x00000bbd);
  static const ERROR_PRINT_MONITOR_ALREADY_INSTALLED = WIN32_ERROR(0x00000bbe);
  static const ERROR_INVALID_PRINT_MONITOR = WIN32_ERROR(0x00000bbf);
  static const ERROR_PRINT_MONITOR_IN_USE = WIN32_ERROR(0x00000bc0);
  static const ERROR_PRINTER_HAS_JOBS_QUEUED = WIN32_ERROR(0x00000bc1);
  static const ERROR_SUCCESS_REBOOT_REQUIRED = WIN32_ERROR(0x00000bc2);
  static const ERROR_SUCCESS_RESTART_REQUIRED = WIN32_ERROR(0x00000bc3);
  static const ERROR_PRINTER_NOT_FOUND = WIN32_ERROR(0x00000bc4);
  static const ERROR_PRINTER_DRIVER_WARNED = WIN32_ERROR(0x00000bc5);
  static const ERROR_PRINTER_DRIVER_BLOCKED = WIN32_ERROR(0x00000bc6);
  static const ERROR_PRINTER_DRIVER_PACKAGE_IN_USE = WIN32_ERROR(0x00000bc7);
  static const ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND = WIN32_ERROR(0x00000bc8);
  static const ERROR_FAIL_REBOOT_REQUIRED = WIN32_ERROR(0x00000bc9);
  static const ERROR_FAIL_REBOOT_INITIATED = WIN32_ERROR(0x00000bca);
  static const ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED = WIN32_ERROR(0x00000bcb);
  static const ERROR_PRINT_JOB_RESTART_REQUIRED = WIN32_ERROR(0x00000bcc);
  static const ERROR_INVALID_PRINTER_DRIVER_MANIFEST = WIN32_ERROR(0x00000bcd);
  static const ERROR_PRINTER_NOT_SHAREABLE = WIN32_ERROR(0x00000bce);
  static const ERROR_SERVER_SERVICE_CALL_REQUIRES_SMB1 =
      WIN32_ERROR(0x00000bcf);
  static const ERROR_NETWORK_AUTHENTICATION_PROMPT_CANCELED =
      WIN32_ERROR(0x00000bd0);
  static const ERROR_REQUEST_PAUSED = WIN32_ERROR(0x00000bea);
  static const ERROR_APPEXEC_CONDITION_NOT_SATISFIED = WIN32_ERROR(0x00000bf4);
  static const ERROR_APPEXEC_HANDLE_INVALIDATED = WIN32_ERROR(0x00000bf5);
  static const ERROR_APPEXEC_INVALID_HOST_GENERATION = WIN32_ERROR(0x00000bf6);
  static const ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION =
      WIN32_ERROR(0x00000bf7);
  static const ERROR_APPEXEC_INVALID_HOST_STATE = WIN32_ERROR(0x00000bf8);
  static const ERROR_APPEXEC_NO_DONOR = WIN32_ERROR(0x00000bf9);
  static const ERROR_APPEXEC_HOST_ID_MISMATCH = WIN32_ERROR(0x00000bfa);
  static const ERROR_APPEXEC_UNKNOWN_USER = WIN32_ERROR(0x00000bfb);
  static const ERROR_APPEXEC_APP_COMPAT_BLOCK = WIN32_ERROR(0x00000bfc);
  static const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT = WIN32_ERROR(0x00000bfd);
  static const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_TERMINATION =
      WIN32_ERROR(0x00000bfe);
  static const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_LICENSING =
      WIN32_ERROR(0x00000bff);
  static const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_RESOURCES =
      WIN32_ERROR(0x00000c00);
  static const ERROR_VRF_VOLATILE_CFG_AND_IO_ENABLED = WIN32_ERROR(0x00000c08);
  static const ERROR_VRF_VOLATILE_NOT_STOPPABLE = WIN32_ERROR(0x00000c09);
  static const ERROR_VRF_VOLATILE_SAFE_MODE = WIN32_ERROR(0x00000c0a);
  static const ERROR_VRF_VOLATILE_NOT_RUNNABLE_SYSTEM = WIN32_ERROR(0x00000c0b);
  static const ERROR_VRF_VOLATILE_NOT_SUPPORTED_RULECLASS =
      WIN32_ERROR(0x00000c0c);
  static const ERROR_VRF_VOLATILE_PROTECTED_DRIVER = WIN32_ERROR(0x00000c0d);
  static const ERROR_VRF_VOLATILE_NMI_REGISTERED = WIN32_ERROR(0x00000c0e);
  static const ERROR_VRF_VOLATILE_SETTINGS_CONFLICT = WIN32_ERROR(0x00000c0f);
  static const ERROR_DIF_IOCALLBACK_NOT_REPLACED = WIN32_ERROR(0x00000c76);
  static const ERROR_DIF_LIVEDUMP_LIMIT_EXCEEDED = WIN32_ERROR(0x00000c77);
  static const ERROR_DIF_VOLATILE_SECTION_NOT_LOCKED = WIN32_ERROR(0x00000c78);
  static const ERROR_DIF_VOLATILE_DRIVER_HOTPATCHED = WIN32_ERROR(0x00000c79);
  static const ERROR_DIF_VOLATILE_INVALID_INFO = WIN32_ERROR(0x00000c7a);
  static const ERROR_DIF_VOLATILE_DRIVER_IS_NOT_RUNNING =
      WIN32_ERROR(0x00000c7b);
  static const ERROR_DIF_VOLATILE_PLUGIN_IS_NOT_RUNNING =
      WIN32_ERROR(0x00000c7c);
  static const ERROR_DIF_VOLATILE_PLUGIN_CHANGE_NOT_ALLOWED =
      WIN32_ERROR(0x00000c7d);
  static const ERROR_DIF_VOLATILE_NOT_ALLOWED = WIN32_ERROR(0x00000c7e);
  static const ERROR_DIF_BINDING_API_NOT_FOUND = WIN32_ERROR(0x00000c7f);
  static const ERROR_IO_REISSUE_AS_CACHED = WIN32_ERROR(0x00000f6e);
  static const ERROR_WINS_INTERNAL = WIN32_ERROR(0x00000fa0);
  static const ERROR_CAN_NOT_DEL_LOCAL_WINS = WIN32_ERROR(0x00000fa1);
  static const ERROR_STATIC_INIT = WIN32_ERROR(0x00000fa2);
  static const ERROR_INC_BACKUP = WIN32_ERROR(0x00000fa3);
  static const ERROR_FULL_BACKUP = WIN32_ERROR(0x00000fa4);
  static const ERROR_REC_NON_EXISTENT = WIN32_ERROR(0x00000fa5);
  static const ERROR_RPL_NOT_ALLOWED = WIN32_ERROR(0x00000fa6);
  static const ERROR_DHCP_ADDRESS_CONFLICT = WIN32_ERROR(0x00001004);
  static const ERROR_WMI_GUID_NOT_FOUND = WIN32_ERROR(0x00001068);
  static const ERROR_WMI_INSTANCE_NOT_FOUND = WIN32_ERROR(0x00001069);
  static const ERROR_WMI_ITEMID_NOT_FOUND = WIN32_ERROR(0x0000106a);
  static const ERROR_WMI_TRY_AGAIN = WIN32_ERROR(0x0000106b);
  static const ERROR_WMI_DP_NOT_FOUND = WIN32_ERROR(0x0000106c);
  static const ERROR_WMI_UNRESOLVED_INSTANCE_REF = WIN32_ERROR(0x0000106d);
  static const ERROR_WMI_ALREADY_ENABLED = WIN32_ERROR(0x0000106e);
  static const ERROR_WMI_GUID_DISCONNECTED = WIN32_ERROR(0x0000106f);
  static const ERROR_WMI_SERVER_UNAVAILABLE = WIN32_ERROR(0x00001070);
  static const ERROR_WMI_DP_FAILED = WIN32_ERROR(0x00001071);
  static const ERROR_WMI_INVALID_MOF = WIN32_ERROR(0x00001072);
  static const ERROR_WMI_INVALID_REGINFO = WIN32_ERROR(0x00001073);
  static const ERROR_WMI_ALREADY_DISABLED = WIN32_ERROR(0x00001074);
  static const ERROR_WMI_READ_ONLY = WIN32_ERROR(0x00001075);
  static const ERROR_WMI_SET_FAILURE = WIN32_ERROR(0x00001076);
  static const ERROR_NOT_APPCONTAINER = WIN32_ERROR(0x0000109a);
  static const ERROR_APPCONTAINER_REQUIRED = WIN32_ERROR(0x0000109b);
  static const ERROR_NOT_SUPPORTED_IN_APPCONTAINER = WIN32_ERROR(0x0000109c);
  static const ERROR_INVALID_PACKAGE_SID_LENGTH = WIN32_ERROR(0x0000109d);
  static const ERROR_INVALID_MEDIA = WIN32_ERROR(0x000010cc);
  static const ERROR_INVALID_LIBRARY = WIN32_ERROR(0x000010cd);
  static const ERROR_INVALID_MEDIA_POOL = WIN32_ERROR(0x000010ce);
  static const ERROR_DRIVE_MEDIA_MISMATCH = WIN32_ERROR(0x000010cf);
  static const ERROR_MEDIA_OFFLINE = WIN32_ERROR(0x000010d0);
  static const ERROR_LIBRARY_OFFLINE = WIN32_ERROR(0x000010d1);
  static const ERROR_EMPTY = WIN32_ERROR(0x000010d2);
  static const ERROR_NOT_EMPTY = WIN32_ERROR(0x000010d3);
  static const ERROR_MEDIA_UNAVAILABLE = WIN32_ERROR(0x000010d4);
  static const ERROR_RESOURCE_DISABLED = WIN32_ERROR(0x000010d5);
  static const ERROR_INVALID_CLEANER = WIN32_ERROR(0x000010d6);
  static const ERROR_UNABLE_TO_CLEAN = WIN32_ERROR(0x000010d7);
  static const ERROR_OBJECT_NOT_FOUND = WIN32_ERROR(0x000010d8);
  static const ERROR_DATABASE_FAILURE = WIN32_ERROR(0x000010d9);
  static const ERROR_DATABASE_FULL = WIN32_ERROR(0x000010da);
  static const ERROR_MEDIA_INCOMPATIBLE = WIN32_ERROR(0x000010db);
  static const ERROR_RESOURCE_NOT_PRESENT = WIN32_ERROR(0x000010dc);
  static const ERROR_INVALID_OPERATION = WIN32_ERROR(0x000010dd);
  static const ERROR_MEDIA_NOT_AVAILABLE = WIN32_ERROR(0x000010de);
  static const ERROR_DEVICE_NOT_AVAILABLE = WIN32_ERROR(0x000010df);
  static const ERROR_REQUEST_REFUSED = WIN32_ERROR(0x000010e0);
  static const ERROR_INVALID_DRIVE_OBJECT = WIN32_ERROR(0x000010e1);
  static const ERROR_LIBRARY_FULL = WIN32_ERROR(0x000010e2);
  static const ERROR_MEDIUM_NOT_ACCESSIBLE = WIN32_ERROR(0x000010e3);
  static const ERROR_UNABLE_TO_LOAD_MEDIUM = WIN32_ERROR(0x000010e4);
  static const ERROR_UNABLE_TO_INVENTORY_DRIVE = WIN32_ERROR(0x000010e5);
  static const ERROR_UNABLE_TO_INVENTORY_SLOT = WIN32_ERROR(0x000010e6);
  static const ERROR_UNABLE_TO_INVENTORY_TRANSPORT = WIN32_ERROR(0x000010e7);
  static const ERROR_TRANSPORT_FULL = WIN32_ERROR(0x000010e8);
  static const ERROR_CONTROLLING_IEPORT = WIN32_ERROR(0x000010e9);
  static const ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA = WIN32_ERROR(0x000010ea);
  static const ERROR_CLEANER_SLOT_SET = WIN32_ERROR(0x000010eb);
  static const ERROR_CLEANER_SLOT_NOT_SET = WIN32_ERROR(0x000010ec);
  static const ERROR_CLEANER_CARTRIDGE_SPENT = WIN32_ERROR(0x000010ed);
  static const ERROR_UNEXPECTED_OMID = WIN32_ERROR(0x000010ee);
  static const ERROR_CANT_DELETE_LAST_ITEM = WIN32_ERROR(0x000010ef);
  static const ERROR_MESSAGE_EXCEEDS_MAX_SIZE = WIN32_ERROR(0x000010f0);
  static const ERROR_VOLUME_CONTAINS_SYS_FILES = WIN32_ERROR(0x000010f1);
  static const ERROR_INDIGENOUS_TYPE = WIN32_ERROR(0x000010f2);
  static const ERROR_NO_SUPPORTING_DRIVES = WIN32_ERROR(0x000010f3);
  static const ERROR_CLEANER_CARTRIDGE_INSTALLED = WIN32_ERROR(0x000010f4);
  static const ERROR_IEPORT_FULL = WIN32_ERROR(0x000010f5);
  static const ERROR_FILE_OFFLINE = WIN32_ERROR(0x000010fe);
  static const ERROR_REMOTE_STORAGE_NOT_ACTIVE = WIN32_ERROR(0x000010ff);
  static const ERROR_REMOTE_STORAGE_MEDIA_ERROR = WIN32_ERROR(0x00001100);
  static const ERROR_NOT_A_REPARSE_POINT = WIN32_ERROR(0x00001126);
  static const ERROR_REPARSE_ATTRIBUTE_CONFLICT = WIN32_ERROR(0x00001127);
  static const ERROR_INVALID_REPARSE_DATA = WIN32_ERROR(0x00001128);
  static const ERROR_REPARSE_TAG_INVALID = WIN32_ERROR(0x00001129);
  static const ERROR_REPARSE_TAG_MISMATCH = WIN32_ERROR(0x0000112a);
  static const ERROR_REPARSE_POINT_ENCOUNTERED = WIN32_ERROR(0x0000112b);
  static const ERROR_APP_DATA_NOT_FOUND = WIN32_ERROR(0x00001130);
  static const ERROR_APP_DATA_EXPIRED = WIN32_ERROR(0x00001131);
  static const ERROR_APP_DATA_CORRUPT = WIN32_ERROR(0x00001132);
  static const ERROR_APP_DATA_LIMIT_EXCEEDED = WIN32_ERROR(0x00001133);
  static const ERROR_APP_DATA_REBOOT_REQUIRED = WIN32_ERROR(0x00001134);
  static const ERROR_SECUREBOOT_ROLLBACK_DETECTED = WIN32_ERROR(0x00001144);
  static const ERROR_SECUREBOOT_POLICY_VIOLATION = WIN32_ERROR(0x00001145);
  static const ERROR_SECUREBOOT_INVALID_POLICY = WIN32_ERROR(0x00001146);
  static const ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND =
      WIN32_ERROR(0x00001147);
  static const ERROR_SECUREBOOT_POLICY_NOT_SIGNED = WIN32_ERROR(0x00001148);
  static const ERROR_SECUREBOOT_NOT_ENABLED = WIN32_ERROR(0x00001149);
  static const ERROR_SECUREBOOT_FILE_REPLACED = WIN32_ERROR(0x0000114a);
  static const ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED = WIN32_ERROR(0x0000114b);
  static const ERROR_SECUREBOOT_POLICY_UNKNOWN = WIN32_ERROR(0x0000114c);
  static const ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION =
      WIN32_ERROR(0x0000114d);
  static const ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH = WIN32_ERROR(0x0000114e);
  static const ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED =
      WIN32_ERROR(0x0000114f);
  static const ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH =
      WIN32_ERROR(0x00001150);
  static const ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING =
      WIN32_ERROR(0x00001151);
  static const ERROR_SECUREBOOT_NOT_BASE_POLICY = WIN32_ERROR(0x00001152);
  static const ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY =
      WIN32_ERROR(0x00001153);
  static const ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED = WIN32_ERROR(0x00001158);
  static const ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED = WIN32_ERROR(0x00001159);
  static const ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED = WIN32_ERROR(0x0000115a);
  static const ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED = WIN32_ERROR(0x0000115b);
  static const ERROR_ALREADY_HAS_STREAM_ID = WIN32_ERROR(0x0000115c);
  static const ERROR_SMR_GARBAGE_COLLECTION_REQUIRED = WIN32_ERROR(0x0000115d);
  static const ERROR_WOF_WIM_HEADER_CORRUPT = WIN32_ERROR(0x0000115e);
  static const ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT = WIN32_ERROR(0x0000115f);
  static const ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT = WIN32_ERROR(0x00001160);
  static const ERROR_OBJECT_IS_IMMUTABLE = WIN32_ERROR(0x00001161);
  static const ERROR_VOLUME_NOT_SIS_ENABLED = WIN32_ERROR(0x00001194);
  static const ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED =
      WIN32_ERROR(0x000011c6);
  static const ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION =
      WIN32_ERROR(0x000011c7);
  static const ERROR_SYSTEM_INTEGRITY_INVALID_POLICY = WIN32_ERROR(0x000011c8);
  static const ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED =
      WIN32_ERROR(0x000011c9);
  static const ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES =
      WIN32_ERROR(0x000011ca);
  static const ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED =
      WIN32_ERROR(0x000011cb);
  static const ERROR_SYSTEM_INTEGRITY_REPUTATION_MALICIOUS =
      WIN32_ERROR(0x000011cc);
  static const ERROR_SYSTEM_INTEGRITY_REPUTATION_PUA = WIN32_ERROR(0x000011cd);
  static const ERROR_SYSTEM_INTEGRITY_REPUTATION_DANGEROUS_EXT =
      WIN32_ERROR(0x000011ce);
  static const ERROR_SYSTEM_INTEGRITY_REPUTATION_OFFLINE =
      WIN32_ERROR(0x000011cf);
  static const ERROR_VSM_NOT_INITIALIZED = WIN32_ERROR(0x000011d0);
  static const ERROR_VSM_DMA_PROTECTION_NOT_IN_USE = WIN32_ERROR(0x000011d1);
  static const ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED = WIN32_ERROR(0x000011da);
  static const ERROR_PLATFORM_MANIFEST_INVALID = WIN32_ERROR(0x000011db);
  static const ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED =
      WIN32_ERROR(0x000011dc);
  static const ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED =
      WIN32_ERROR(0x000011dd);
  static const ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND =
      WIN32_ERROR(0x000011de);
  static const ERROR_PLATFORM_MANIFEST_NOT_ACTIVE = WIN32_ERROR(0x000011df);
  static const ERROR_PLATFORM_MANIFEST_NOT_SIGNED = WIN32_ERROR(0x000011e0);
  static const ERROR_SYSTEM_INTEGRITY_REPUTATION_UNFRIENDLY_FILE =
      WIN32_ERROR(0x000011e4);
  static const ERROR_SYSTEM_INTEGRITY_REPUTATION_UNATTAINABLE =
      WIN32_ERROR(0x000011e5);
  static const ERROR_SYSTEM_INTEGRITY_REPUTATION_EXPLICIT_DENY_FILE =
      WIN32_ERROR(0x000011e6);
  static const ERROR_DEPENDENT_RESOURCE_EXISTS = WIN32_ERROR(0x00001389);
  static const ERROR_DEPENDENCY_NOT_FOUND = WIN32_ERROR(0x0000138a);
  static const ERROR_DEPENDENCY_ALREADY_EXISTS = WIN32_ERROR(0x0000138b);
  static const ERROR_RESOURCE_NOT_ONLINE = WIN32_ERROR(0x0000138c);
  static const ERROR_HOST_NODE_NOT_AVAILABLE = WIN32_ERROR(0x0000138d);
  static const ERROR_RESOURCE_NOT_AVAILABLE = WIN32_ERROR(0x0000138e);
  static const ERROR_RESOURCE_NOT_FOUND = WIN32_ERROR(0x0000138f);
  static const ERROR_SHUTDOWN_CLUSTER = WIN32_ERROR(0x00001390);
  static const ERROR_CANT_EVICT_ACTIVE_NODE = WIN32_ERROR(0x00001391);
  static const ERROR_OBJECT_ALREADY_EXISTS = WIN32_ERROR(0x00001392);
  static const ERROR_OBJECT_IN_LIST = WIN32_ERROR(0x00001393);
  static const ERROR_GROUP_NOT_AVAILABLE = WIN32_ERROR(0x00001394);
  static const ERROR_GROUP_NOT_FOUND = WIN32_ERROR(0x00001395);
  static const ERROR_GROUP_NOT_ONLINE = WIN32_ERROR(0x00001396);
  static const ERROR_HOST_NODE_NOT_RESOURCE_OWNER = WIN32_ERROR(0x00001397);
  static const ERROR_HOST_NODE_NOT_GROUP_OWNER = WIN32_ERROR(0x00001398);
  static const ERROR_RESMON_CREATE_FAILED = WIN32_ERROR(0x00001399);
  static const ERROR_RESMON_ONLINE_FAILED = WIN32_ERROR(0x0000139a);
  static const ERROR_RESOURCE_ONLINE = WIN32_ERROR(0x0000139b);
  static const ERROR_QUORUM_RESOURCE = WIN32_ERROR(0x0000139c);
  static const ERROR_NOT_QUORUM_CAPABLE = WIN32_ERROR(0x0000139d);
  static const ERROR_CLUSTER_SHUTTING_DOWN = WIN32_ERROR(0x0000139e);
  static const ERROR_INVALID_STATE = WIN32_ERROR(0x0000139f);
  static const ERROR_RESOURCE_PROPERTIES_STORED = WIN32_ERROR(0x000013a0);
  static const ERROR_NOT_QUORUM_CLASS = WIN32_ERROR(0x000013a1);
  static const ERROR_CORE_RESOURCE = WIN32_ERROR(0x000013a2);
  static const ERROR_QUORUM_RESOURCE_ONLINE_FAILED = WIN32_ERROR(0x000013a3);
  static const ERROR_QUORUMLOG_OPEN_FAILED = WIN32_ERROR(0x000013a4);
  static const ERROR_CLUSTERLOG_CORRUPT = WIN32_ERROR(0x000013a5);
  static const ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE =
      WIN32_ERROR(0x000013a6);
  static const ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE = WIN32_ERROR(0x000013a7);
  static const ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND = WIN32_ERROR(0x000013a8);
  static const ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE = WIN32_ERROR(0x000013a9);
  static const ERROR_QUORUM_OWNER_ALIVE = WIN32_ERROR(0x000013aa);
  static const ERROR_NETWORK_NOT_AVAILABLE = WIN32_ERROR(0x000013ab);
  static const ERROR_NODE_NOT_AVAILABLE = WIN32_ERROR(0x000013ac);
  static const ERROR_ALL_NODES_NOT_AVAILABLE = WIN32_ERROR(0x000013ad);
  static const ERROR_RESOURCE_FAILED = WIN32_ERROR(0x000013ae);
  static const ERROR_CLUSTER_INVALID_NODE = WIN32_ERROR(0x000013af);
  static const ERROR_CLUSTER_NODE_EXISTS = WIN32_ERROR(0x000013b0);
  static const ERROR_CLUSTER_JOIN_IN_PROGRESS = WIN32_ERROR(0x000013b1);
  static const ERROR_CLUSTER_NODE_NOT_FOUND = WIN32_ERROR(0x000013b2);
  static const ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND = WIN32_ERROR(0x000013b3);
  static const ERROR_CLUSTER_NETWORK_EXISTS = WIN32_ERROR(0x000013b4);
  static const ERROR_CLUSTER_NETWORK_NOT_FOUND = WIN32_ERROR(0x000013b5);
  static const ERROR_CLUSTER_NETINTERFACE_EXISTS = WIN32_ERROR(0x000013b6);
  static const ERROR_CLUSTER_NETINTERFACE_NOT_FOUND = WIN32_ERROR(0x000013b7);
  static const ERROR_CLUSTER_INVALID_REQUEST = WIN32_ERROR(0x000013b8);
  static const ERROR_CLUSTER_INVALID_NETWORK_PROVIDER = WIN32_ERROR(0x000013b9);
  static const ERROR_CLUSTER_NODE_DOWN = WIN32_ERROR(0x000013ba);
  static const ERROR_CLUSTER_NODE_UNREACHABLE = WIN32_ERROR(0x000013bb);
  static const ERROR_CLUSTER_NODE_NOT_MEMBER = WIN32_ERROR(0x000013bc);
  static const ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS = WIN32_ERROR(0x000013bd);
  static const ERROR_CLUSTER_INVALID_NETWORK = WIN32_ERROR(0x000013be);
  static const ERROR_CLUSTER_NODE_UP = WIN32_ERROR(0x000013c0);
  static const ERROR_CLUSTER_IPADDR_IN_USE = WIN32_ERROR(0x000013c1);
  static const ERROR_CLUSTER_NODE_NOT_PAUSED = WIN32_ERROR(0x000013c2);
  static const ERROR_CLUSTER_NO_SECURITY_CONTEXT = WIN32_ERROR(0x000013c3);
  static const ERROR_CLUSTER_NETWORK_NOT_INTERNAL = WIN32_ERROR(0x000013c4);
  static const ERROR_CLUSTER_NODE_ALREADY_UP = WIN32_ERROR(0x000013c5);
  static const ERROR_CLUSTER_NODE_ALREADY_DOWN = WIN32_ERROR(0x000013c6);
  static const ERROR_CLUSTER_NETWORK_ALREADY_ONLINE = WIN32_ERROR(0x000013c7);
  static const ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE = WIN32_ERROR(0x000013c8);
  static const ERROR_CLUSTER_NODE_ALREADY_MEMBER = WIN32_ERROR(0x000013c9);
  static const ERROR_CLUSTER_LAST_INTERNAL_NETWORK = WIN32_ERROR(0x000013ca);
  static const ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS = WIN32_ERROR(0x000013cb);
  static const ERROR_INVALID_OPERATION_ON_QUORUM = WIN32_ERROR(0x000013cc);
  static const ERROR_DEPENDENCY_NOT_ALLOWED = WIN32_ERROR(0x000013cd);
  static const ERROR_CLUSTER_NODE_PAUSED = WIN32_ERROR(0x000013ce);
  static const ERROR_NODE_CANT_HOST_RESOURCE = WIN32_ERROR(0x000013cf);
  static const ERROR_CLUSTER_NODE_NOT_READY = WIN32_ERROR(0x000013d0);
  static const ERROR_CLUSTER_NODE_SHUTTING_DOWN = WIN32_ERROR(0x000013d1);
  static const ERROR_CLUSTER_JOIN_ABORTED = WIN32_ERROR(0x000013d2);
  static const ERROR_CLUSTER_INCOMPATIBLE_VERSIONS = WIN32_ERROR(0x000013d3);
  static const ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED =
      WIN32_ERROR(0x000013d4);
  static const ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED = WIN32_ERROR(0x000013d5);
  static const ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND = WIN32_ERROR(0x000013d6);
  static const ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED = WIN32_ERROR(0x000013d7);
  static const ERROR_CLUSTER_RESNAME_NOT_FOUND = WIN32_ERROR(0x000013d8);
  static const ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED =
      WIN32_ERROR(0x000013d9);
  static const ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST = WIN32_ERROR(0x000013da);
  static const ERROR_CLUSTER_DATABASE_SEQMISMATCH = WIN32_ERROR(0x000013db);
  static const ERROR_RESMON_INVALID_STATE = WIN32_ERROR(0x000013dc);
  static const ERROR_CLUSTER_GUM_NOT_LOCKER = WIN32_ERROR(0x000013dd);
  static const ERROR_QUORUM_DISK_NOT_FOUND = WIN32_ERROR(0x000013de);
  static const ERROR_DATABASE_BACKUP_CORRUPT = WIN32_ERROR(0x000013df);
  static const ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT =
      WIN32_ERROR(0x000013e0);
  static const ERROR_RESOURCE_PROPERTY_UNCHANGEABLE = WIN32_ERROR(0x000013e1);
  static const ERROR_NO_ADMIN_ACCESS_POINT = WIN32_ERROR(0x000013e2);
  static const ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE = WIN32_ERROR(0x00001702);
  static const ERROR_CLUSTER_QUORUMLOG_NOT_FOUND = WIN32_ERROR(0x00001703);
  static const ERROR_CLUSTER_MEMBERSHIP_HALT = WIN32_ERROR(0x00001704);
  static const ERROR_CLUSTER_INSTANCE_ID_MISMATCH = WIN32_ERROR(0x00001705);
  static const ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP = WIN32_ERROR(0x00001706);
  static const ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH =
      WIN32_ERROR(0x00001707);
  static const ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP = WIN32_ERROR(0x00001708);
  static const ERROR_CLUSTER_PARAMETER_MISMATCH = WIN32_ERROR(0x00001709);
  static const ERROR_NODE_CANNOT_BE_CLUSTERED = WIN32_ERROR(0x0000170a);
  static const ERROR_CLUSTER_WRONG_OS_VERSION = WIN32_ERROR(0x0000170b);
  static const ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME =
      WIN32_ERROR(0x0000170c);
  static const ERROR_CLUSCFG_ALREADY_COMMITTED = WIN32_ERROR(0x0000170d);
  static const ERROR_CLUSCFG_ROLLBACK_FAILED = WIN32_ERROR(0x0000170e);
  static const ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT =
      WIN32_ERROR(0x0000170f);
  static const ERROR_CLUSTER_OLD_VERSION = WIN32_ERROR(0x00001710);
  static const ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME =
      WIN32_ERROR(0x00001711);
  static const ERROR_CLUSTER_NO_NET_ADAPTERS = WIN32_ERROR(0x00001712);
  static const ERROR_CLUSTER_POISONED = WIN32_ERROR(0x00001713);
  static const ERROR_CLUSTER_GROUP_MOVING = WIN32_ERROR(0x00001714);
  static const ERROR_CLUSTER_RESOURCE_TYPE_BUSY = WIN32_ERROR(0x00001715);
  static const ERROR_RESOURCE_CALL_TIMED_OUT = WIN32_ERROR(0x00001716);
  static const ERROR_INVALID_CLUSTER_IPV6_ADDRESS = WIN32_ERROR(0x00001717);
  static const ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION =
      WIN32_ERROR(0x00001718);
  static const ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS = WIN32_ERROR(0x00001719);
  static const ERROR_CLUSTER_PARTIAL_SEND = WIN32_ERROR(0x0000171a);
  static const ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION =
      WIN32_ERROR(0x0000171b);
  static const ERROR_CLUSTER_INVALID_STRING_TERMINATION =
      WIN32_ERROR(0x0000171c);
  static const ERROR_CLUSTER_INVALID_STRING_FORMAT = WIN32_ERROR(0x0000171d);
  static const ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS =
      WIN32_ERROR(0x0000171e);
  static const ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS =
      WIN32_ERROR(0x0000171f);
  static const ERROR_CLUSTER_NULL_DATA = WIN32_ERROR(0x00001720);
  static const ERROR_CLUSTER_PARTIAL_READ = WIN32_ERROR(0x00001721);
  static const ERROR_CLUSTER_PARTIAL_WRITE = WIN32_ERROR(0x00001722);
  static const ERROR_CLUSTER_CANT_DESERIALIZE_DATA = WIN32_ERROR(0x00001723);
  static const ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT =
      WIN32_ERROR(0x00001724);
  static const ERROR_CLUSTER_NO_QUORUM = WIN32_ERROR(0x00001725);
  static const ERROR_CLUSTER_INVALID_IPV6_NETWORK = WIN32_ERROR(0x00001726);
  static const ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK =
      WIN32_ERROR(0x00001727);
  static const ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP = WIN32_ERROR(0x00001728);
  static const ERROR_DEPENDENCY_TREE_TOO_COMPLEX = WIN32_ERROR(0x00001729);
  static const ERROR_EXCEPTION_IN_RESOURCE_CALL = WIN32_ERROR(0x0000172a);
  static const ERROR_CLUSTER_RHS_FAILED_INITIALIZATION =
      WIN32_ERROR(0x0000172b);
  static const ERROR_CLUSTER_NOT_INSTALLED = WIN32_ERROR(0x0000172c);
  static const ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE =
      WIN32_ERROR(0x0000172d);
  static const ERROR_CLUSTER_MAX_NODES_IN_CLUSTER = WIN32_ERROR(0x0000172e);
  static const ERROR_CLUSTER_TOO_MANY_NODES = WIN32_ERROR(0x0000172f);
  static const ERROR_CLUSTER_OBJECT_ALREADY_USED = WIN32_ERROR(0x00001730);
  static const ERROR_NONCORE_GROUPS_FOUND = WIN32_ERROR(0x00001731);
  static const ERROR_FILE_SHARE_RESOURCE_CONFLICT = WIN32_ERROR(0x00001732);
  static const ERROR_CLUSTER_EVICT_INVALID_REQUEST = WIN32_ERROR(0x00001733);
  static const ERROR_CLUSTER_SINGLETON_RESOURCE = WIN32_ERROR(0x00001734);
  static const ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE = WIN32_ERROR(0x00001735);
  static const ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED = WIN32_ERROR(0x00001736);
  static const ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR =
      WIN32_ERROR(0x00001737);
  static const ERROR_CLUSTER_GROUP_BUSY = WIN32_ERROR(0x00001738);
  static const ERROR_CLUSTER_NOT_SHARED_VOLUME = WIN32_ERROR(0x00001739);
  static const ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR =
      WIN32_ERROR(0x0000173a);
  static const ERROR_CLUSTER_SHARED_VOLUMES_IN_USE = WIN32_ERROR(0x0000173b);
  static const ERROR_CLUSTER_USE_SHARED_VOLUMES_API = WIN32_ERROR(0x0000173c);
  static const ERROR_CLUSTER_BACKUP_IN_PROGRESS = WIN32_ERROR(0x0000173d);
  static const ERROR_NON_CSV_PATH = WIN32_ERROR(0x0000173e);
  static const ERROR_CSV_VOLUME_NOT_LOCAL = WIN32_ERROR(0x0000173f);
  static const ERROR_CLUSTER_WATCHDOG_TERMINATING = WIN32_ERROR(0x00001740);
  static const ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES =
      WIN32_ERROR(0x00001741);
  static const ERROR_CLUSTER_INVALID_NODE_WEIGHT = WIN32_ERROR(0x00001742);
  static const ERROR_CLUSTER_RESOURCE_VETOED_CALL = WIN32_ERROR(0x00001743);
  static const ERROR_RESMON_SYSTEM_RESOURCES_LACKING = WIN32_ERROR(0x00001744);
  static const ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION =
      WIN32_ERROR(0x00001745);
  static const ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE =
      WIN32_ERROR(0x00001746);
  static const ERROR_CLUSTER_GROUP_QUEUED = WIN32_ERROR(0x00001747);
  static const ERROR_CLUSTER_RESOURCE_LOCKED_STATUS = WIN32_ERROR(0x00001748);
  static const ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED =
      WIN32_ERROR(0x00001749);
  static const ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS = WIN32_ERROR(0x0000174a);
  static const ERROR_CLUSTER_DISK_NOT_CONNECTED = WIN32_ERROR(0x0000174b);
  static const ERROR_DISK_NOT_CSV_CAPABLE = WIN32_ERROR(0x0000174c);
  static const ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE =
      WIN32_ERROR(0x0000174d);
  static const ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED = WIN32_ERROR(0x0000174e);
  static const ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED =
      WIN32_ERROR(0x0000174f);
  static const ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES = WIN32_ERROR(0x00001750);
  static const ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES =
      WIN32_ERROR(0x00001751);
  static const ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE =
      WIN32_ERROR(0x00001752);
  static const ERROR_CLUSTER_AFFINITY_CONFLICT = WIN32_ERROR(0x00001753);
  static const ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE =
      WIN32_ERROR(0x00001754);
  static const ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS =
      WIN32_ERROR(0x00001755);
  static const ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED =
      WIN32_ERROR(0x00001756);
  static const ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED = WIN32_ERROR(0x00001757);
  static const ERROR_CLUSTER_UPGRADE_IN_PROGRESS = WIN32_ERROR(0x00001758);
  static const ERROR_CLUSTER_UPGRADE_INCOMPLETE = WIN32_ERROR(0x00001759);
  static const ERROR_CLUSTER_NODE_IN_GRACE_PERIOD = WIN32_ERROR(0x0000175a);
  static const ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT = WIN32_ERROR(0x0000175b);
  static const ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER = WIN32_ERROR(0x0000175c);
  static const ERROR_CLUSTER_RESOURCE_NOT_MONITORED = WIN32_ERROR(0x0000175d);
  static const ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED =
      WIN32_ERROR(0x0000175e);
  static const ERROR_CLUSTER_RESOURCE_IS_REPLICATED = WIN32_ERROR(0x0000175f);
  static const ERROR_CLUSTER_NODE_ISOLATED = WIN32_ERROR(0x00001760);
  static const ERROR_CLUSTER_NODE_QUARANTINED = WIN32_ERROR(0x00001761);
  static const ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED =
      WIN32_ERROR(0x00001762);
  static const ERROR_CLUSTER_SPACE_DEGRADED = WIN32_ERROR(0x00001763);
  static const ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED =
      WIN32_ERROR(0x00001764);
  static const ERROR_CLUSTER_CSV_INVALID_HANDLE = WIN32_ERROR(0x00001765);
  static const ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR =
      WIN32_ERROR(0x00001766);
  static const ERROR_GROUPSET_NOT_AVAILABLE = WIN32_ERROR(0x00001767);
  static const ERROR_GROUPSET_NOT_FOUND = WIN32_ERROR(0x00001768);
  static const ERROR_GROUPSET_CANT_PROVIDE = WIN32_ERROR(0x00001769);
  static const ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND =
      WIN32_ERROR(0x0000176a);
  static const ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY =
      WIN32_ERROR(0x0000176b);
  static const ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION =
      WIN32_ERROR(0x0000176c);
  static const ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS =
      WIN32_ERROR(0x0000176d);
  static const ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME =
      WIN32_ERROR(0x0000176e);
  static const ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE =
      WIN32_ERROR(0x0000176f);
  static const ERROR_ENCRYPTION_FAILED = WIN32_ERROR(0x00001770);
  static const ERROR_DECRYPTION_FAILED = WIN32_ERROR(0x00001771);
  static const ERROR_FILE_ENCRYPTED = WIN32_ERROR(0x00001772);
  static const ERROR_NO_RECOVERY_POLICY = WIN32_ERROR(0x00001773);
  static const ERROR_NO_EFS = WIN32_ERROR(0x00001774);
  static const ERROR_WRONG_EFS = WIN32_ERROR(0x00001775);
  static const ERROR_NO_USER_KEYS = WIN32_ERROR(0x00001776);
  static const ERROR_FILE_NOT_ENCRYPTED = WIN32_ERROR(0x00001777);
  static const ERROR_NOT_EXPORT_FORMAT = WIN32_ERROR(0x00001778);
  static const ERROR_FILE_READ_ONLY = WIN32_ERROR(0x00001779);
  static const ERROR_DIR_EFS_DISALLOWED = WIN32_ERROR(0x0000177a);
  static const ERROR_EFS_SERVER_NOT_TRUSTED = WIN32_ERROR(0x0000177b);
  static const ERROR_BAD_RECOVERY_POLICY = WIN32_ERROR(0x0000177c);
  static const ERROR_EFS_ALG_BLOB_TOO_BIG = WIN32_ERROR(0x0000177d);
  static const ERROR_VOLUME_NOT_SUPPORT_EFS = WIN32_ERROR(0x0000177e);
  static const ERROR_EFS_DISABLED = WIN32_ERROR(0x0000177f);
  static const ERROR_EFS_VERSION_NOT_SUPPORT = WIN32_ERROR(0x00001780);
  static const ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE =
      WIN32_ERROR(0x00001781);
  static const ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER = WIN32_ERROR(0x00001782);
  static const ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE =
      WIN32_ERROR(0x00001783);
  static const ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE = WIN32_ERROR(0x00001784);
  static const ERROR_CS_ENCRYPTION_FILE_NOT_CSE = WIN32_ERROR(0x00001785);
  static const ERROR_ENCRYPTION_POLICY_DENIES_OPERATION =
      WIN32_ERROR(0x00001786);
  static const ERROR_WIP_ENCRYPTION_FAILED = WIN32_ERROR(0x00001787);
  static const ERROR_NO_BROWSER_SERVERS_FOUND = WIN32_ERROR(0x000017e6);
  static const ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM = WIN32_ERROR(0x0000186a);
  static const ERROR_LOG_SECTOR_INVALID = WIN32_ERROR(0x000019c8);
  static const ERROR_LOG_SECTOR_PARITY_INVALID = WIN32_ERROR(0x000019c9);
  static const ERROR_LOG_SECTOR_REMAPPED = WIN32_ERROR(0x000019ca);
  static const ERROR_LOG_BLOCK_INCOMPLETE = WIN32_ERROR(0x000019cb);
  static const ERROR_LOG_INVALID_RANGE = WIN32_ERROR(0x000019cc);
  static const ERROR_LOG_BLOCKS_EXHAUSTED = WIN32_ERROR(0x000019cd);
  static const ERROR_LOG_READ_CONTEXT_INVALID = WIN32_ERROR(0x000019ce);
  static const ERROR_LOG_RESTART_INVALID = WIN32_ERROR(0x000019cf);
  static const ERROR_LOG_BLOCK_VERSION = WIN32_ERROR(0x000019d0);
  static const ERROR_LOG_BLOCK_INVALID = WIN32_ERROR(0x000019d1);
  static const ERROR_LOG_READ_MODE_INVALID = WIN32_ERROR(0x000019d2);
  static const ERROR_LOG_NO_RESTART = WIN32_ERROR(0x000019d3);
  static const ERROR_LOG_METADATA_CORRUPT = WIN32_ERROR(0x000019d4);
  static const ERROR_LOG_METADATA_INVALID = WIN32_ERROR(0x000019d5);
  static const ERROR_LOG_METADATA_INCONSISTENT = WIN32_ERROR(0x000019d6);
  static const ERROR_LOG_RESERVATION_INVALID = WIN32_ERROR(0x000019d7);
  static const ERROR_LOG_CANT_DELETE = WIN32_ERROR(0x000019d8);
  static const ERROR_LOG_CONTAINER_LIMIT_EXCEEDED = WIN32_ERROR(0x000019d9);
  static const ERROR_LOG_START_OF_LOG = WIN32_ERROR(0x000019da);
  static const ERROR_LOG_POLICY_ALREADY_INSTALLED = WIN32_ERROR(0x000019db);
  static const ERROR_LOG_POLICY_NOT_INSTALLED = WIN32_ERROR(0x000019dc);
  static const ERROR_LOG_POLICY_INVALID = WIN32_ERROR(0x000019dd);
  static const ERROR_LOG_POLICY_CONFLICT = WIN32_ERROR(0x000019de);
  static const ERROR_LOG_PINNED_ARCHIVE_TAIL = WIN32_ERROR(0x000019df);
  static const ERROR_LOG_RECORD_NONEXISTENT = WIN32_ERROR(0x000019e0);
  static const ERROR_LOG_RECORDS_RESERVED_INVALID = WIN32_ERROR(0x000019e1);
  static const ERROR_LOG_SPACE_RESERVED_INVALID = WIN32_ERROR(0x000019e2);
  static const ERROR_LOG_TAIL_INVALID = WIN32_ERROR(0x000019e3);
  static const ERROR_LOG_FULL = WIN32_ERROR(0x000019e4);
  static const ERROR_COULD_NOT_RESIZE_LOG = WIN32_ERROR(0x000019e5);
  static const ERROR_LOG_MULTIPLEXED = WIN32_ERROR(0x000019e6);
  static const ERROR_LOG_DEDICATED = WIN32_ERROR(0x000019e7);
  static const ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS = WIN32_ERROR(0x000019e8);
  static const ERROR_LOG_ARCHIVE_IN_PROGRESS = WIN32_ERROR(0x000019e9);
  static const ERROR_LOG_EPHEMERAL = WIN32_ERROR(0x000019ea);
  static const ERROR_LOG_NOT_ENOUGH_CONTAINERS = WIN32_ERROR(0x000019eb);
  static const ERROR_LOG_CLIENT_ALREADY_REGISTERED = WIN32_ERROR(0x000019ec);
  static const ERROR_LOG_CLIENT_NOT_REGISTERED = WIN32_ERROR(0x000019ed);
  static const ERROR_LOG_FULL_HANDLER_IN_PROGRESS = WIN32_ERROR(0x000019ee);
  static const ERROR_LOG_CONTAINER_READ_FAILED = WIN32_ERROR(0x000019ef);
  static const ERROR_LOG_CONTAINER_WRITE_FAILED = WIN32_ERROR(0x000019f0);
  static const ERROR_LOG_CONTAINER_OPEN_FAILED = WIN32_ERROR(0x000019f1);
  static const ERROR_LOG_CONTAINER_STATE_INVALID = WIN32_ERROR(0x000019f2);
  static const ERROR_LOG_STATE_INVALID = WIN32_ERROR(0x000019f3);
  static const ERROR_LOG_PINNED = WIN32_ERROR(0x000019f4);
  static const ERROR_LOG_METADATA_FLUSH_FAILED = WIN32_ERROR(0x000019f5);
  static const ERROR_LOG_INCONSISTENT_SECURITY = WIN32_ERROR(0x000019f6);
  static const ERROR_LOG_APPENDED_FLUSH_FAILED = WIN32_ERROR(0x000019f7);
  static const ERROR_LOG_PINNED_RESERVATION = WIN32_ERROR(0x000019f8);
  static const ERROR_INVALID_TRANSACTION = WIN32_ERROR(0x00001a2c);
  static const ERROR_TRANSACTION_NOT_ACTIVE = WIN32_ERROR(0x00001a2d);
  static const ERROR_TRANSACTION_REQUEST_NOT_VALID = WIN32_ERROR(0x00001a2e);
  static const ERROR_TRANSACTION_NOT_REQUESTED = WIN32_ERROR(0x00001a2f);
  static const ERROR_TRANSACTION_ALREADY_ABORTED = WIN32_ERROR(0x00001a30);
  static const ERROR_TRANSACTION_ALREADY_COMMITTED = WIN32_ERROR(0x00001a31);
  static const ERROR_TM_INITIALIZATION_FAILED = WIN32_ERROR(0x00001a32);
  static const ERROR_RESOURCEMANAGER_READ_ONLY = WIN32_ERROR(0x00001a33);
  static const ERROR_TRANSACTION_NOT_JOINED = WIN32_ERROR(0x00001a34);
  static const ERROR_TRANSACTION_SUPERIOR_EXISTS = WIN32_ERROR(0x00001a35);
  static const ERROR_CRM_PROTOCOL_ALREADY_EXISTS = WIN32_ERROR(0x00001a36);
  static const ERROR_TRANSACTION_PROPAGATION_FAILED = WIN32_ERROR(0x00001a37);
  static const ERROR_CRM_PROTOCOL_NOT_FOUND = WIN32_ERROR(0x00001a38);
  static const ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER =
      WIN32_ERROR(0x00001a39);
  static const ERROR_CURRENT_TRANSACTION_NOT_VALID = WIN32_ERROR(0x00001a3a);
  static const ERROR_TRANSACTION_NOT_FOUND = WIN32_ERROR(0x00001a3b);
  static const ERROR_RESOURCEMANAGER_NOT_FOUND = WIN32_ERROR(0x00001a3c);
  static const ERROR_ENLISTMENT_NOT_FOUND = WIN32_ERROR(0x00001a3d);
  static const ERROR_TRANSACTIONMANAGER_NOT_FOUND = WIN32_ERROR(0x00001a3e);
  static const ERROR_TRANSACTIONMANAGER_NOT_ONLINE = WIN32_ERROR(0x00001a3f);
  static const ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION =
      WIN32_ERROR(0x00001a40);
  static const ERROR_TRANSACTION_NOT_ROOT = WIN32_ERROR(0x00001a41);
  static const ERROR_TRANSACTION_OBJECT_EXPIRED = WIN32_ERROR(0x00001a42);
  static const ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED =
      WIN32_ERROR(0x00001a43);
  static const ERROR_TRANSACTION_RECORD_TOO_LONG = WIN32_ERROR(0x00001a44);
  static const ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED =
      WIN32_ERROR(0x00001a45);
  static const ERROR_TRANSACTION_INTEGRITY_VIOLATED = WIN32_ERROR(0x00001a46);
  static const ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH =
      WIN32_ERROR(0x00001a47);
  static const ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT = WIN32_ERROR(0x00001a48);
  static const ERROR_TRANSACTION_MUST_WRITETHROUGH = WIN32_ERROR(0x00001a49);
  static const ERROR_TRANSACTION_NO_SUPERIOR = WIN32_ERROR(0x00001a4a);
  static const ERROR_HEURISTIC_DAMAGE_POSSIBLE = WIN32_ERROR(0x00001a4b);
  static const ERROR_TRANSACTIONAL_CONFLICT = WIN32_ERROR(0x00001a90);
  static const ERROR_RM_NOT_ACTIVE = WIN32_ERROR(0x00001a91);
  static const ERROR_RM_METADATA_CORRUPT = WIN32_ERROR(0x00001a92);
  static const ERROR_DIRECTORY_NOT_RM = WIN32_ERROR(0x00001a93);
  static const ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE = WIN32_ERROR(0x00001a95);
  static const ERROR_LOG_RESIZE_INVALID_SIZE = WIN32_ERROR(0x00001a96);
  static const ERROR_OBJECT_NO_LONGER_EXISTS = WIN32_ERROR(0x00001a97);
  static const ERROR_STREAM_MINIVERSION_NOT_FOUND = WIN32_ERROR(0x00001a98);
  static const ERROR_STREAM_MINIVERSION_NOT_VALID = WIN32_ERROR(0x00001a99);
  static const ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION =
      WIN32_ERROR(0x00001a9a);
  static const ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT =
      WIN32_ERROR(0x00001a9b);
  static const ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS =
      WIN32_ERROR(0x00001a9c);
  static const ERROR_REMOTE_FILE_VERSION_MISMATCH = WIN32_ERROR(0x00001a9e);
  static const ERROR_HANDLE_NO_LONGER_VALID = WIN32_ERROR(0x00001a9f);
  static const ERROR_NO_TXF_METADATA = WIN32_ERROR(0x00001aa0);
  static const ERROR_LOG_CORRUPTION_DETECTED = WIN32_ERROR(0x00001aa1);
  static const ERROR_CANT_RECOVER_WITH_HANDLE_OPEN = WIN32_ERROR(0x00001aa2);
  static const ERROR_RM_DISCONNECTED = WIN32_ERROR(0x00001aa3);
  static const ERROR_ENLISTMENT_NOT_SUPERIOR = WIN32_ERROR(0x00001aa4);
  static const ERROR_RECOVERY_NOT_NEEDED = WIN32_ERROR(0x00001aa5);
  static const ERROR_RM_ALREADY_STARTED = WIN32_ERROR(0x00001aa6);
  static const ERROR_FILE_IDENTITY_NOT_PERSISTENT = WIN32_ERROR(0x00001aa7);
  static const ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY =
      WIN32_ERROR(0x00001aa8);
  static const ERROR_CANT_CROSS_RM_BOUNDARY = WIN32_ERROR(0x00001aa9);
  static const ERROR_TXF_DIR_NOT_EMPTY = WIN32_ERROR(0x00001aaa);
  static const ERROR_INDOUBT_TRANSACTIONS_EXIST = WIN32_ERROR(0x00001aab);
  static const ERROR_TM_VOLATILE = WIN32_ERROR(0x00001aac);
  static const ERROR_ROLLBACK_TIMER_EXPIRED = WIN32_ERROR(0x00001aad);
  static const ERROR_TXF_ATTRIBUTE_CORRUPT = WIN32_ERROR(0x00001aae);
  static const ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION = WIN32_ERROR(0x00001aaf);
  static const ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED = WIN32_ERROR(0x00001ab0);
  static const ERROR_LOG_GROWTH_FAILED = WIN32_ERROR(0x00001ab1);
  static const ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE =
      WIN32_ERROR(0x00001ab2);
  static const ERROR_TXF_METADATA_ALREADY_PRESENT = WIN32_ERROR(0x00001ab3);
  static const ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET =
      WIN32_ERROR(0x00001ab4);
  static const ERROR_TRANSACTION_REQUIRED_PROMOTION = WIN32_ERROR(0x00001ab5);
  static const ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION =
      WIN32_ERROR(0x00001ab6);
  static const ERROR_TRANSACTIONS_NOT_FROZEN = WIN32_ERROR(0x00001ab7);
  static const ERROR_TRANSACTION_FREEZE_IN_PROGRESS = WIN32_ERROR(0x00001ab8);
  static const ERROR_NOT_SNAPSHOT_VOLUME = WIN32_ERROR(0x00001ab9);
  static const ERROR_NO_SAVEPOINT_WITH_OPEN_FILES = WIN32_ERROR(0x00001aba);
  static const ERROR_DATA_LOST_REPAIR = WIN32_ERROR(0x00001abb);
  static const ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION =
      WIN32_ERROR(0x00001abc);
  static const ERROR_TM_IDENTITY_MISMATCH = WIN32_ERROR(0x00001abd);
  static const ERROR_FLOATED_SECTION = WIN32_ERROR(0x00001abe);
  static const ERROR_CANNOT_ACCEPT_TRANSACTED_WORK = WIN32_ERROR(0x00001abf);
  static const ERROR_CANNOT_ABORT_TRANSACTIONS = WIN32_ERROR(0x00001ac0);
  static const ERROR_BAD_CLUSTERS = WIN32_ERROR(0x00001ac1);
  static const ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION =
      WIN32_ERROR(0x00001ac2);
  static const ERROR_VOLUME_DIRTY = WIN32_ERROR(0x00001ac3);
  static const ERROR_NO_LINK_TRACKING_IN_TRANSACTION = WIN32_ERROR(0x00001ac4);
  static const ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION =
      WIN32_ERROR(0x00001ac5);
  static const ERROR_EXPIRED_HANDLE = WIN32_ERROR(0x00001ac6);
  static const ERROR_TRANSACTION_NOT_ENLISTED = WIN32_ERROR(0x00001ac7);
  static const ERROR_CTX_WINSTATION_NAME_INVALID = WIN32_ERROR(0x00001b59);
  static const ERROR_CTX_INVALID_PD = WIN32_ERROR(0x00001b5a);
  static const ERROR_CTX_PD_NOT_FOUND = WIN32_ERROR(0x00001b5b);
  static const ERROR_CTX_WD_NOT_FOUND = WIN32_ERROR(0x00001b5c);
  static const ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY = WIN32_ERROR(0x00001b5d);
  static const ERROR_CTX_SERVICE_NAME_COLLISION = WIN32_ERROR(0x00001b5e);
  static const ERROR_CTX_CLOSE_PENDING = WIN32_ERROR(0x00001b5f);
  static const ERROR_CTX_NO_OUTBUF = WIN32_ERROR(0x00001b60);
  static const ERROR_CTX_MODEM_INF_NOT_FOUND = WIN32_ERROR(0x00001b61);
  static const ERROR_CTX_INVALID_MODEMNAME = WIN32_ERROR(0x00001b62);
  static const ERROR_CTX_MODEM_RESPONSE_ERROR = WIN32_ERROR(0x00001b63);
  static const ERROR_CTX_MODEM_RESPONSE_TIMEOUT = WIN32_ERROR(0x00001b64);
  static const ERROR_CTX_MODEM_RESPONSE_NO_CARRIER = WIN32_ERROR(0x00001b65);
  static const ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE = WIN32_ERROR(0x00001b66);
  static const ERROR_CTX_MODEM_RESPONSE_BUSY = WIN32_ERROR(0x00001b67);
  static const ERROR_CTX_MODEM_RESPONSE_VOICE = WIN32_ERROR(0x00001b68);
  static const ERROR_CTX_TD_ERROR = WIN32_ERROR(0x00001b69);
  static const ERROR_CTX_WINSTATION_NOT_FOUND = WIN32_ERROR(0x00001b6e);
  static const ERROR_CTX_WINSTATION_ALREADY_EXISTS = WIN32_ERROR(0x00001b6f);
  static const ERROR_CTX_WINSTATION_BUSY = WIN32_ERROR(0x00001b70);
  static const ERROR_CTX_BAD_VIDEO_MODE = WIN32_ERROR(0x00001b71);
  static const ERROR_CTX_GRAPHICS_INVALID = WIN32_ERROR(0x00001b7b);
  static const ERROR_CTX_LOGON_DISABLED = WIN32_ERROR(0x00001b7d);
  static const ERROR_CTX_NOT_CONSOLE = WIN32_ERROR(0x00001b7e);
  static const ERROR_CTX_CLIENT_QUERY_TIMEOUT = WIN32_ERROR(0x00001b80);
  static const ERROR_CTX_CONSOLE_DISCONNECT = WIN32_ERROR(0x00001b81);
  static const ERROR_CTX_CONSOLE_CONNECT = WIN32_ERROR(0x00001b82);
  static const ERROR_CTX_SHADOW_DENIED = WIN32_ERROR(0x00001b84);
  static const ERROR_CTX_WINSTATION_ACCESS_DENIED = WIN32_ERROR(0x00001b85);
  static const ERROR_CTX_INVALID_WD = WIN32_ERROR(0x00001b89);
  static const ERROR_CTX_SHADOW_INVALID = WIN32_ERROR(0x00001b8a);
  static const ERROR_CTX_SHADOW_DISABLED = WIN32_ERROR(0x00001b8b);
  static const ERROR_CTX_CLIENT_LICENSE_IN_USE = WIN32_ERROR(0x00001b8c);
  static const ERROR_CTX_CLIENT_LICENSE_NOT_SET = WIN32_ERROR(0x00001b8d);
  static const ERROR_CTX_LICENSE_NOT_AVAILABLE = WIN32_ERROR(0x00001b8e);
  static const ERROR_CTX_LICENSE_CLIENT_INVALID = WIN32_ERROR(0x00001b8f);
  static const ERROR_CTX_LICENSE_EXPIRED = WIN32_ERROR(0x00001b90);
  static const ERROR_CTX_SHADOW_NOT_RUNNING = WIN32_ERROR(0x00001b91);
  static const ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE = WIN32_ERROR(0x00001b92);
  static const ERROR_ACTIVATION_COUNT_EXCEEDED = WIN32_ERROR(0x00001b93);
  static const ERROR_CTX_WINSTATIONS_DISABLED = WIN32_ERROR(0x00001b94);
  static const ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED = WIN32_ERROR(0x00001b95);
  static const ERROR_CTX_SESSION_IN_USE = WIN32_ERROR(0x00001b96);
  static const ERROR_CTX_NO_FORCE_LOGOFF = WIN32_ERROR(0x00001b97);
  static const ERROR_CTX_ACCOUNT_RESTRICTION = WIN32_ERROR(0x00001b98);
  static const ERROR_RDP_PROTOCOL_ERROR = WIN32_ERROR(0x00001b99);
  static const ERROR_CTX_CDM_CONNECT = WIN32_ERROR(0x00001b9a);
  static const ERROR_CTX_CDM_DISCONNECT = WIN32_ERROR(0x00001b9b);
  static const ERROR_CTX_SECURITY_LAYER_ERROR = WIN32_ERROR(0x00001b9c);
  static const ERROR_TS_INCOMPATIBLE_SESSIONS = WIN32_ERROR(0x00001b9d);
  static const ERROR_TS_VIDEO_SUBSYSTEM_ERROR = WIN32_ERROR(0x00001b9e);
  static const ERROR_DS_NOT_INSTALLED = WIN32_ERROR(0x00002008);
  static const ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY = WIN32_ERROR(0x00002009);
  static const ERROR_DS_NO_ATTRIBUTE_OR_VALUE = WIN32_ERROR(0x0000200a);
  static const ERROR_DS_INVALID_ATTRIBUTE_SYNTAX = WIN32_ERROR(0x0000200b);
  static const ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED = WIN32_ERROR(0x0000200c);
  static const ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS = WIN32_ERROR(0x0000200d);
  static const ERROR_DS_BUSY = WIN32_ERROR(0x0000200e);
  static const ERROR_DS_UNAVAILABLE = WIN32_ERROR(0x0000200f);
  static const ERROR_DS_NO_RIDS_ALLOCATED = WIN32_ERROR(0x00002010);
  static const ERROR_DS_NO_MORE_RIDS = WIN32_ERROR(0x00002011);
  static const ERROR_DS_INCORRECT_ROLE_OWNER = WIN32_ERROR(0x00002012);
  static const ERROR_DS_RIDMGR_INIT_ERROR = WIN32_ERROR(0x00002013);
  static const ERROR_DS_OBJ_CLASS_VIOLATION = WIN32_ERROR(0x00002014);
  static const ERROR_DS_CANT_ON_NON_LEAF = WIN32_ERROR(0x00002015);
  static const ERROR_DS_CANT_ON_RDN = WIN32_ERROR(0x00002016);
  static const ERROR_DS_CANT_MOD_OBJ_CLASS = WIN32_ERROR(0x00002017);
  static const ERROR_DS_CROSS_DOM_MOVE_ERROR = WIN32_ERROR(0x00002018);
  static const ERROR_DS_GC_NOT_AVAILABLE = WIN32_ERROR(0x00002019);
  static const ERROR_SHARED_POLICY = WIN32_ERROR(0x0000201a);
  static const ERROR_POLICY_OBJECT_NOT_FOUND = WIN32_ERROR(0x0000201b);
  static const ERROR_POLICY_ONLY_IN_DS = WIN32_ERROR(0x0000201c);
  static const ERROR_PROMOTION_ACTIVE = WIN32_ERROR(0x0000201d);
  static const ERROR_NO_PROMOTION_ACTIVE = WIN32_ERROR(0x0000201e);
  static const ERROR_DS_OPERATIONS_ERROR = WIN32_ERROR(0x00002020);
  static const ERROR_DS_PROTOCOL_ERROR = WIN32_ERROR(0x00002021);
  static const ERROR_DS_TIMELIMIT_EXCEEDED = WIN32_ERROR(0x00002022);
  static const ERROR_DS_SIZELIMIT_EXCEEDED = WIN32_ERROR(0x00002023);
  static const ERROR_DS_ADMIN_LIMIT_EXCEEDED = WIN32_ERROR(0x00002024);
  static const ERROR_DS_COMPARE_FALSE = WIN32_ERROR(0x00002025);
  static const ERROR_DS_COMPARE_TRUE = WIN32_ERROR(0x00002026);
  static const ERROR_DS_AUTH_METHOD_NOT_SUPPORTED = WIN32_ERROR(0x00002027);
  static const ERROR_DS_STRONG_AUTH_REQUIRED = WIN32_ERROR(0x00002028);
  static const ERROR_DS_INAPPROPRIATE_AUTH = WIN32_ERROR(0x00002029);
  static const ERROR_DS_AUTH_UNKNOWN = WIN32_ERROR(0x0000202a);
  static const ERROR_DS_REFERRAL = WIN32_ERROR(0x0000202b);
  static const ERROR_DS_UNAVAILABLE_CRIT_EXTENSION = WIN32_ERROR(0x0000202c);
  static const ERROR_DS_CONFIDENTIALITY_REQUIRED = WIN32_ERROR(0x0000202d);
  static const ERROR_DS_INAPPROPRIATE_MATCHING = WIN32_ERROR(0x0000202e);
  static const ERROR_DS_CONSTRAINT_VIOLATION = WIN32_ERROR(0x0000202f);
  static const ERROR_DS_NO_SUCH_OBJECT = WIN32_ERROR(0x00002030);
  static const ERROR_DS_ALIAS_PROBLEM = WIN32_ERROR(0x00002031);
  static const ERROR_DS_INVALID_DN_SYNTAX = WIN32_ERROR(0x00002032);
  static const ERROR_DS_IS_LEAF = WIN32_ERROR(0x00002033);
  static const ERROR_DS_ALIAS_DEREF_PROBLEM = WIN32_ERROR(0x00002034);
  static const ERROR_DS_UNWILLING_TO_PERFORM = WIN32_ERROR(0x00002035);
  static const ERROR_DS_LOOP_DETECT = WIN32_ERROR(0x00002036);
  static const ERROR_DS_NAMING_VIOLATION = WIN32_ERROR(0x00002037);
  static const ERROR_DS_OBJECT_RESULTS_TOO_LARGE = WIN32_ERROR(0x00002038);
  static const ERROR_DS_AFFECTS_MULTIPLE_DSAS = WIN32_ERROR(0x00002039);
  static const ERROR_DS_SERVER_DOWN = WIN32_ERROR(0x0000203a);
  static const ERROR_DS_LOCAL_ERROR = WIN32_ERROR(0x0000203b);
  static const ERROR_DS_ENCODING_ERROR = WIN32_ERROR(0x0000203c);
  static const ERROR_DS_DECODING_ERROR = WIN32_ERROR(0x0000203d);
  static const ERROR_DS_FILTER_UNKNOWN = WIN32_ERROR(0x0000203e);
  static const ERROR_DS_PARAM_ERROR = WIN32_ERROR(0x0000203f);
  static const ERROR_DS_NOT_SUPPORTED = WIN32_ERROR(0x00002040);
  static const ERROR_DS_NO_RESULTS_RETURNED = WIN32_ERROR(0x00002041);
  static const ERROR_DS_CONTROL_NOT_FOUND = WIN32_ERROR(0x00002042);
  static const ERROR_DS_CLIENT_LOOP = WIN32_ERROR(0x00002043);
  static const ERROR_DS_REFERRAL_LIMIT_EXCEEDED = WIN32_ERROR(0x00002044);
  static const ERROR_DS_SORT_CONTROL_MISSING = WIN32_ERROR(0x00002045);
  static const ERROR_DS_OFFSET_RANGE_ERROR = WIN32_ERROR(0x00002046);
  static const ERROR_DS_RIDMGR_DISABLED = WIN32_ERROR(0x00002047);
  static const ERROR_DS_ROOT_MUST_BE_NC = WIN32_ERROR(0x0000206d);
  static const ERROR_DS_ADD_REPLICA_INHIBITED = WIN32_ERROR(0x0000206e);
  static const ERROR_DS_ATT_NOT_DEF_IN_SCHEMA = WIN32_ERROR(0x0000206f);
  static const ERROR_DS_MAX_OBJ_SIZE_EXCEEDED = WIN32_ERROR(0x00002070);
  static const ERROR_DS_OBJ_STRING_NAME_EXISTS = WIN32_ERROR(0x00002071);
  static const ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA = WIN32_ERROR(0x00002072);
  static const ERROR_DS_RDN_DOESNT_MATCH_SCHEMA = WIN32_ERROR(0x00002073);
  static const ERROR_DS_NO_REQUESTED_ATTS_FOUND = WIN32_ERROR(0x00002074);
  static const ERROR_DS_USER_BUFFER_TO_SMALL = WIN32_ERROR(0x00002075);
  static const ERROR_DS_ATT_IS_NOT_ON_OBJ = WIN32_ERROR(0x00002076);
  static const ERROR_DS_ILLEGAL_MOD_OPERATION = WIN32_ERROR(0x00002077);
  static const ERROR_DS_OBJ_TOO_LARGE = WIN32_ERROR(0x00002078);
  static const ERROR_DS_BAD_INSTANCE_TYPE = WIN32_ERROR(0x00002079);
  static const ERROR_DS_MASTERDSA_REQUIRED = WIN32_ERROR(0x0000207a);
  static const ERROR_DS_OBJECT_CLASS_REQUIRED = WIN32_ERROR(0x0000207b);
  static const ERROR_DS_MISSING_REQUIRED_ATT = WIN32_ERROR(0x0000207c);
  static const ERROR_DS_ATT_NOT_DEF_FOR_CLASS = WIN32_ERROR(0x0000207d);
  static const ERROR_DS_ATT_ALREADY_EXISTS = WIN32_ERROR(0x0000207e);
  static const ERROR_DS_CANT_ADD_ATT_VALUES = WIN32_ERROR(0x00002080);
  static const ERROR_DS_SINGLE_VALUE_CONSTRAINT = WIN32_ERROR(0x00002081);
  static const ERROR_DS_RANGE_CONSTRAINT = WIN32_ERROR(0x00002082);
  static const ERROR_DS_ATT_VAL_ALREADY_EXISTS = WIN32_ERROR(0x00002083);
  static const ERROR_DS_CANT_REM_MISSING_ATT = WIN32_ERROR(0x00002084);
  static const ERROR_DS_CANT_REM_MISSING_ATT_VAL = WIN32_ERROR(0x00002085);
  static const ERROR_DS_ROOT_CANT_BE_SUBREF = WIN32_ERROR(0x00002086);
  static const ERROR_DS_NO_CHAINING = WIN32_ERROR(0x00002087);
  static const ERROR_DS_NO_CHAINED_EVAL = WIN32_ERROR(0x00002088);
  static const ERROR_DS_NO_PARENT_OBJECT = WIN32_ERROR(0x00002089);
  static const ERROR_DS_PARENT_IS_AN_ALIAS = WIN32_ERROR(0x0000208a);
  static const ERROR_DS_CANT_MIX_MASTER_AND_REPS = WIN32_ERROR(0x0000208b);
  static const ERROR_DS_CHILDREN_EXIST = WIN32_ERROR(0x0000208c);
  static const ERROR_DS_OBJ_NOT_FOUND = WIN32_ERROR(0x0000208d);
  static const ERROR_DS_ALIASED_OBJ_MISSING = WIN32_ERROR(0x0000208e);
  static const ERROR_DS_BAD_NAME_SYNTAX = WIN32_ERROR(0x0000208f);
  static const ERROR_DS_ALIAS_POINTS_TO_ALIAS = WIN32_ERROR(0x00002090);
  static const ERROR_DS_CANT_DEREF_ALIAS = WIN32_ERROR(0x00002091);
  static const ERROR_DS_OUT_OF_SCOPE = WIN32_ERROR(0x00002092);
  static const ERROR_DS_OBJECT_BEING_REMOVED = WIN32_ERROR(0x00002093);
  static const ERROR_DS_CANT_DELETE_DSA_OBJ = WIN32_ERROR(0x00002094);
  static const ERROR_DS_GENERIC_ERROR = WIN32_ERROR(0x00002095);
  static const ERROR_DS_DSA_MUST_BE_INT_MASTER = WIN32_ERROR(0x00002096);
  static const ERROR_DS_CLASS_NOT_DSA = WIN32_ERROR(0x00002097);
  static const ERROR_DS_INSUFF_ACCESS_RIGHTS = WIN32_ERROR(0x00002098);
  static const ERROR_DS_ILLEGAL_SUPERIOR = WIN32_ERROR(0x00002099);
  static const ERROR_DS_ATTRIBUTE_OWNED_BY_SAM = WIN32_ERROR(0x0000209a);
  static const ERROR_DS_NAME_TOO_MANY_PARTS = WIN32_ERROR(0x0000209b);
  static const ERROR_DS_NAME_TOO_LONG = WIN32_ERROR(0x0000209c);
  static const ERROR_DS_NAME_VALUE_TOO_LONG = WIN32_ERROR(0x0000209d);
  static const ERROR_DS_NAME_UNPARSEABLE = WIN32_ERROR(0x0000209e);
  static const ERROR_DS_NAME_TYPE_UNKNOWN = WIN32_ERROR(0x0000209f);
  static const ERROR_DS_NOT_AN_OBJECT = WIN32_ERROR(0x000020a0);
  static const ERROR_DS_SEC_DESC_TOO_SHORT = WIN32_ERROR(0x000020a1);
  static const ERROR_DS_SEC_DESC_INVALID = WIN32_ERROR(0x000020a2);
  static const ERROR_DS_NO_DELETED_NAME = WIN32_ERROR(0x000020a3);
  static const ERROR_DS_SUBREF_MUST_HAVE_PARENT = WIN32_ERROR(0x000020a4);
  static const ERROR_DS_NCNAME_MUST_BE_NC = WIN32_ERROR(0x000020a5);
  static const ERROR_DS_CANT_ADD_SYSTEM_ONLY = WIN32_ERROR(0x000020a6);
  static const ERROR_DS_CLASS_MUST_BE_CONCRETE = WIN32_ERROR(0x000020a7);
  static const ERROR_DS_INVALID_DMD = WIN32_ERROR(0x000020a8);
  static const ERROR_DS_OBJ_GUID_EXISTS = WIN32_ERROR(0x000020a9);
  static const ERROR_DS_NOT_ON_BACKLINK = WIN32_ERROR(0x000020aa);
  static const ERROR_DS_NO_CROSSREF_FOR_NC = WIN32_ERROR(0x000020ab);
  static const ERROR_DS_SHUTTING_DOWN = WIN32_ERROR(0x000020ac);
  static const ERROR_DS_UNKNOWN_OPERATION = WIN32_ERROR(0x000020ad);
  static const ERROR_DS_INVALID_ROLE_OWNER = WIN32_ERROR(0x000020ae);
  static const ERROR_DS_COULDNT_CONTACT_FSMO = WIN32_ERROR(0x000020af);
  static const ERROR_DS_CROSS_NC_DN_RENAME = WIN32_ERROR(0x000020b0);
  static const ERROR_DS_CANT_MOD_SYSTEM_ONLY = WIN32_ERROR(0x000020b1);
  static const ERROR_DS_REPLICATOR_ONLY = WIN32_ERROR(0x000020b2);
  static const ERROR_DS_OBJ_CLASS_NOT_DEFINED = WIN32_ERROR(0x000020b3);
  static const ERROR_DS_OBJ_CLASS_NOT_SUBCLASS = WIN32_ERROR(0x000020b4);
  static const ERROR_DS_NAME_REFERENCE_INVALID = WIN32_ERROR(0x000020b5);
  static const ERROR_DS_CROSS_REF_EXISTS = WIN32_ERROR(0x000020b6);
  static const ERROR_DS_CANT_DEL_MASTER_CROSSREF = WIN32_ERROR(0x000020b7);
  static const ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD = WIN32_ERROR(0x000020b8);
  static const ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX = WIN32_ERROR(0x000020b9);
  static const ERROR_DS_DUP_RDN = WIN32_ERROR(0x000020ba);
  static const ERROR_DS_DUP_OID = WIN32_ERROR(0x000020bb);
  static const ERROR_DS_DUP_MAPI_ID = WIN32_ERROR(0x000020bc);
  static const ERROR_DS_DUP_SCHEMA_ID_GUID = WIN32_ERROR(0x000020bd);
  static const ERROR_DS_DUP_LDAP_DISPLAY_NAME = WIN32_ERROR(0x000020be);
  static const ERROR_DS_SEMANTIC_ATT_TEST = WIN32_ERROR(0x000020bf);
  static const ERROR_DS_SYNTAX_MISMATCH = WIN32_ERROR(0x000020c0);
  static const ERROR_DS_EXISTS_IN_MUST_HAVE = WIN32_ERROR(0x000020c1);
  static const ERROR_DS_EXISTS_IN_MAY_HAVE = WIN32_ERROR(0x000020c2);
  static const ERROR_DS_NONEXISTENT_MAY_HAVE = WIN32_ERROR(0x000020c3);
  static const ERROR_DS_NONEXISTENT_MUST_HAVE = WIN32_ERROR(0x000020c4);
  static const ERROR_DS_AUX_CLS_TEST_FAIL = WIN32_ERROR(0x000020c5);
  static const ERROR_DS_NONEXISTENT_POSS_SUP = WIN32_ERROR(0x000020c6);
  static const ERROR_DS_SUB_CLS_TEST_FAIL = WIN32_ERROR(0x000020c7);
  static const ERROR_DS_BAD_RDN_ATT_ID_SYNTAX = WIN32_ERROR(0x000020c8);
  static const ERROR_DS_EXISTS_IN_AUX_CLS = WIN32_ERROR(0x000020c9);
  static const ERROR_DS_EXISTS_IN_SUB_CLS = WIN32_ERROR(0x000020ca);
  static const ERROR_DS_EXISTS_IN_POSS_SUP = WIN32_ERROR(0x000020cb);
  static const ERROR_DS_RECALCSCHEMA_FAILED = WIN32_ERROR(0x000020cc);
  static const ERROR_DS_TREE_DELETE_NOT_FINISHED = WIN32_ERROR(0x000020cd);
  static const ERROR_DS_CANT_DELETE = WIN32_ERROR(0x000020ce);
  static const ERROR_DS_ATT_SCHEMA_REQ_ID = WIN32_ERROR(0x000020cf);
  static const ERROR_DS_BAD_ATT_SCHEMA_SYNTAX = WIN32_ERROR(0x000020d0);
  static const ERROR_DS_CANT_CACHE_ATT = WIN32_ERROR(0x000020d1);
  static const ERROR_DS_CANT_CACHE_CLASS = WIN32_ERROR(0x000020d2);
  static const ERROR_DS_CANT_REMOVE_ATT_CACHE = WIN32_ERROR(0x000020d3);
  static const ERROR_DS_CANT_REMOVE_CLASS_CACHE = WIN32_ERROR(0x000020d4);
  static const ERROR_DS_CANT_RETRIEVE_DN = WIN32_ERROR(0x000020d5);
  static const ERROR_DS_MISSING_SUPREF = WIN32_ERROR(0x000020d6);
  static const ERROR_DS_CANT_RETRIEVE_INSTANCE = WIN32_ERROR(0x000020d7);
  static const ERROR_DS_CODE_INCONSISTENCY = WIN32_ERROR(0x000020d8);
  static const ERROR_DS_DATABASE_ERROR = WIN32_ERROR(0x000020d9);
  static const ERROR_DS_GOVERNSID_MISSING = WIN32_ERROR(0x000020da);
  static const ERROR_DS_MISSING_EXPECTED_ATT = WIN32_ERROR(0x000020db);
  static const ERROR_DS_NCNAME_MISSING_CR_REF = WIN32_ERROR(0x000020dc);
  static const ERROR_DS_SECURITY_CHECKING_ERROR = WIN32_ERROR(0x000020dd);
  static const ERROR_DS_SCHEMA_NOT_LOADED = WIN32_ERROR(0x000020de);
  static const ERROR_DS_SCHEMA_ALLOC_FAILED = WIN32_ERROR(0x000020df);
  static const ERROR_DS_ATT_SCHEMA_REQ_SYNTAX = WIN32_ERROR(0x000020e0);
  static const ERROR_DS_GCVERIFY_ERROR = WIN32_ERROR(0x000020e1);
  static const ERROR_DS_DRA_SCHEMA_MISMATCH = WIN32_ERROR(0x000020e2);
  static const ERROR_DS_CANT_FIND_DSA_OBJ = WIN32_ERROR(0x000020e3);
  static const ERROR_DS_CANT_FIND_EXPECTED_NC = WIN32_ERROR(0x000020e4);
  static const ERROR_DS_CANT_FIND_NC_IN_CACHE = WIN32_ERROR(0x000020e5);
  static const ERROR_DS_CANT_RETRIEVE_CHILD = WIN32_ERROR(0x000020e6);
  static const ERROR_DS_SECURITY_ILLEGAL_MODIFY = WIN32_ERROR(0x000020e7);
  static const ERROR_DS_CANT_REPLACE_HIDDEN_REC = WIN32_ERROR(0x000020e8);
  static const ERROR_DS_BAD_HIERARCHY_FILE = WIN32_ERROR(0x000020e9);
  static const ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED = WIN32_ERROR(0x000020ea);
  static const ERROR_DS_CONFIG_PARAM_MISSING = WIN32_ERROR(0x000020eb);
  static const ERROR_DS_COUNTING_AB_INDICES_FAILED = WIN32_ERROR(0x000020ec);
  static const ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED = WIN32_ERROR(0x000020ed);
  static const ERROR_DS_INTERNAL_FAILURE = WIN32_ERROR(0x000020ee);
  static const ERROR_DS_UNKNOWN_ERROR = WIN32_ERROR(0x000020ef);
  static const ERROR_DS_ROOT_REQUIRES_CLASS_TOP = WIN32_ERROR(0x000020f0);
  static const ERROR_DS_REFUSING_FSMO_ROLES = WIN32_ERROR(0x000020f1);
  static const ERROR_DS_MISSING_FSMO_SETTINGS = WIN32_ERROR(0x000020f2);
  static const ERROR_DS_UNABLE_TO_SURRENDER_ROLES = WIN32_ERROR(0x000020f3);
  static const ERROR_DS_DRA_GENERIC = WIN32_ERROR(0x000020f4);
  static const ERROR_DS_DRA_INVALID_PARAMETER = WIN32_ERROR(0x000020f5);
  static const ERROR_DS_DRA_BUSY = WIN32_ERROR(0x000020f6);
  static const ERROR_DS_DRA_BAD_DN = WIN32_ERROR(0x000020f7);
  static const ERROR_DS_DRA_BAD_NC = WIN32_ERROR(0x000020f8);
  static const ERROR_DS_DRA_DN_EXISTS = WIN32_ERROR(0x000020f9);
  static const ERROR_DS_DRA_INTERNAL_ERROR = WIN32_ERROR(0x000020fa);
  static const ERROR_DS_DRA_INCONSISTENT_DIT = WIN32_ERROR(0x000020fb);
  static const ERROR_DS_DRA_CONNECTION_FAILED = WIN32_ERROR(0x000020fc);
  static const ERROR_DS_DRA_BAD_INSTANCE_TYPE = WIN32_ERROR(0x000020fd);
  static const ERROR_DS_DRA_OUT_OF_MEM = WIN32_ERROR(0x000020fe);
  static const ERROR_DS_DRA_MAIL_PROBLEM = WIN32_ERROR(0x000020ff);
  static const ERROR_DS_DRA_REF_ALREADY_EXISTS = WIN32_ERROR(0x00002100);
  static const ERROR_DS_DRA_REF_NOT_FOUND = WIN32_ERROR(0x00002101);
  static const ERROR_DS_DRA_OBJ_IS_REP_SOURCE = WIN32_ERROR(0x00002102);
  static const ERROR_DS_DRA_DB_ERROR = WIN32_ERROR(0x00002103);
  static const ERROR_DS_DRA_NO_REPLICA = WIN32_ERROR(0x00002104);
  static const ERROR_DS_DRA_ACCESS_DENIED = WIN32_ERROR(0x00002105);
  static const ERROR_DS_DRA_NOT_SUPPORTED = WIN32_ERROR(0x00002106);
  static const ERROR_DS_DRA_RPC_CANCELLED = WIN32_ERROR(0x00002107);
  static const ERROR_DS_DRA_SOURCE_DISABLED = WIN32_ERROR(0x00002108);
  static const ERROR_DS_DRA_SINK_DISABLED = WIN32_ERROR(0x00002109);
  static const ERROR_DS_DRA_NAME_COLLISION = WIN32_ERROR(0x0000210a);
  static const ERROR_DS_DRA_SOURCE_REINSTALLED = WIN32_ERROR(0x0000210b);
  static const ERROR_DS_DRA_MISSING_PARENT = WIN32_ERROR(0x0000210c);
  static const ERROR_DS_DRA_PREEMPTED = WIN32_ERROR(0x0000210d);
  static const ERROR_DS_DRA_ABANDON_SYNC = WIN32_ERROR(0x0000210e);
  static const ERROR_DS_DRA_SHUTDOWN = WIN32_ERROR(0x0000210f);
  static const ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET = WIN32_ERROR(0x00002110);
  static const ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA = WIN32_ERROR(0x00002111);
  static const ERROR_DS_DRA_EXTN_CONNECTION_FAILED = WIN32_ERROR(0x00002112);
  static const ERROR_DS_INSTALL_SCHEMA_MISMATCH = WIN32_ERROR(0x00002113);
  static const ERROR_DS_DUP_LINK_ID = WIN32_ERROR(0x00002114);
  static const ERROR_DS_NAME_ERROR_RESOLVING = WIN32_ERROR(0x00002115);
  static const ERROR_DS_NAME_ERROR_NOT_FOUND = WIN32_ERROR(0x00002116);
  static const ERROR_DS_NAME_ERROR_NOT_UNIQUE = WIN32_ERROR(0x00002117);
  static const ERROR_DS_NAME_ERROR_NO_MAPPING = WIN32_ERROR(0x00002118);
  static const ERROR_DS_NAME_ERROR_DOMAIN_ONLY = WIN32_ERROR(0x00002119);
  static const ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING =
      WIN32_ERROR(0x0000211a);
  static const ERROR_DS_CONSTRUCTED_ATT_MOD = WIN32_ERROR(0x0000211b);
  static const ERROR_DS_WRONG_OM_OBJ_CLASS = WIN32_ERROR(0x0000211c);
  static const ERROR_DS_DRA_REPL_PENDING = WIN32_ERROR(0x0000211d);
  static const ERROR_DS_DS_REQUIRED = WIN32_ERROR(0x0000211e);
  static const ERROR_DS_INVALID_LDAP_DISPLAY_NAME = WIN32_ERROR(0x0000211f);
  static const ERROR_DS_NON_BASE_SEARCH = WIN32_ERROR(0x00002120);
  static const ERROR_DS_CANT_RETRIEVE_ATTS = WIN32_ERROR(0x00002121);
  static const ERROR_DS_BACKLINK_WITHOUT_LINK = WIN32_ERROR(0x00002122);
  static const ERROR_DS_EPOCH_MISMATCH = WIN32_ERROR(0x00002123);
  static const ERROR_DS_SRC_NAME_MISMATCH = WIN32_ERROR(0x00002124);
  static const ERROR_DS_SRC_AND_DST_NC_IDENTICAL = WIN32_ERROR(0x00002125);
  static const ERROR_DS_DST_NC_MISMATCH = WIN32_ERROR(0x00002126);
  static const ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC = WIN32_ERROR(0x00002127);
  static const ERROR_DS_SRC_GUID_MISMATCH = WIN32_ERROR(0x00002128);
  static const ERROR_DS_CANT_MOVE_DELETED_OBJECT = WIN32_ERROR(0x00002129);
  static const ERROR_DS_PDC_OPERATION_IN_PROGRESS = WIN32_ERROR(0x0000212a);
  static const ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD = WIN32_ERROR(0x0000212b);
  static const ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION = WIN32_ERROR(0x0000212c);
  static const ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS =
      WIN32_ERROR(0x0000212d);
  static const ERROR_DS_NC_MUST_HAVE_NC_PARENT = WIN32_ERROR(0x0000212e);
  static const ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE = WIN32_ERROR(0x0000212f);
  static const ERROR_DS_DST_DOMAIN_NOT_NATIVE = WIN32_ERROR(0x00002130);
  static const ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER =
      WIN32_ERROR(0x00002131);
  static const ERROR_DS_CANT_MOVE_ACCOUNT_GROUP = WIN32_ERROR(0x00002132);
  static const ERROR_DS_CANT_MOVE_RESOURCE_GROUP = WIN32_ERROR(0x00002133);
  static const ERROR_DS_INVALID_SEARCH_FLAG = WIN32_ERROR(0x00002134);
  static const ERROR_DS_NO_TREE_DELETE_ABOVE_NC = WIN32_ERROR(0x00002135);
  static const ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE = WIN32_ERROR(0x00002136);
  static const ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE =
      WIN32_ERROR(0x00002137);
  static const ERROR_DS_SAM_INIT_FAILURE = WIN32_ERROR(0x00002138);
  static const ERROR_DS_SENSITIVE_GROUP_VIOLATION = WIN32_ERROR(0x00002139);
  static const ERROR_DS_CANT_MOD_PRIMARYGROUPID = WIN32_ERROR(0x0000213a);
  static const ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD = WIN32_ERROR(0x0000213b);
  static const ERROR_DS_NONSAFE_SCHEMA_CHANGE = WIN32_ERROR(0x0000213c);
  static const ERROR_DS_SCHEMA_UPDATE_DISALLOWED = WIN32_ERROR(0x0000213d);
  static const ERROR_DS_CANT_CREATE_UNDER_SCHEMA = WIN32_ERROR(0x0000213e);
  static const ERROR_DS_INSTALL_NO_SRC_SCH_VERSION = WIN32_ERROR(0x0000213f);
  static const ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE =
      WIN32_ERROR(0x00002140);
  static const ERROR_DS_INVALID_GROUP_TYPE = WIN32_ERROR(0x00002141);
  static const ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN =
      WIN32_ERROR(0x00002142);
  static const ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN =
      WIN32_ERROR(0x00002143);
  static const ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = WIN32_ERROR(0x00002144);
  static const ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER =
      WIN32_ERROR(0x00002145);
  static const ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER =
      WIN32_ERROR(0x00002146);
  static const ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER =
      WIN32_ERROR(0x00002147);
  static const ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER =
      WIN32_ERROR(0x00002148);
  static const ERROR_DS_HAVE_PRIMARY_MEMBERS = WIN32_ERROR(0x00002149);
  static const ERROR_DS_STRING_SD_CONVERSION_FAILED = WIN32_ERROR(0x0000214a);
  static const ERROR_DS_NAMING_MASTER_GC = WIN32_ERROR(0x0000214b);
  static const ERROR_DS_DNS_LOOKUP_FAILURE = WIN32_ERROR(0x0000214c);
  static const ERROR_DS_COULDNT_UPDATE_SPNS = WIN32_ERROR(0x0000214d);
  static const ERROR_DS_CANT_RETRIEVE_SD = WIN32_ERROR(0x0000214e);
  static const ERROR_DS_KEY_NOT_UNIQUE = WIN32_ERROR(0x0000214f);
  static const ERROR_DS_WRONG_LINKED_ATT_SYNTAX = WIN32_ERROR(0x00002150);
  static const ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD = WIN32_ERROR(0x00002151);
  static const ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY = WIN32_ERROR(0x00002152);
  static const ERROR_DS_CANT_START = WIN32_ERROR(0x00002153);
  static const ERROR_DS_INIT_FAILURE = WIN32_ERROR(0x00002154);
  static const ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION = WIN32_ERROR(0x00002155);
  static const ERROR_DS_SOURCE_DOMAIN_IN_FOREST = WIN32_ERROR(0x00002156);
  static const ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST =
      WIN32_ERROR(0x00002157);
  static const ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED =
      WIN32_ERROR(0x00002158);
  static const ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN = WIN32_ERROR(0x00002159);
  static const ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER = WIN32_ERROR(0x0000215a);
  static const ERROR_DS_SRC_SID_EXISTS_IN_FOREST = WIN32_ERROR(0x0000215b);
  static const ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH =
      WIN32_ERROR(0x0000215c);
  static const ERROR_SAM_INIT_FAILURE = WIN32_ERROR(0x0000215d);
  static const ERROR_DS_DRA_SCHEMA_INFO_SHIP = WIN32_ERROR(0x0000215e);
  static const ERROR_DS_DRA_SCHEMA_CONFLICT = WIN32_ERROR(0x0000215f);
  static const ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT = WIN32_ERROR(0x00002160);
  static const ERROR_DS_DRA_OBJ_NC_MISMATCH = WIN32_ERROR(0x00002161);
  static const ERROR_DS_NC_STILL_HAS_DSAS = WIN32_ERROR(0x00002162);
  static const ERROR_DS_GC_REQUIRED = WIN32_ERROR(0x00002163);
  static const ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = WIN32_ERROR(0x00002164);
  static const ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS = WIN32_ERROR(0x00002165);
  static const ERROR_DS_CANT_ADD_TO_GC = WIN32_ERROR(0x00002166);
  static const ERROR_DS_NO_CHECKPOINT_WITH_PDC = WIN32_ERROR(0x00002167);
  static const ERROR_DS_SOURCE_AUDITING_NOT_ENABLED = WIN32_ERROR(0x00002168);
  static const ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC = WIN32_ERROR(0x00002169);
  static const ERROR_DS_INVALID_NAME_FOR_SPN = WIN32_ERROR(0x0000216a);
  static const ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS = WIN32_ERROR(0x0000216b);
  static const ERROR_DS_UNICODEPWD_NOT_IN_QUOTES = WIN32_ERROR(0x0000216c);
  static const ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED =
      WIN32_ERROR(0x0000216d);
  static const ERROR_DS_MUST_BE_RUN_ON_DST_DC = WIN32_ERROR(0x0000216e);
  static const ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER = WIN32_ERROR(0x0000216f);
  static const ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ = WIN32_ERROR(0x00002170);
  static const ERROR_DS_INIT_FAILURE_CONSOLE = WIN32_ERROR(0x00002171);
  static const ERROR_DS_SAM_INIT_FAILURE_CONSOLE = WIN32_ERROR(0x00002172);
  static const ERROR_DS_FOREST_VERSION_TOO_HIGH = WIN32_ERROR(0x00002173);
  static const ERROR_DS_DOMAIN_VERSION_TOO_HIGH = WIN32_ERROR(0x00002174);
  static const ERROR_DS_FOREST_VERSION_TOO_LOW = WIN32_ERROR(0x00002175);
  static const ERROR_DS_DOMAIN_VERSION_TOO_LOW = WIN32_ERROR(0x00002176);
  static const ERROR_DS_INCOMPATIBLE_VERSION = WIN32_ERROR(0x00002177);
  static const ERROR_DS_LOW_DSA_VERSION = WIN32_ERROR(0x00002178);
  static const ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN =
      WIN32_ERROR(0x00002179);
  static const ERROR_DS_NOT_SUPPORTED_SORT_ORDER = WIN32_ERROR(0x0000217a);
  static const ERROR_DS_NAME_NOT_UNIQUE = WIN32_ERROR(0x0000217b);
  static const ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 =
      WIN32_ERROR(0x0000217c);
  static const ERROR_DS_OUT_OF_VERSION_STORE = WIN32_ERROR(0x0000217d);
  static const ERROR_DS_INCOMPATIBLE_CONTROLS_USED = WIN32_ERROR(0x0000217e);
  static const ERROR_DS_NO_REF_DOMAIN = WIN32_ERROR(0x0000217f);
  static const ERROR_DS_RESERVED_LINK_ID = WIN32_ERROR(0x00002180);
  static const ERROR_DS_LINK_ID_NOT_AVAILABLE = WIN32_ERROR(0x00002181);
  static const ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = WIN32_ERROR(0x00002182);
  static const ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE =
      WIN32_ERROR(0x00002183);
  static const ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC = WIN32_ERROR(0x00002184);
  static const ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG = WIN32_ERROR(0x00002185);
  static const ERROR_DS_MODIFYDN_WRONG_GRANDPARENT = WIN32_ERROR(0x00002186);
  static const ERROR_DS_NAME_ERROR_TRUST_REFERRAL = WIN32_ERROR(0x00002187);
  static const ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER = WIN32_ERROR(0x00002188);
  static const ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD = WIN32_ERROR(0x00002189);
  static const ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 = WIN32_ERROR(0x0000218a);
  static const ERROR_DS_THREAD_LIMIT_EXCEEDED = WIN32_ERROR(0x0000218b);
  static const ERROR_DS_NOT_CLOSEST = WIN32_ERROR(0x0000218c);
  static const ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF =
      WIN32_ERROR(0x0000218d);
  static const ERROR_DS_SINGLE_USER_MODE_FAILED = WIN32_ERROR(0x0000218e);
  static const ERROR_DS_NTDSCRIPT_SYNTAX_ERROR = WIN32_ERROR(0x0000218f);
  static const ERROR_DS_NTDSCRIPT_PROCESS_ERROR = WIN32_ERROR(0x00002190);
  static const ERROR_DS_DIFFERENT_REPL_EPOCHS = WIN32_ERROR(0x00002191);
  static const ERROR_DS_DRS_EXTENSIONS_CHANGED = WIN32_ERROR(0x00002192);
  static const ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR =
      WIN32_ERROR(0x00002193);
  static const ERROR_DS_NO_MSDS_INTID = WIN32_ERROR(0x00002194);
  static const ERROR_DS_DUP_MSDS_INTID = WIN32_ERROR(0x00002195);
  static const ERROR_DS_EXISTS_IN_RDNATTID = WIN32_ERROR(0x00002196);
  static const ERROR_DS_AUTHORIZATION_FAILED = WIN32_ERROR(0x00002197);
  static const ERROR_DS_INVALID_SCRIPT = WIN32_ERROR(0x00002198);
  static const ERROR_DS_REMOTE_CROSSREF_OP_FAILED = WIN32_ERROR(0x00002199);
  static const ERROR_DS_CROSS_REF_BUSY = WIN32_ERROR(0x0000219a);
  static const ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN =
      WIN32_ERROR(0x0000219b);
  static const ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC = WIN32_ERROR(0x0000219c);
  static const ERROR_DS_DUPLICATE_ID_FOUND = WIN32_ERROR(0x0000219d);
  static const ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT =
      WIN32_ERROR(0x0000219e);
  static const ERROR_DS_GROUP_CONVERSION_ERROR = WIN32_ERROR(0x0000219f);
  static const ERROR_DS_CANT_MOVE_APP_BASIC_GROUP = WIN32_ERROR(0x000021a0);
  static const ERROR_DS_CANT_MOVE_APP_QUERY_GROUP = WIN32_ERROR(0x000021a1);
  static const ERROR_DS_ROLE_NOT_VERIFIED = WIN32_ERROR(0x000021a2);
  static const ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL =
      WIN32_ERROR(0x000021a3);
  static const ERROR_DS_DOMAIN_RENAME_IN_PROGRESS = WIN32_ERROR(0x000021a4);
  static const ERROR_DS_EXISTING_AD_CHILD_NC = WIN32_ERROR(0x000021a5);
  static const ERROR_DS_REPL_LIFETIME_EXCEEDED = WIN32_ERROR(0x000021a6);
  static const ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER =
      WIN32_ERROR(0x000021a7);
  static const ERROR_DS_LDAP_SEND_QUEUE_FULL = WIN32_ERROR(0x000021a8);
  static const ERROR_DS_DRA_OUT_SCHEDULE_WINDOW = WIN32_ERROR(0x000021a9);
  static const ERROR_DS_POLICY_NOT_KNOWN = WIN32_ERROR(0x000021aa);
  static const ERROR_NO_SITE_SETTINGS_OBJECT = WIN32_ERROR(0x000021ab);
  static const ERROR_NO_SECRETS = WIN32_ERROR(0x000021ac);
  static const ERROR_NO_WRITABLE_DC_FOUND = WIN32_ERROR(0x000021ad);
  static const ERROR_DS_NO_SERVER_OBJECT = WIN32_ERROR(0x000021ae);
  static const ERROR_DS_NO_NTDSA_OBJECT = WIN32_ERROR(0x000021af);
  static const ERROR_DS_NON_ASQ_SEARCH = WIN32_ERROR(0x000021b0);
  static const ERROR_DS_AUDIT_FAILURE = WIN32_ERROR(0x000021b1);
  static const ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE = WIN32_ERROR(0x000021b2);
  static const ERROR_DS_INVALID_SEARCH_FLAG_TUPLE = WIN32_ERROR(0x000021b3);
  static const ERROR_DS_HIERARCHY_TABLE_TOO_DEEP = WIN32_ERROR(0x000021b4);
  static const ERROR_DS_DRA_CORRUPT_UTD_VECTOR = WIN32_ERROR(0x000021b5);
  static const ERROR_DS_DRA_SECRETS_DENIED = WIN32_ERROR(0x000021b6);
  static const ERROR_DS_RESERVED_MAPI_ID = WIN32_ERROR(0x000021b7);
  static const ERROR_DS_MAPI_ID_NOT_AVAILABLE = WIN32_ERROR(0x000021b8);
  static const ERROR_DS_DRA_MISSING_KRBTGT_SECRET = WIN32_ERROR(0x000021b9);
  static const ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST = WIN32_ERROR(0x000021ba);
  static const ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST = WIN32_ERROR(0x000021bb);
  static const ERROR_INVALID_USER_PRINCIPAL_NAME = WIN32_ERROR(0x000021bc);
  static const ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS =
      WIN32_ERROR(0x000021bd);
  static const ERROR_DS_OID_NOT_FOUND = WIN32_ERROR(0x000021be);
  static const ERROR_DS_DRA_RECYCLED_TARGET = WIN32_ERROR(0x000021bf);
  static const ERROR_DS_DISALLOWED_NC_REDIRECT = WIN32_ERROR(0x000021c0);
  static const ERROR_DS_HIGH_ADLDS_FFL = WIN32_ERROR(0x000021c1);
  static const ERROR_DS_HIGH_DSA_VERSION = WIN32_ERROR(0x000021c2);
  static const ERROR_DS_LOW_ADLDS_FFL = WIN32_ERROR(0x000021c3);
  static const ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION =
      WIN32_ERROR(0x000021c4);
  static const ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED =
      WIN32_ERROR(0x000021c5);
  static const ERROR_INCORRECT_ACCOUNT_TYPE = WIN32_ERROR(0x000021c6);
  static const ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST =
      WIN32_ERROR(0x000021c7);
  static const ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST =
      WIN32_ERROR(0x000021c8);
  static const ERROR_DS_MISSING_FOREST_TRUST = WIN32_ERROR(0x000021c9);
  static const ERROR_DS_VALUE_KEY_NOT_UNIQUE = WIN32_ERROR(0x000021ca);
  static const ERROR_WEAK_WHFBKEY_BLOCKED = WIN32_ERROR(0x000021cb);
  static const ERROR_DS_PER_ATTRIBUTE_AUTHZ_FAILED_DURING_ADD =
      WIN32_ERROR(0x000021cc);
  static const ERROR_LOCAL_POLICY_MODIFICATION_NOT_SUPPORTED =
      WIN32_ERROR(0x000021cd);
  static const ERROR_POLICY_CONTROLLED_ACCOUNT = WIN32_ERROR(0x000021ce);
  static const ERROR_LAPS_LEGACY_SCHEMA_MISSING = WIN32_ERROR(0x000021cf);
  static const ERROR_LAPS_SCHEMA_MISSING = WIN32_ERROR(0x000021d0);
  static const ERROR_LAPS_ENCRYPTION_REQUIRES_2016_DFL =
      WIN32_ERROR(0x000021d1);
  static const DNS_ERROR_RESPONSE_CODES_BASE = WIN32_ERROR(0x00002328);
  static const DNS_ERROR_RCODE_NO_ERROR = WIN32_ERROR(0x00000000);
  static const DNS_ERROR_MASK = WIN32_ERROR(0x00002328);
  static const DNS_ERROR_RCODE_FORMAT_ERROR = WIN32_ERROR(0x00002329);
  static const DNS_ERROR_RCODE_SERVER_FAILURE = WIN32_ERROR(0x0000232a);
  static const DNS_ERROR_RCODE_NAME_ERROR = WIN32_ERROR(0x0000232b);
  static const DNS_ERROR_RCODE_NOT_IMPLEMENTED = WIN32_ERROR(0x0000232c);
  static const DNS_ERROR_RCODE_REFUSED = WIN32_ERROR(0x0000232d);
  static const DNS_ERROR_RCODE_YXDOMAIN = WIN32_ERROR(0x0000232e);
  static const DNS_ERROR_RCODE_YXRRSET = WIN32_ERROR(0x0000232f);
  static const DNS_ERROR_RCODE_NXRRSET = WIN32_ERROR(0x00002330);
  static const DNS_ERROR_RCODE_NOTAUTH = WIN32_ERROR(0x00002331);
  static const DNS_ERROR_RCODE_NOTZONE = WIN32_ERROR(0x00002332);
  static const DNS_ERROR_RCODE_BADSIG = WIN32_ERROR(0x00002338);
  static const DNS_ERROR_RCODE_BADKEY = WIN32_ERROR(0x00002339);
  static const DNS_ERROR_RCODE_BADTIME = WIN32_ERROR(0x0000233a);
  static const DNS_ERROR_RCODE_LAST = WIN32_ERROR(0x0000233a);
  static const DNS_ERROR_DNSSEC_BASE = WIN32_ERROR(0x0000238c);
  static const DNS_ERROR_KEYMASTER_REQUIRED = WIN32_ERROR(0x0000238d);
  static const DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE = WIN32_ERROR(0x0000238e);
  static const DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1 =
      WIN32_ERROR(0x0000238f);
  static const DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS =
      WIN32_ERROR(0x00002390);
  static const DNS_ERROR_UNSUPPORTED_ALGORITHM = WIN32_ERROR(0x00002391);
  static const DNS_ERROR_INVALID_KEY_SIZE = WIN32_ERROR(0x00002392);
  static const DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE = WIN32_ERROR(0x00002393);
  static const DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION =
      WIN32_ERROR(0x00002394);
  static const DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR =
      WIN32_ERROR(0x00002395);
  static const DNS_ERROR_UNEXPECTED_CNG_ERROR = WIN32_ERROR(0x00002396);
  static const DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION =
      WIN32_ERROR(0x00002397);
  static const DNS_ERROR_KSP_NOT_ACCESSIBLE = WIN32_ERROR(0x00002398);
  static const DNS_ERROR_TOO_MANY_SKDS = WIN32_ERROR(0x00002399);
  static const DNS_ERROR_INVALID_ROLLOVER_PERIOD = WIN32_ERROR(0x0000239a);
  static const DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET =
      WIN32_ERROR(0x0000239b);
  static const DNS_ERROR_ROLLOVER_IN_PROGRESS = WIN32_ERROR(0x0000239c);
  static const DNS_ERROR_STANDBY_KEY_NOT_PRESENT = WIN32_ERROR(0x0000239d);
  static const DNS_ERROR_NOT_ALLOWED_ON_ZSK = WIN32_ERROR(0x0000239e);
  static const DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD = WIN32_ERROR(0x0000239f);
  static const DNS_ERROR_ROLLOVER_ALREADY_QUEUED = WIN32_ERROR(0x000023a0);
  static const DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE = WIN32_ERROR(0x000023a1);
  static const DNS_ERROR_BAD_KEYMASTER = WIN32_ERROR(0x000023a2);
  static const DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD =
      WIN32_ERROR(0x000023a3);
  static const DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT =
      WIN32_ERROR(0x000023a4);
  static const DNS_ERROR_DNSSEC_IS_DISABLED = WIN32_ERROR(0x000023a5);
  static const DNS_ERROR_INVALID_XML = WIN32_ERROR(0x000023a6);
  static const DNS_ERROR_NO_VALID_TRUST_ANCHORS = WIN32_ERROR(0x000023a7);
  static const DNS_ERROR_ROLLOVER_NOT_POKEABLE = WIN32_ERROR(0x000023a8);
  static const DNS_ERROR_NSEC3_NAME_COLLISION = WIN32_ERROR(0x000023a9);
  static const DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1 =
      WIN32_ERROR(0x000023aa);
  static const DNS_ERROR_PACKET_FMT_BASE = WIN32_ERROR(0x0000251c);
  static const DNS_ERROR_BAD_PACKET = WIN32_ERROR(0x0000251e);
  static const DNS_ERROR_NO_PACKET = WIN32_ERROR(0x0000251f);
  static const DNS_ERROR_RCODE = WIN32_ERROR(0x00002520);
  static const DNS_ERROR_UNSECURE_PACKET = WIN32_ERROR(0x00002521);
  static const DNS_ERROR_NO_MEMORY = WIN32_ERROR(0x0000000e);
  static const DNS_ERROR_INVALID_NAME = WIN32_ERROR(0x0000007b);
  static const DNS_ERROR_INVALID_DATA = WIN32_ERROR(0x0000000d);
  static const DNS_ERROR_GENERAL_API_BASE = WIN32_ERROR(0x0000254e);
  static const DNS_ERROR_INVALID_TYPE = WIN32_ERROR(0x0000254f);
  static const DNS_ERROR_INVALID_IP_ADDRESS = WIN32_ERROR(0x00002550);
  static const DNS_ERROR_INVALID_PROPERTY = WIN32_ERROR(0x00002551);
  static const DNS_ERROR_TRY_AGAIN_LATER = WIN32_ERROR(0x00002552);
  static const DNS_ERROR_NOT_UNIQUE = WIN32_ERROR(0x00002553);
  static const DNS_ERROR_NON_RFC_NAME = WIN32_ERROR(0x00002554);
  static const DNS_ERROR_INVALID_NAME_CHAR = WIN32_ERROR(0x00002558);
  static const DNS_ERROR_NUMERIC_NAME = WIN32_ERROR(0x00002559);
  static const DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER = WIN32_ERROR(0x0000255a);
  static const DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION = WIN32_ERROR(0x0000255b);
  static const DNS_ERROR_CANNOT_FIND_ROOT_HINTS = WIN32_ERROR(0x0000255c);
  static const DNS_ERROR_INCONSISTENT_ROOT_HINTS = WIN32_ERROR(0x0000255d);
  static const DNS_ERROR_DWORD_VALUE_TOO_SMALL = WIN32_ERROR(0x0000255e);
  static const DNS_ERROR_DWORD_VALUE_TOO_LARGE = WIN32_ERROR(0x0000255f);
  static const DNS_ERROR_BACKGROUND_LOADING = WIN32_ERROR(0x00002560);
  static const DNS_ERROR_NOT_ALLOWED_ON_RODC = WIN32_ERROR(0x00002561);
  static const DNS_ERROR_NOT_ALLOWED_UNDER_DNAME = WIN32_ERROR(0x00002562);
  static const DNS_ERROR_DELEGATION_REQUIRED = WIN32_ERROR(0x00002563);
  static const DNS_ERROR_INVALID_POLICY_TABLE = WIN32_ERROR(0x00002564);
  static const DNS_ERROR_ADDRESS_REQUIRED = WIN32_ERROR(0x00002565);
  static const DNS_ERROR_ZONE_BASE = WIN32_ERROR(0x00002580);
  static const DNS_ERROR_ZONE_DOES_NOT_EXIST = WIN32_ERROR(0x00002581);
  static const DNS_ERROR_NO_ZONE_INFO = WIN32_ERROR(0x00002582);
  static const DNS_ERROR_INVALID_ZONE_OPERATION = WIN32_ERROR(0x00002583);
  static const DNS_ERROR_ZONE_CONFIGURATION_ERROR = WIN32_ERROR(0x00002584);
  static const DNS_ERROR_ZONE_HAS_NO_SOA_RECORD = WIN32_ERROR(0x00002585);
  static const DNS_ERROR_ZONE_HAS_NO_NS_RECORDS = WIN32_ERROR(0x00002586);
  static const DNS_ERROR_ZONE_LOCKED = WIN32_ERROR(0x00002587);
  static const DNS_ERROR_ZONE_CREATION_FAILED = WIN32_ERROR(0x00002588);
  static const DNS_ERROR_ZONE_ALREADY_EXISTS = WIN32_ERROR(0x00002589);
  static const DNS_ERROR_AUTOZONE_ALREADY_EXISTS = WIN32_ERROR(0x0000258a);
  static const DNS_ERROR_INVALID_ZONE_TYPE = WIN32_ERROR(0x0000258b);
  static const DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP = WIN32_ERROR(0x0000258c);
  static const DNS_ERROR_ZONE_NOT_SECONDARY = WIN32_ERROR(0x0000258d);
  static const DNS_ERROR_NEED_SECONDARY_ADDRESSES = WIN32_ERROR(0x0000258e);
  static const DNS_ERROR_WINS_INIT_FAILED = WIN32_ERROR(0x0000258f);
  static const DNS_ERROR_NEED_WINS_SERVERS = WIN32_ERROR(0x00002590);
  static const DNS_ERROR_NBSTAT_INIT_FAILED = WIN32_ERROR(0x00002591);
  static const DNS_ERROR_SOA_DELETE_INVALID = WIN32_ERROR(0x00002592);
  static const DNS_ERROR_FORWARDER_ALREADY_EXISTS = WIN32_ERROR(0x00002593);
  static const DNS_ERROR_ZONE_REQUIRES_MASTER_IP = WIN32_ERROR(0x00002594);
  static const DNS_ERROR_ZONE_IS_SHUTDOWN = WIN32_ERROR(0x00002595);
  static const DNS_ERROR_ZONE_LOCKED_FOR_SIGNING = WIN32_ERROR(0x00002596);
  static const DNS_ERROR_DATAFILE_BASE = WIN32_ERROR(0x000025b2);
  static const DNS_ERROR_PRIMARY_REQUIRES_DATAFILE = WIN32_ERROR(0x000025b3);
  static const DNS_ERROR_INVALID_DATAFILE_NAME = WIN32_ERROR(0x000025b4);
  static const DNS_ERROR_DATAFILE_OPEN_FAILURE = WIN32_ERROR(0x000025b5);
  static const DNS_ERROR_FILE_WRITEBACK_FAILED = WIN32_ERROR(0x000025b6);
  static const DNS_ERROR_DATAFILE_PARSING = WIN32_ERROR(0x000025b7);
  static const DNS_ERROR_DATABASE_BASE = WIN32_ERROR(0x000025e4);
  static const DNS_ERROR_RECORD_DOES_NOT_EXIST = WIN32_ERROR(0x000025e5);
  static const DNS_ERROR_RECORD_FORMAT = WIN32_ERROR(0x000025e6);
  static const DNS_ERROR_NODE_CREATION_FAILED = WIN32_ERROR(0x000025e7);
  static const DNS_ERROR_UNKNOWN_RECORD_TYPE = WIN32_ERROR(0x000025e8);
  static const DNS_ERROR_RECORD_TIMED_OUT = WIN32_ERROR(0x000025e9);
  static const DNS_ERROR_NAME_NOT_IN_ZONE = WIN32_ERROR(0x000025ea);
  static const DNS_ERROR_CNAME_LOOP = WIN32_ERROR(0x000025eb);
  static const DNS_ERROR_NODE_IS_CNAME = WIN32_ERROR(0x000025ec);
  static const DNS_ERROR_CNAME_COLLISION = WIN32_ERROR(0x000025ed);
  static const DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT = WIN32_ERROR(0x000025ee);
  static const DNS_ERROR_RECORD_ALREADY_EXISTS = WIN32_ERROR(0x000025ef);
  static const DNS_ERROR_SECONDARY_DATA = WIN32_ERROR(0x000025f0);
  static const DNS_ERROR_NO_CREATE_CACHE_DATA = WIN32_ERROR(0x000025f1);
  static const DNS_ERROR_NAME_DOES_NOT_EXIST = WIN32_ERROR(0x000025f2);
  static const DNS_ERROR_DS_UNAVAILABLE = WIN32_ERROR(0x000025f5);
  static const DNS_ERROR_DS_ZONE_ALREADY_EXISTS = WIN32_ERROR(0x000025f6);
  static const DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE = WIN32_ERROR(0x000025f7);
  static const DNS_ERROR_NODE_IS_DNAME = WIN32_ERROR(0x000025f8);
  static const DNS_ERROR_DNAME_COLLISION = WIN32_ERROR(0x000025f9);
  static const DNS_ERROR_ALIAS_LOOP = WIN32_ERROR(0x000025fa);
  static const DNS_ERROR_OPERATION_BASE = WIN32_ERROR(0x00002616);
  static const DNS_ERROR_AXFR = WIN32_ERROR(0x00002618);
  static const DNS_ERROR_SECURE_BASE = WIN32_ERROR(0x00002648);
  static const DNS_ERROR_SETUP_BASE = WIN32_ERROR(0x0000267a);
  static const DNS_ERROR_NO_TCPIP = WIN32_ERROR(0x0000267b);
  static const DNS_ERROR_NO_DNS_SERVERS = WIN32_ERROR(0x0000267c);
  static const DNS_ERROR_DP_BASE = WIN32_ERROR(0x000026ac);
  static const DNS_ERROR_DP_DOES_NOT_EXIST = WIN32_ERROR(0x000026ad);
  static const DNS_ERROR_DP_ALREADY_EXISTS = WIN32_ERROR(0x000026ae);
  static const DNS_ERROR_DP_NOT_ENLISTED = WIN32_ERROR(0x000026af);
  static const DNS_ERROR_DP_ALREADY_ENLISTED = WIN32_ERROR(0x000026b0);
  static const DNS_ERROR_DP_NOT_AVAILABLE = WIN32_ERROR(0x000026b1);
  static const DNS_ERROR_DP_FSMO_ERROR = WIN32_ERROR(0x000026b2);
  static const DNS_ERROR_RRL_NOT_ENABLED = WIN32_ERROR(0x000026b7);
  static const DNS_ERROR_RRL_INVALID_WINDOW_SIZE = WIN32_ERROR(0x000026b8);
  static const DNS_ERROR_RRL_INVALID_IPV4_PREFIX = WIN32_ERROR(0x000026b9);
  static const DNS_ERROR_RRL_INVALID_IPV6_PREFIX = WIN32_ERROR(0x000026ba);
  static const DNS_ERROR_RRL_INVALID_TC_RATE = WIN32_ERROR(0x000026bb);
  static const DNS_ERROR_RRL_INVALID_LEAK_RATE = WIN32_ERROR(0x000026bc);
  static const DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE =
      WIN32_ERROR(0x000026bd);
  static const DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS =
      WIN32_ERROR(0x000026c1);
  static const DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST =
      WIN32_ERROR(0x000026c2);
  static const DNS_ERROR_VIRTUALIZATION_TREE_LOCKED = WIN32_ERROR(0x000026c3);
  static const DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME =
      WIN32_ERROR(0x000026c4);
  static const DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE =
      WIN32_ERROR(0x000026c5);
  static const DNS_ERROR_ZONESCOPE_ALREADY_EXISTS = WIN32_ERROR(0x000026df);
  static const DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST = WIN32_ERROR(0x000026e0);
  static const DNS_ERROR_DEFAULT_ZONESCOPE = WIN32_ERROR(0x000026e1);
  static const DNS_ERROR_INVALID_ZONESCOPE_NAME = WIN32_ERROR(0x000026e2);
  static const DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES = WIN32_ERROR(0x000026e3);
  static const DNS_ERROR_LOAD_ZONESCOPE_FAILED = WIN32_ERROR(0x000026e4);
  static const DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED =
      WIN32_ERROR(0x000026e5);
  static const DNS_ERROR_INVALID_SCOPE_NAME = WIN32_ERROR(0x000026e6);
  static const DNS_ERROR_SCOPE_DOES_NOT_EXIST = WIN32_ERROR(0x000026e7);
  static const DNS_ERROR_DEFAULT_SCOPE = WIN32_ERROR(0x000026e8);
  static const DNS_ERROR_INVALID_SCOPE_OPERATION = WIN32_ERROR(0x000026e9);
  static const DNS_ERROR_SCOPE_LOCKED = WIN32_ERROR(0x000026ea);
  static const DNS_ERROR_SCOPE_ALREADY_EXISTS = WIN32_ERROR(0x000026eb);
  static const DNS_ERROR_POLICY_ALREADY_EXISTS = WIN32_ERROR(0x000026f3);
  static const DNS_ERROR_POLICY_DOES_NOT_EXIST = WIN32_ERROR(0x000026f4);
  static const DNS_ERROR_POLICY_INVALID_CRITERIA = WIN32_ERROR(0x000026f5);
  static const DNS_ERROR_POLICY_INVALID_SETTINGS = WIN32_ERROR(0x000026f6);
  static const DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED = WIN32_ERROR(0x000026f7);
  static const DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST = WIN32_ERROR(0x000026f8);
  static const DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS = WIN32_ERROR(0x000026f9);
  static const DNS_ERROR_SUBNET_DOES_NOT_EXIST = WIN32_ERROR(0x000026fa);
  static const DNS_ERROR_SUBNET_ALREADY_EXISTS = WIN32_ERROR(0x000026fb);
  static const DNS_ERROR_POLICY_LOCKED = WIN32_ERROR(0x000026fc);
  static const DNS_ERROR_POLICY_INVALID_WEIGHT = WIN32_ERROR(0x000026fd);
  static const DNS_ERROR_POLICY_INVALID_NAME = WIN32_ERROR(0x000026fe);
  static const DNS_ERROR_POLICY_MISSING_CRITERIA = WIN32_ERROR(0x000026ff);
  static const DNS_ERROR_INVALID_CLIENT_SUBNET_NAME = WIN32_ERROR(0x00002700);
  static const DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID =
      WIN32_ERROR(0x00002701);
  static const DNS_ERROR_POLICY_SCOPE_MISSING = WIN32_ERROR(0x00002702);
  static const DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED = WIN32_ERROR(0x00002703);
  static const DNS_ERROR_SERVERSCOPE_IS_REFERENCED = WIN32_ERROR(0x00002704);
  static const DNS_ERROR_ZONESCOPE_IS_REFERENCED = WIN32_ERROR(0x00002705);
  static const DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET =
      WIN32_ERROR(0x00002706);
  static const DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL =
      WIN32_ERROR(0x00002707);
  static const DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL =
      WIN32_ERROR(0x00002708);
  static const DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE =
      WIN32_ERROR(0x00002709);
  static const DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN = WIN32_ERROR(0x0000270a);
  static const DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE =
      WIN32_ERROR(0x0000270b);
  static const DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY =
      WIN32_ERROR(0x0000270c);
  static const ERROR_IPSEC_QM_POLICY_EXISTS = WIN32_ERROR(0x000032c8);
  static const ERROR_IPSEC_QM_POLICY_NOT_FOUND = WIN32_ERROR(0x000032c9);
  static const ERROR_IPSEC_QM_POLICY_IN_USE = WIN32_ERROR(0x000032ca);
  static const ERROR_IPSEC_MM_POLICY_EXISTS = WIN32_ERROR(0x000032cb);
  static const ERROR_IPSEC_MM_POLICY_NOT_FOUND = WIN32_ERROR(0x000032cc);
  static const ERROR_IPSEC_MM_POLICY_IN_USE = WIN32_ERROR(0x000032cd);
  static const ERROR_IPSEC_MM_FILTER_EXISTS = WIN32_ERROR(0x000032ce);
  static const ERROR_IPSEC_MM_FILTER_NOT_FOUND = WIN32_ERROR(0x000032cf);
  static const ERROR_IPSEC_TRANSPORT_FILTER_EXISTS = WIN32_ERROR(0x000032d0);
  static const ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND = WIN32_ERROR(0x000032d1);
  static const ERROR_IPSEC_MM_AUTH_EXISTS = WIN32_ERROR(0x000032d2);
  static const ERROR_IPSEC_MM_AUTH_NOT_FOUND = WIN32_ERROR(0x000032d3);
  static const ERROR_IPSEC_MM_AUTH_IN_USE = WIN32_ERROR(0x000032d4);
  static const ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND =
      WIN32_ERROR(0x000032d5);
  static const ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND = WIN32_ERROR(0x000032d6);
  static const ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND =
      WIN32_ERROR(0x000032d7);
  static const ERROR_IPSEC_TUNNEL_FILTER_EXISTS = WIN32_ERROR(0x000032d8);
  static const ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND = WIN32_ERROR(0x000032d9);
  static const ERROR_IPSEC_MM_FILTER_PENDING_DELETION = WIN32_ERROR(0x000032da);
  static const ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION =
      WIN32_ERROR(0x000032db);
  static const ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION =
      WIN32_ERROR(0x000032dc);
  static const ERROR_IPSEC_MM_POLICY_PENDING_DELETION = WIN32_ERROR(0x000032dd);
  static const ERROR_IPSEC_MM_AUTH_PENDING_DELETION = WIN32_ERROR(0x000032de);
  static const ERROR_IPSEC_QM_POLICY_PENDING_DELETION = WIN32_ERROR(0x000032df);
  static const ERROR_IPSEC_IKE_NEG_STATUS_BEGIN = WIN32_ERROR(0x000035e8);
  static const ERROR_IPSEC_IKE_AUTH_FAIL = WIN32_ERROR(0x000035e9);
  static const ERROR_IPSEC_IKE_ATTRIB_FAIL = WIN32_ERROR(0x000035ea);
  static const ERROR_IPSEC_IKE_NEGOTIATION_PENDING = WIN32_ERROR(0x000035eb);
  static const ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR =
      WIN32_ERROR(0x000035ec);
  static const ERROR_IPSEC_IKE_TIMED_OUT = WIN32_ERROR(0x000035ed);
  static const ERROR_IPSEC_IKE_NO_CERT = WIN32_ERROR(0x000035ee);
  static const ERROR_IPSEC_IKE_SA_DELETED = WIN32_ERROR(0x000035ef);
  static const ERROR_IPSEC_IKE_SA_REAPED = WIN32_ERROR(0x000035f0);
  static const ERROR_IPSEC_IKE_MM_ACQUIRE_DROP = WIN32_ERROR(0x000035f1);
  static const ERROR_IPSEC_IKE_QM_ACQUIRE_DROP = WIN32_ERROR(0x000035f2);
  static const ERROR_IPSEC_IKE_QUEUE_DROP_MM = WIN32_ERROR(0x000035f3);
  static const ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM = WIN32_ERROR(0x000035f4);
  static const ERROR_IPSEC_IKE_DROP_NO_RESPONSE = WIN32_ERROR(0x000035f5);
  static const ERROR_IPSEC_IKE_MM_DELAY_DROP = WIN32_ERROR(0x000035f6);
  static const ERROR_IPSEC_IKE_QM_DELAY_DROP = WIN32_ERROR(0x000035f7);
  static const ERROR_IPSEC_IKE_ERROR = WIN32_ERROR(0x000035f8);
  static const ERROR_IPSEC_IKE_CRL_FAILED = WIN32_ERROR(0x000035f9);
  static const ERROR_IPSEC_IKE_INVALID_KEY_USAGE = WIN32_ERROR(0x000035fa);
  static const ERROR_IPSEC_IKE_INVALID_CERT_TYPE = WIN32_ERROR(0x000035fb);
  static const ERROR_IPSEC_IKE_NO_PRIVATE_KEY = WIN32_ERROR(0x000035fc);
  static const ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY = WIN32_ERROR(0x000035fd);
  static const ERROR_IPSEC_IKE_DH_FAIL = WIN32_ERROR(0x000035fe);
  static const ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED =
      WIN32_ERROR(0x000035ff);
  static const ERROR_IPSEC_IKE_INVALID_HEADER = WIN32_ERROR(0x00003600);
  static const ERROR_IPSEC_IKE_NO_POLICY = WIN32_ERROR(0x00003601);
  static const ERROR_IPSEC_IKE_INVALID_SIGNATURE = WIN32_ERROR(0x00003602);
  static const ERROR_IPSEC_IKE_KERBEROS_ERROR = WIN32_ERROR(0x00003603);
  static const ERROR_IPSEC_IKE_NO_PUBLIC_KEY = WIN32_ERROR(0x00003604);
  static const ERROR_IPSEC_IKE_PROCESS_ERR = WIN32_ERROR(0x00003605);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_SA = WIN32_ERROR(0x00003606);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_PROP = WIN32_ERROR(0x00003607);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_TRANS = WIN32_ERROR(0x00003608);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_KE = WIN32_ERROR(0x00003609);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_ID = WIN32_ERROR(0x0000360a);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_CERT = WIN32_ERROR(0x0000360b);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ = WIN32_ERROR(0x0000360c);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_HASH = WIN32_ERROR(0x0000360d);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_SIG = WIN32_ERROR(0x0000360e);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_NONCE = WIN32_ERROR(0x0000360f);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY = WIN32_ERROR(0x00003610);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_DELETE = WIN32_ERROR(0x00003611);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR = WIN32_ERROR(0x00003612);
  static const ERROR_IPSEC_IKE_INVALID_PAYLOAD = WIN32_ERROR(0x00003613);
  static const ERROR_IPSEC_IKE_LOAD_SOFT_SA = WIN32_ERROR(0x00003614);
  static const ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN = WIN32_ERROR(0x00003615);
  static const ERROR_IPSEC_IKE_INVALID_COOKIE = WIN32_ERROR(0x00003616);
  static const ERROR_IPSEC_IKE_NO_PEER_CERT = WIN32_ERROR(0x00003617);
  static const ERROR_IPSEC_IKE_PEER_CRL_FAILED = WIN32_ERROR(0x00003618);
  static const ERROR_IPSEC_IKE_POLICY_CHANGE = WIN32_ERROR(0x00003619);
  static const ERROR_IPSEC_IKE_NO_MM_POLICY = WIN32_ERROR(0x0000361a);
  static const ERROR_IPSEC_IKE_NOTCBPRIV = WIN32_ERROR(0x0000361b);
  static const ERROR_IPSEC_IKE_SECLOADFAIL = WIN32_ERROR(0x0000361c);
  static const ERROR_IPSEC_IKE_FAILSSPINIT = WIN32_ERROR(0x0000361d);
  static const ERROR_IPSEC_IKE_FAILQUERYSSP = WIN32_ERROR(0x0000361e);
  static const ERROR_IPSEC_IKE_SRVACQFAIL = WIN32_ERROR(0x0000361f);
  static const ERROR_IPSEC_IKE_SRVQUERYCRED = WIN32_ERROR(0x00003620);
  static const ERROR_IPSEC_IKE_GETSPIFAIL = WIN32_ERROR(0x00003621);
  static const ERROR_IPSEC_IKE_INVALID_FILTER = WIN32_ERROR(0x00003622);
  static const ERROR_IPSEC_IKE_OUT_OF_MEMORY = WIN32_ERROR(0x00003623);
  static const ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED = WIN32_ERROR(0x00003624);
  static const ERROR_IPSEC_IKE_INVALID_POLICY = WIN32_ERROR(0x00003625);
  static const ERROR_IPSEC_IKE_UNKNOWN_DOI = WIN32_ERROR(0x00003626);
  static const ERROR_IPSEC_IKE_INVALID_SITUATION = WIN32_ERROR(0x00003627);
  static const ERROR_IPSEC_IKE_DH_FAILURE = WIN32_ERROR(0x00003628);
  static const ERROR_IPSEC_IKE_INVALID_GROUP = WIN32_ERROR(0x00003629);
  static const ERROR_IPSEC_IKE_ENCRYPT = WIN32_ERROR(0x0000362a);
  static const ERROR_IPSEC_IKE_DECRYPT = WIN32_ERROR(0x0000362b);
  static const ERROR_IPSEC_IKE_POLICY_MATCH = WIN32_ERROR(0x0000362c);
  static const ERROR_IPSEC_IKE_UNSUPPORTED_ID = WIN32_ERROR(0x0000362d);
  static const ERROR_IPSEC_IKE_INVALID_HASH = WIN32_ERROR(0x0000362e);
  static const ERROR_IPSEC_IKE_INVALID_HASH_ALG = WIN32_ERROR(0x0000362f);
  static const ERROR_IPSEC_IKE_INVALID_HASH_SIZE = WIN32_ERROR(0x00003630);
  static const ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG = WIN32_ERROR(0x00003631);
  static const ERROR_IPSEC_IKE_INVALID_AUTH_ALG = WIN32_ERROR(0x00003632);
  static const ERROR_IPSEC_IKE_INVALID_SIG = WIN32_ERROR(0x00003633);
  static const ERROR_IPSEC_IKE_LOAD_FAILED = WIN32_ERROR(0x00003634);
  static const ERROR_IPSEC_IKE_RPC_DELETE = WIN32_ERROR(0x00003635);
  static const ERROR_IPSEC_IKE_BENIGN_REINIT = WIN32_ERROR(0x00003636);
  static const ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY =
      WIN32_ERROR(0x00003637);
  static const ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION = WIN32_ERROR(0x00003638);
  static const ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN = WIN32_ERROR(0x00003639);
  static const ERROR_IPSEC_IKE_MM_LIMIT = WIN32_ERROR(0x0000363a);
  static const ERROR_IPSEC_IKE_NEGOTIATION_DISABLED = WIN32_ERROR(0x0000363b);
  static const ERROR_IPSEC_IKE_QM_LIMIT = WIN32_ERROR(0x0000363c);
  static const ERROR_IPSEC_IKE_MM_EXPIRED = WIN32_ERROR(0x0000363d);
  static const ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID =
      WIN32_ERROR(0x0000363e);
  static const ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH =
      WIN32_ERROR(0x0000363f);
  static const ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID = WIN32_ERROR(0x00003640);
  static const ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD = WIN32_ERROR(0x00003641);
  static const ERROR_IPSEC_IKE_DOS_COOKIE_SENT = WIN32_ERROR(0x00003642);
  static const ERROR_IPSEC_IKE_SHUTTING_DOWN = WIN32_ERROR(0x00003643);
  static const ERROR_IPSEC_IKE_CGA_AUTH_FAILED = WIN32_ERROR(0x00003644);
  static const ERROR_IPSEC_IKE_PROCESS_ERR_NATOA = WIN32_ERROR(0x00003645);
  static const ERROR_IPSEC_IKE_INVALID_MM_FOR_QM = WIN32_ERROR(0x00003646);
  static const ERROR_IPSEC_IKE_QM_EXPIRED = WIN32_ERROR(0x00003647);
  static const ERROR_IPSEC_IKE_TOO_MANY_FILTERS = WIN32_ERROR(0x00003648);
  static const ERROR_IPSEC_IKE_NEG_STATUS_END = WIN32_ERROR(0x00003649);
  static const ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL = WIN32_ERROR(0x0000364a);
  static const ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE =
      WIN32_ERROR(0x0000364b);
  static const ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING =
      WIN32_ERROR(0x0000364c);
  static const ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING =
      WIN32_ERROR(0x0000364d);
  static const ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS = WIN32_ERROR(0x0000364e);
  static const ERROR_IPSEC_IKE_RATELIMIT_DROP = WIN32_ERROR(0x0000364f);
  static const ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE =
      WIN32_ERROR(0x00003650);
  static const ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE = WIN32_ERROR(0x00003651);
  static const ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE =
      WIN32_ERROR(0x00003652);
  static const ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY =
      WIN32_ERROR(0x00003653);
  static const ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE =
      WIN32_ERROR(0x00003654);
  static const ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END =
      WIN32_ERROR(0x00003655);
  static const ERROR_IPSEC_BAD_SPI = WIN32_ERROR(0x00003656);
  static const ERROR_IPSEC_SA_LIFETIME_EXPIRED = WIN32_ERROR(0x00003657);
  static const ERROR_IPSEC_WRONG_SA = WIN32_ERROR(0x00003658);
  static const ERROR_IPSEC_REPLAY_CHECK_FAILED = WIN32_ERROR(0x00003659);
  static const ERROR_IPSEC_INVALID_PACKET = WIN32_ERROR(0x0000365a);
  static const ERROR_IPSEC_INTEGRITY_CHECK_FAILED = WIN32_ERROR(0x0000365b);
  static const ERROR_IPSEC_CLEAR_TEXT_DROP = WIN32_ERROR(0x0000365c);
  static const ERROR_IPSEC_AUTH_FIREWALL_DROP = WIN32_ERROR(0x0000365d);
  static const ERROR_IPSEC_THROTTLE_DROP = WIN32_ERROR(0x0000365e);
  static const ERROR_IPSEC_DOSP_BLOCK = WIN32_ERROR(0x00003665);
  static const ERROR_IPSEC_DOSP_RECEIVED_MULTICAST = WIN32_ERROR(0x00003666);
  static const ERROR_IPSEC_DOSP_INVALID_PACKET = WIN32_ERROR(0x00003667);
  static const ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED = WIN32_ERROR(0x00003668);
  static const ERROR_IPSEC_DOSP_MAX_ENTRIES = WIN32_ERROR(0x00003669);
  static const ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED = WIN32_ERROR(0x0000366a);
  static const ERROR_IPSEC_DOSP_NOT_INSTALLED = WIN32_ERROR(0x0000366b);
  static const ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES =
      WIN32_ERROR(0x0000366c);
  static const ERROR_SXS_SECTION_NOT_FOUND = WIN32_ERROR(0x000036b0);
  static const ERROR_SXS_CANT_GEN_ACTCTX = WIN32_ERROR(0x000036b1);
  static const ERROR_SXS_INVALID_ACTCTXDATA_FORMAT = WIN32_ERROR(0x000036b2);
  static const ERROR_SXS_ASSEMBLY_NOT_FOUND = WIN32_ERROR(0x000036b3);
  static const ERROR_SXS_MANIFEST_FORMAT_ERROR = WIN32_ERROR(0x000036b4);
  static const ERROR_SXS_MANIFEST_PARSE_ERROR = WIN32_ERROR(0x000036b5);
  static const ERROR_SXS_ACTIVATION_CONTEXT_DISABLED = WIN32_ERROR(0x000036b6);
  static const ERROR_SXS_KEY_NOT_FOUND = WIN32_ERROR(0x000036b7);
  static const ERROR_SXS_VERSION_CONFLICT = WIN32_ERROR(0x000036b8);
  static const ERROR_SXS_WRONG_SECTION_TYPE = WIN32_ERROR(0x000036b9);
  static const ERROR_SXS_THREAD_QUERIES_DISABLED = WIN32_ERROR(0x000036ba);
  static const ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET = WIN32_ERROR(0x000036bb);
  static const ERROR_SXS_UNKNOWN_ENCODING_GROUP = WIN32_ERROR(0x000036bc);
  static const ERROR_SXS_UNKNOWN_ENCODING = WIN32_ERROR(0x000036bd);
  static const ERROR_SXS_INVALID_XML_NAMESPACE_URI = WIN32_ERROR(0x000036be);
  static const ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED =
      WIN32_ERROR(0x000036bf);
  static const ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED =
      WIN32_ERROR(0x000036c0);
  static const ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE =
      WIN32_ERROR(0x000036c1);
  static const ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE =
      WIN32_ERROR(0x000036c2);
  static const ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE =
      WIN32_ERROR(0x000036c3);
  static const ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT =
      WIN32_ERROR(0x000036c4);
  static const ERROR_SXS_DUPLICATE_DLL_NAME = WIN32_ERROR(0x000036c5);
  static const ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME = WIN32_ERROR(0x000036c6);
  static const ERROR_SXS_DUPLICATE_CLSID = WIN32_ERROR(0x000036c7);
  static const ERROR_SXS_DUPLICATE_IID = WIN32_ERROR(0x000036c8);
  static const ERROR_SXS_DUPLICATE_TLBID = WIN32_ERROR(0x000036c9);
  static const ERROR_SXS_DUPLICATE_PROGID = WIN32_ERROR(0x000036ca);
  static const ERROR_SXS_DUPLICATE_ASSEMBLY_NAME = WIN32_ERROR(0x000036cb);
  static const ERROR_SXS_FILE_HASH_MISMATCH = WIN32_ERROR(0x000036cc);
  static const ERROR_SXS_POLICY_PARSE_ERROR = WIN32_ERROR(0x000036cd);
  static const ERROR_SXS_XML_E_MISSINGQUOTE = WIN32_ERROR(0x000036ce);
  static const ERROR_SXS_XML_E_COMMENTSYNTAX = WIN32_ERROR(0x000036cf);
  static const ERROR_SXS_XML_E_BADSTARTNAMECHAR = WIN32_ERROR(0x000036d0);
  static const ERROR_SXS_XML_E_BADNAMECHAR = WIN32_ERROR(0x000036d1);
  static const ERROR_SXS_XML_E_BADCHARINSTRING = WIN32_ERROR(0x000036d2);
  static const ERROR_SXS_XML_E_XMLDECLSYNTAX = WIN32_ERROR(0x000036d3);
  static const ERROR_SXS_XML_E_BADCHARDATA = WIN32_ERROR(0x000036d4);
  static const ERROR_SXS_XML_E_MISSINGWHITESPACE = WIN32_ERROR(0x000036d5);
  static const ERROR_SXS_XML_E_EXPECTINGTAGEND = WIN32_ERROR(0x000036d6);
  static const ERROR_SXS_XML_E_MISSINGSEMICOLON = WIN32_ERROR(0x000036d7);
  static const ERROR_SXS_XML_E_UNBALANCEDPAREN = WIN32_ERROR(0x000036d8);
  static const ERROR_SXS_XML_E_INTERNALERROR = WIN32_ERROR(0x000036d9);
  static const ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE = WIN32_ERROR(0x000036da);
  static const ERROR_SXS_XML_E_INCOMPLETE_ENCODING = WIN32_ERROR(0x000036db);
  static const ERROR_SXS_XML_E_MISSING_PAREN = WIN32_ERROR(0x000036dc);
  static const ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE = WIN32_ERROR(0x000036dd);
  static const ERROR_SXS_XML_E_MULTIPLE_COLONS = WIN32_ERROR(0x000036de);
  static const ERROR_SXS_XML_E_INVALID_DECIMAL = WIN32_ERROR(0x000036df);
  static const ERROR_SXS_XML_E_INVALID_HEXIDECIMAL = WIN32_ERROR(0x000036e0);
  static const ERROR_SXS_XML_E_INVALID_UNICODE = WIN32_ERROR(0x000036e1);
  static const ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK =
      WIN32_ERROR(0x000036e2);
  static const ERROR_SXS_XML_E_UNEXPECTEDENDTAG = WIN32_ERROR(0x000036e3);
  static const ERROR_SXS_XML_E_UNCLOSEDTAG = WIN32_ERROR(0x000036e4);
  static const ERROR_SXS_XML_E_DUPLICATEATTRIBUTE = WIN32_ERROR(0x000036e5);
  static const ERROR_SXS_XML_E_MULTIPLEROOTS = WIN32_ERROR(0x000036e6);
  static const ERROR_SXS_XML_E_INVALIDATROOTLEVEL = WIN32_ERROR(0x000036e7);
  static const ERROR_SXS_XML_E_BADXMLDECL = WIN32_ERROR(0x000036e8);
  static const ERROR_SXS_XML_E_MISSINGROOT = WIN32_ERROR(0x000036e9);
  static const ERROR_SXS_XML_E_UNEXPECTEDEOF = WIN32_ERROR(0x000036ea);
  static const ERROR_SXS_XML_E_BADPEREFINSUBSET = WIN32_ERROR(0x000036eb);
  static const ERROR_SXS_XML_E_UNCLOSEDSTARTTAG = WIN32_ERROR(0x000036ec);
  static const ERROR_SXS_XML_E_UNCLOSEDENDTAG = WIN32_ERROR(0x000036ed);
  static const ERROR_SXS_XML_E_UNCLOSEDSTRING = WIN32_ERROR(0x000036ee);
  static const ERROR_SXS_XML_E_UNCLOSEDCOMMENT = WIN32_ERROR(0x000036ef);
  static const ERROR_SXS_XML_E_UNCLOSEDDECL = WIN32_ERROR(0x000036f0);
  static const ERROR_SXS_XML_E_UNCLOSEDCDATA = WIN32_ERROR(0x000036f1);
  static const ERROR_SXS_XML_E_RESERVEDNAMESPACE = WIN32_ERROR(0x000036f2);
  static const ERROR_SXS_XML_E_INVALIDENCODING = WIN32_ERROR(0x000036f3);
  static const ERROR_SXS_XML_E_INVALIDSWITCH = WIN32_ERROR(0x000036f4);
  static const ERROR_SXS_XML_E_BADXMLCASE = WIN32_ERROR(0x000036f5);
  static const ERROR_SXS_XML_E_INVALID_STANDALONE = WIN32_ERROR(0x000036f6);
  static const ERROR_SXS_XML_E_UNEXPECTED_STANDALONE = WIN32_ERROR(0x000036f7);
  static const ERROR_SXS_XML_E_INVALID_VERSION = WIN32_ERROR(0x000036f8);
  static const ERROR_SXS_XML_E_MISSINGEQUALS = WIN32_ERROR(0x000036f9);
  static const ERROR_SXS_PROTECTION_RECOVERY_FAILED = WIN32_ERROR(0x000036fa);
  static const ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT =
      WIN32_ERROR(0x000036fb);
  static const ERROR_SXS_PROTECTION_CATALOG_NOT_VALID = WIN32_ERROR(0x000036fc);
  static const ERROR_SXS_UNTRANSLATABLE_HRESULT = WIN32_ERROR(0x000036fd);
  static const ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING =
      WIN32_ERROR(0x000036fe);
  static const ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE =
      WIN32_ERROR(0x000036ff);
  static const ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME =
      WIN32_ERROR(0x00003700);
  static const ERROR_SXS_ASSEMBLY_MISSING = WIN32_ERROR(0x00003701);
  static const ERROR_SXS_CORRUPT_ACTIVATION_STACK = WIN32_ERROR(0x00003702);
  static const ERROR_SXS_CORRUPTION = WIN32_ERROR(0x00003703);
  static const ERROR_SXS_EARLY_DEACTIVATION = WIN32_ERROR(0x00003704);
  static const ERROR_SXS_INVALID_DEACTIVATION = WIN32_ERROR(0x00003705);
  static const ERROR_SXS_MULTIPLE_DEACTIVATION = WIN32_ERROR(0x00003706);
  static const ERROR_SXS_PROCESS_TERMINATION_REQUESTED =
      WIN32_ERROR(0x00003707);
  static const ERROR_SXS_RELEASE_ACTIVATION_CONTEXT = WIN32_ERROR(0x00003708);
  static const ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY =
      WIN32_ERROR(0x00003709);
  static const ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE =
      WIN32_ERROR(0x0000370a);
  static const ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME =
      WIN32_ERROR(0x0000370b);
  static const ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE = WIN32_ERROR(0x0000370c);
  static const ERROR_SXS_IDENTITY_PARSE_ERROR = WIN32_ERROR(0x0000370d);
  static const ERROR_MALFORMED_SUBSTITUTION_STRING = WIN32_ERROR(0x0000370e);
  static const ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN = WIN32_ERROR(0x0000370f);
  static const ERROR_UNMAPPED_SUBSTITUTION_STRING = WIN32_ERROR(0x00003710);
  static const ERROR_SXS_ASSEMBLY_NOT_LOCKED = WIN32_ERROR(0x00003711);
  static const ERROR_SXS_COMPONENT_STORE_CORRUPT = WIN32_ERROR(0x00003712);
  static const ERROR_ADVANCED_INSTALLER_FAILED = WIN32_ERROR(0x00003713);
  static const ERROR_XML_ENCODING_MISMATCH = WIN32_ERROR(0x00003714);
  static const ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT =
      WIN32_ERROR(0x00003715);
  static const ERROR_SXS_IDENTITIES_DIFFERENT = WIN32_ERROR(0x00003716);
  static const ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT = WIN32_ERROR(0x00003717);
  static const ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY = WIN32_ERROR(0x00003718);
  static const ERROR_SXS_MANIFEST_TOO_BIG = WIN32_ERROR(0x00003719);
  static const ERROR_SXS_SETTING_NOT_REGISTERED = WIN32_ERROR(0x0000371a);
  static const ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE =
      WIN32_ERROR(0x0000371b);
  static const ERROR_SMI_PRIMITIVE_INSTALLER_FAILED = WIN32_ERROR(0x0000371c);
  static const ERROR_GENERIC_COMMAND_FAILED = WIN32_ERROR(0x0000371d);
  static const ERROR_SXS_FILE_HASH_MISSING = WIN32_ERROR(0x0000371e);
  static const ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS = WIN32_ERROR(0x0000371f);
  static const ERROR_EVT_INVALID_CHANNEL_PATH = WIN32_ERROR(0x00003a98);
  static const ERROR_EVT_INVALID_QUERY = WIN32_ERROR(0x00003a99);
  static const ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND = WIN32_ERROR(0x00003a9a);
  static const ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND = WIN32_ERROR(0x00003a9b);
  static const ERROR_EVT_INVALID_PUBLISHER_NAME = WIN32_ERROR(0x00003a9c);
  static const ERROR_EVT_INVALID_EVENT_DATA = WIN32_ERROR(0x00003a9d);
  static const ERROR_EVT_CHANNEL_NOT_FOUND = WIN32_ERROR(0x00003a9f);
  static const ERROR_EVT_MALFORMED_XML_TEXT = WIN32_ERROR(0x00003aa0);
  static const ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL =
      WIN32_ERROR(0x00003aa1);
  static const ERROR_EVT_CONFIGURATION_ERROR = WIN32_ERROR(0x00003aa2);
  static const ERROR_EVT_QUERY_RESULT_STALE = WIN32_ERROR(0x00003aa3);
  static const ERROR_EVT_QUERY_RESULT_INVALID_POSITION =
      WIN32_ERROR(0x00003aa4);
  static const ERROR_EVT_NON_VALIDATING_MSXML = WIN32_ERROR(0x00003aa5);
  static const ERROR_EVT_FILTER_ALREADYSCOPED = WIN32_ERROR(0x00003aa6);
  static const ERROR_EVT_FILTER_NOTELTSET = WIN32_ERROR(0x00003aa7);
  static const ERROR_EVT_FILTER_INVARG = WIN32_ERROR(0x00003aa8);
  static const ERROR_EVT_FILTER_INVTEST = WIN32_ERROR(0x00003aa9);
  static const ERROR_EVT_FILTER_INVTYPE = WIN32_ERROR(0x00003aaa);
  static const ERROR_EVT_FILTER_PARSEERR = WIN32_ERROR(0x00003aab);
  static const ERROR_EVT_FILTER_UNSUPPORTEDOP = WIN32_ERROR(0x00003aac);
  static const ERROR_EVT_FILTER_UNEXPECTEDTOKEN = WIN32_ERROR(0x00003aad);
  static const ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL =
      WIN32_ERROR(0x00003aae);
  static const ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE =
      WIN32_ERROR(0x00003aaf);
  static const ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE =
      WIN32_ERROR(0x00003ab0);
  static const ERROR_EVT_CHANNEL_CANNOT_ACTIVATE = WIN32_ERROR(0x00003ab1);
  static const ERROR_EVT_FILTER_TOO_COMPLEX = WIN32_ERROR(0x00003ab2);
  static const ERROR_EVT_MESSAGE_NOT_FOUND = WIN32_ERROR(0x00003ab3);
  static const ERROR_EVT_MESSAGE_ID_NOT_FOUND = WIN32_ERROR(0x00003ab4);
  static const ERROR_EVT_UNRESOLVED_VALUE_INSERT = WIN32_ERROR(0x00003ab5);
  static const ERROR_EVT_UNRESOLVED_PARAMETER_INSERT = WIN32_ERROR(0x00003ab6);
  static const ERROR_EVT_MAX_INSERTS_REACHED = WIN32_ERROR(0x00003ab7);
  static const ERROR_EVT_EVENT_DEFINITION_NOT_FOUND = WIN32_ERROR(0x00003ab8);
  static const ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND = WIN32_ERROR(0x00003ab9);
  static const ERROR_EVT_VERSION_TOO_OLD = WIN32_ERROR(0x00003aba);
  static const ERROR_EVT_VERSION_TOO_NEW = WIN32_ERROR(0x00003abb);
  static const ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY = WIN32_ERROR(0x00003abc);
  static const ERROR_EVT_PUBLISHER_DISABLED = WIN32_ERROR(0x00003abd);
  static const ERROR_EVT_FILTER_OUT_OF_RANGE = WIN32_ERROR(0x00003abe);
  static const ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE = WIN32_ERROR(0x00003ae8);
  static const ERROR_EC_LOG_DISABLED = WIN32_ERROR(0x00003ae9);
  static const ERROR_EC_CIRCULAR_FORWARDING = WIN32_ERROR(0x00003aea);
  static const ERROR_EC_CREDSTORE_FULL = WIN32_ERROR(0x00003aeb);
  static const ERROR_EC_CRED_NOT_FOUND = WIN32_ERROR(0x00003aec);
  static const ERROR_EC_NO_ACTIVE_CHANNEL = WIN32_ERROR(0x00003aed);
  static const ERROR_MUI_FILE_NOT_FOUND = WIN32_ERROR(0x00003afc);
  static const ERROR_MUI_INVALID_FILE = WIN32_ERROR(0x00003afd);
  static const ERROR_MUI_INVALID_RC_CONFIG = WIN32_ERROR(0x00003afe);
  static const ERROR_MUI_INVALID_LOCALE_NAME = WIN32_ERROR(0x00003aff);
  static const ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME =
      WIN32_ERROR(0x00003b00);
  static const ERROR_MUI_FILE_NOT_LOADED = WIN32_ERROR(0x00003b01);
  static const ERROR_RESOURCE_ENUM_USER_STOP = WIN32_ERROR(0x00003b02);
  static const ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED =
      WIN32_ERROR(0x00003b03);
  static const ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME =
      WIN32_ERROR(0x00003b04);
  static const ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE =
      WIN32_ERROR(0x00003b06);
  static const ERROR_MRM_INVALID_PRICONFIG = WIN32_ERROR(0x00003b07);
  static const ERROR_MRM_INVALID_FILE_TYPE = WIN32_ERROR(0x00003b08);
  static const ERROR_MRM_UNKNOWN_QUALIFIER = WIN32_ERROR(0x00003b09);
  static const ERROR_MRM_INVALID_QUALIFIER_VALUE = WIN32_ERROR(0x00003b0a);
  static const ERROR_MRM_NO_CANDIDATE = WIN32_ERROR(0x00003b0b);
  static const ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE =
      WIN32_ERROR(0x00003b0c);
  static const ERROR_MRM_RESOURCE_TYPE_MISMATCH = WIN32_ERROR(0x00003b0d);
  static const ERROR_MRM_DUPLICATE_MAP_NAME = WIN32_ERROR(0x00003b0e);
  static const ERROR_MRM_DUPLICATE_ENTRY = WIN32_ERROR(0x00003b0f);
  static const ERROR_MRM_INVALID_RESOURCE_IDENTIFIER = WIN32_ERROR(0x00003b10);
  static const ERROR_MRM_FILEPATH_TOO_LONG = WIN32_ERROR(0x00003b11);
  static const ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE = WIN32_ERROR(0x00003b12);
  static const ERROR_MRM_INVALID_PRI_FILE = WIN32_ERROR(0x00003b16);
  static const ERROR_MRM_NAMED_RESOURCE_NOT_FOUND = WIN32_ERROR(0x00003b17);
  static const ERROR_MRM_MAP_NOT_FOUND = WIN32_ERROR(0x00003b1f);
  static const ERROR_MRM_UNSUPPORTED_PROFILE_TYPE = WIN32_ERROR(0x00003b20);
  static const ERROR_MRM_INVALID_QUALIFIER_OPERATOR = WIN32_ERROR(0x00003b21);
  static const ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE =
      WIN32_ERROR(0x00003b22);
  static const ERROR_MRM_AUTOMERGE_ENABLED = WIN32_ERROR(0x00003b23);
  static const ERROR_MRM_TOO_MANY_RESOURCES = WIN32_ERROR(0x00003b24);
  static const ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE =
      WIN32_ERROR(0x00003b25);
  static const ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE =
      WIN32_ERROR(0x00003b26);
  static const ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD = WIN32_ERROR(0x00003b27);
  static const ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST =
      WIN32_ERROR(0x00003b28);
  static const ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT =
      WIN32_ERROR(0x00003b29);
  static const ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE =
      WIN32_ERROR(0x00003b2a);
  static const ERROR_MRM_GENERATION_COUNT_MISMATCH = WIN32_ERROR(0x00003b2b);
  static const ERROR_PRI_MERGE_VERSION_MISMATCH = WIN32_ERROR(0x00003b2c);
  static const ERROR_PRI_MERGE_MISSING_SCHEMA = WIN32_ERROR(0x00003b2d);
  static const ERROR_PRI_MERGE_LOAD_FILE_FAILED = WIN32_ERROR(0x00003b2e);
  static const ERROR_PRI_MERGE_ADD_FILE_FAILED = WIN32_ERROR(0x00003b2f);
  static const ERROR_PRI_MERGE_WRITE_FILE_FAILED = WIN32_ERROR(0x00003b30);
  static const ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED =
      WIN32_ERROR(0x00003b31);
  static const ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED =
      WIN32_ERROR(0x00003b32);
  static const ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED =
      WIN32_ERROR(0x00003b33);
  static const ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED = WIN32_ERROR(0x00003b34);
  static const ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED =
      WIN32_ERROR(0x00003b35);
  static const ERROR_PRI_MERGE_INVALID_FILE_NAME = WIN32_ERROR(0x00003b36);
  static const ERROR_MRM_PACKAGE_NOT_FOUND = WIN32_ERROR(0x00003b37);
  static const ERROR_MRM_MISSING_DEFAULT_LANGUAGE = WIN32_ERROR(0x00003b38);
  static const ERROR_MRM_SCOPE_ITEM_CONFLICT = WIN32_ERROR(0x00003b39);
  static const ERROR_MCA_INVALID_CAPABILITIES_STRING = WIN32_ERROR(0x00003b60);
  static const ERROR_MCA_INVALID_VCP_VERSION = WIN32_ERROR(0x00003b61);
  static const ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION =
      WIN32_ERROR(0x00003b62);
  static const ERROR_MCA_MCCS_VERSION_MISMATCH = WIN32_ERROR(0x00003b63);
  static const ERROR_MCA_UNSUPPORTED_MCCS_VERSION = WIN32_ERROR(0x00003b64);
  static const ERROR_MCA_INTERNAL_ERROR = WIN32_ERROR(0x00003b65);
  static const ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED =
      WIN32_ERROR(0x00003b66);
  static const ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE =
      WIN32_ERROR(0x00003b67);
  static const ERROR_AMBIGUOUS_SYSTEM_DEVICE = WIN32_ERROR(0x00003b92);
  static const ERROR_SYSTEM_DEVICE_NOT_FOUND = WIN32_ERROR(0x00003bc3);
  static const ERROR_HASH_NOT_SUPPORTED = WIN32_ERROR(0x00003bc4);
  static const ERROR_HASH_NOT_PRESENT = WIN32_ERROR(0x00003bc5);
  static const ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED =
      WIN32_ERROR(0x00003bd9);
  static const ERROR_GPIO_CLIENT_INFORMATION_INVALID = WIN32_ERROR(0x00003bda);
  static const ERROR_GPIO_VERSION_NOT_SUPPORTED = WIN32_ERROR(0x00003bdb);
  static const ERROR_GPIO_INVALID_REGISTRATION_PACKET = WIN32_ERROR(0x00003bdc);
  static const ERROR_GPIO_OPERATION_DENIED = WIN32_ERROR(0x00003bdd);
  static const ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE = WIN32_ERROR(0x00003bde);
  static const ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED = WIN32_ERROR(0x00003bdf);
  static const ERROR_CANNOT_SWITCH_RUNLEVEL = WIN32_ERROR(0x00003c28);
  static const ERROR_INVALID_RUNLEVEL_SETTING = WIN32_ERROR(0x00003c29);
  static const ERROR_RUNLEVEL_SWITCH_TIMEOUT = WIN32_ERROR(0x00003c2a);
  static const ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT = WIN32_ERROR(0x00003c2b);
  static const ERROR_RUNLEVEL_SWITCH_IN_PROGRESS = WIN32_ERROR(0x00003c2c);
  static const ERROR_SERVICES_FAILED_AUTOSTART = WIN32_ERROR(0x00003c2d);
  static const ERROR_COM_TASK_STOP_PENDING = WIN32_ERROR(0x00003c8d);
  static const ERROR_INSTALL_OPEN_PACKAGE_FAILED = WIN32_ERROR(0x00003cf0);
  static const ERROR_INSTALL_PACKAGE_NOT_FOUND = WIN32_ERROR(0x00003cf1);
  static const ERROR_INSTALL_INVALID_PACKAGE = WIN32_ERROR(0x00003cf2);
  static const ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED =
      WIN32_ERROR(0x00003cf3);
  static const ERROR_INSTALL_OUT_OF_DISK_SPACE = WIN32_ERROR(0x00003cf4);
  static const ERROR_INSTALL_NETWORK_FAILURE = WIN32_ERROR(0x00003cf5);
  static const ERROR_INSTALL_REGISTRATION_FAILURE = WIN32_ERROR(0x00003cf6);
  static const ERROR_INSTALL_DEREGISTRATION_FAILURE = WIN32_ERROR(0x00003cf7);
  static const ERROR_INSTALL_CANCEL = WIN32_ERROR(0x00003cf8);
  static const ERROR_INSTALL_FAILED = WIN32_ERROR(0x00003cf9);
  static const ERROR_REMOVE_FAILED = WIN32_ERROR(0x00003cfa);
  static const ERROR_PACKAGE_ALREADY_EXISTS = WIN32_ERROR(0x00003cfb);
  static const ERROR_NEEDS_REMEDIATION = WIN32_ERROR(0x00003cfc);
  static const ERROR_INSTALL_PREREQUISITE_FAILED = WIN32_ERROR(0x00003cfd);
  static const ERROR_PACKAGE_REPOSITORY_CORRUPTED = WIN32_ERROR(0x00003cfe);
  static const ERROR_INSTALL_POLICY_FAILURE = WIN32_ERROR(0x00003cff);
  static const ERROR_PACKAGE_UPDATING = WIN32_ERROR(0x00003d00);
  static const ERROR_DEPLOYMENT_BLOCKED_BY_POLICY = WIN32_ERROR(0x00003d01);
  static const ERROR_PACKAGES_IN_USE = WIN32_ERROR(0x00003d02);
  static const ERROR_RECOVERY_FILE_CORRUPT = WIN32_ERROR(0x00003d03);
  static const ERROR_INVALID_STAGED_SIGNATURE = WIN32_ERROR(0x00003d04);
  static const ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED =
      WIN32_ERROR(0x00003d05);
  static const ERROR_INSTALL_PACKAGE_DOWNGRADE = WIN32_ERROR(0x00003d06);
  static const ERROR_SYSTEM_NEEDS_REMEDIATION = WIN32_ERROR(0x00003d07);
  static const ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN = WIN32_ERROR(0x00003d08);
  static const ERROR_RESILIENCY_FILE_CORRUPT = WIN32_ERROR(0x00003d09);
  static const ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING =
      WIN32_ERROR(0x00003d0a);
  static const ERROR_PACKAGE_MOVE_FAILED = WIN32_ERROR(0x00003d0b);
  static const ERROR_INSTALL_VOLUME_NOT_EMPTY = WIN32_ERROR(0x00003d0c);
  static const ERROR_INSTALL_VOLUME_OFFLINE = WIN32_ERROR(0x00003d0d);
  static const ERROR_INSTALL_VOLUME_CORRUPT = WIN32_ERROR(0x00003d0e);
  static const ERROR_NEEDS_REGISTRATION = WIN32_ERROR(0x00003d0f);
  static const ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE =
      WIN32_ERROR(0x00003d10);
  static const ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED = WIN32_ERROR(0x00003d11);
  static const ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE =
      WIN32_ERROR(0x00003d12);
  static const ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM =
      WIN32_ERROR(0x00003d13);
  static const ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING =
      WIN32_ERROR(0x00003d14);
  static const ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE =
      WIN32_ERROR(0x00003d15);
  static const ERROR_PACKAGE_STAGING_ONHOLD = WIN32_ERROR(0x00003d16);
  static const ERROR_INSTALL_INVALID_RELATED_SET_UPDATE =
      WIN32_ERROR(0x00003d17);
  static const ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY =
      WIN32_ERROR(0x00003d18);
  static const ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF =
      WIN32_ERROR(0x00003d19);
  static const ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED =
      WIN32_ERROR(0x00003d1a);
  static const ERROR_PACKAGES_REPUTATION_CHECK_FAILED = WIN32_ERROR(0x00003d1b);
  static const ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT =
      WIN32_ERROR(0x00003d1c);
  static const ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED = WIN32_ERROR(0x00003d1d);
  static const ERROR_APPINSTALLER_ACTIVATION_BLOCKED = WIN32_ERROR(0x00003d1e);
  static const ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED =
      WIN32_ERROR(0x00003d1f);
  static const ERROR_APPX_RAW_DATA_WRITE_FAILED = WIN32_ERROR(0x00003d20);
  static const ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE =
      WIN32_ERROR(0x00003d21);
  static const ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE =
      WIN32_ERROR(0x00003d22);
  static const ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY =
      WIN32_ERROR(0x00003d23);
  static const ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY =
      WIN32_ERROR(0x00003d24);
  static const ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER =
      WIN32_ERROR(0x00003d25);
  static const ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED =
      WIN32_ERROR(0x00003d26);
  static const ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE =
      WIN32_ERROR(0x00003d27);
  static const ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES =
      WIN32_ERROR(0x00003d28);
  static const ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED =
      WIN32_ERROR(0x00003d29);
  static const ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST =
      WIN32_ERROR(0x00003d2a);
  static const ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT = WIN32_ERROR(0x00003d2b);
  static const ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE =
      WIN32_ERROR(0x00003d2c);
  static const ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE =
      WIN32_ERROR(0x00003d2d);
  static const ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED =
      WIN32_ERROR(0x00003d2e);
  static const ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY =
      WIN32_ERROR(0x00003d2f);
  static const ERROR_PACKAGE_LACKS_CAPABILITY_FOR_MANDATORY_STARTUPTASKS =
      WIN32_ERROR(0x00003d30);
  static const ERROR_INSTALL_RESOLVE_HOSTRUNTIME_DEPENDENCY_FAILED =
      WIN32_ERROR(0x00003d31);
  static const ERROR_MACHINE_SCOPE_NOT_ALLOWED = WIN32_ERROR(0x00003d32);
  static const ERROR_CLASSIC_COMPAT_MODE_NOT_ALLOWED = WIN32_ERROR(0x00003d33);
  static const ERROR_STAGEFROMUPDATEAGENT_PACKAGE_NOT_APPLICABLE =
      WIN32_ERROR(0x00003d34);
  static const ERROR_PACKAGE_NOT_REGISTERED_FOR_USER = WIN32_ERROR(0x00003d35);
  static const ERROR_PACKAGE_NAME_MISMATCH = WIN32_ERROR(0x00003d36);
  static const ERROR_APPINSTALLER_URI_IN_USE = WIN32_ERROR(0x00003d37);
  static const ERROR_APPINSTALLER_IS_MANAGED_BY_SYSTEM =
      WIN32_ERROR(0x00003d38);
  static const APPMODEL_ERROR_NO_PACKAGE = WIN32_ERROR(0x00003d54);
  static const APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT = WIN32_ERROR(0x00003d55);
  static const APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT =
      WIN32_ERROR(0x00003d56);
  static const APPMODEL_ERROR_NO_APPLICATION = WIN32_ERROR(0x00003d57);
  static const APPMODEL_ERROR_DYNAMIC_PROPERTY_READ_FAILED =
      WIN32_ERROR(0x00003d58);
  static const APPMODEL_ERROR_DYNAMIC_PROPERTY_INVALID =
      WIN32_ERROR(0x00003d59);
  static const APPMODEL_ERROR_PACKAGE_NOT_AVAILABLE = WIN32_ERROR(0x00003d5a);
  static const APPMODEL_ERROR_NO_MUTABLE_DIRECTORY = WIN32_ERROR(0x00003d5b);
  static const ERROR_STATE_LOAD_STORE_FAILED = WIN32_ERROR(0x00003db8);
  static const ERROR_STATE_GET_VERSION_FAILED = WIN32_ERROR(0x00003db9);
  static const ERROR_STATE_SET_VERSION_FAILED = WIN32_ERROR(0x00003dba);
  static const ERROR_STATE_STRUCTURED_RESET_FAILED = WIN32_ERROR(0x00003dbb);
  static const ERROR_STATE_OPEN_CONTAINER_FAILED = WIN32_ERROR(0x00003dbc);
  static const ERROR_STATE_CREATE_CONTAINER_FAILED = WIN32_ERROR(0x00003dbd);
  static const ERROR_STATE_DELETE_CONTAINER_FAILED = WIN32_ERROR(0x00003dbe);
  static const ERROR_STATE_READ_SETTING_FAILED = WIN32_ERROR(0x00003dbf);
  static const ERROR_STATE_WRITE_SETTING_FAILED = WIN32_ERROR(0x00003dc0);
  static const ERROR_STATE_DELETE_SETTING_FAILED = WIN32_ERROR(0x00003dc1);
  static const ERROR_STATE_QUERY_SETTING_FAILED = WIN32_ERROR(0x00003dc2);
  static const ERROR_STATE_READ_COMPOSITE_SETTING_FAILED =
      WIN32_ERROR(0x00003dc3);
  static const ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED =
      WIN32_ERROR(0x00003dc4);
  static const ERROR_STATE_ENUMERATE_CONTAINER_FAILED = WIN32_ERROR(0x00003dc5);
  static const ERROR_STATE_ENUMERATE_SETTINGS_FAILED = WIN32_ERROR(0x00003dc6);
  static const ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED =
      WIN32_ERROR(0x00003dc7);
  static const ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED =
      WIN32_ERROR(0x00003dc8);
  static const ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED =
      WIN32_ERROR(0x00003dc9);
  static const ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED =
      WIN32_ERROR(0x00003dca);
  static const ERROR_API_UNAVAILABLE = WIN32_ERROR(0x00003de1);
  static const ERROR_NDIS_INTERFACE_CLOSING = WIN32_ERROR(0x80340002);
  static const ERROR_NDIS_BAD_VERSION = WIN32_ERROR(0x80340004);
  static const ERROR_NDIS_BAD_CHARACTERISTICS = WIN32_ERROR(0x80340005);
  static const ERROR_NDIS_ADAPTER_NOT_FOUND = WIN32_ERROR(0x80340006);
  static const ERROR_NDIS_OPEN_FAILED = WIN32_ERROR(0x80340007);
  static const ERROR_NDIS_DEVICE_FAILED = WIN32_ERROR(0x80340008);
  static const ERROR_NDIS_MULTICAST_FULL = WIN32_ERROR(0x80340009);
  static const ERROR_NDIS_MULTICAST_EXISTS = WIN32_ERROR(0x8034000a);
  static const ERROR_NDIS_MULTICAST_NOT_FOUND = WIN32_ERROR(0x8034000b);
  static const ERROR_NDIS_REQUEST_ABORTED = WIN32_ERROR(0x8034000c);
  static const ERROR_NDIS_RESET_IN_PROGRESS = WIN32_ERROR(0x8034000d);
  static const ERROR_NDIS_NOT_SUPPORTED = WIN32_ERROR(0x803400bb);
  static const ERROR_NDIS_INVALID_PACKET = WIN32_ERROR(0x8034000f);
  static const ERROR_NDIS_ADAPTER_NOT_READY = WIN32_ERROR(0x80340011);
  static const ERROR_NDIS_INVALID_LENGTH = WIN32_ERROR(0x80340014);
  static const ERROR_NDIS_INVALID_DATA = WIN32_ERROR(0x80340015);
  static const ERROR_NDIS_BUFFER_TOO_SHORT = WIN32_ERROR(0x80340016);
  static const ERROR_NDIS_INVALID_OID = WIN32_ERROR(0x80340017);
  static const ERROR_NDIS_ADAPTER_REMOVED = WIN32_ERROR(0x80340018);
  static const ERROR_NDIS_UNSUPPORTED_MEDIA = WIN32_ERROR(0x80340019);
  static const ERROR_NDIS_GROUP_ADDRESS_IN_USE = WIN32_ERROR(0x8034001a);
  static const ERROR_NDIS_FILE_NOT_FOUND = WIN32_ERROR(0x8034001b);
  static const ERROR_NDIS_ERROR_READING_FILE = WIN32_ERROR(0x8034001c);
  static const ERROR_NDIS_ALREADY_MAPPED = WIN32_ERROR(0x8034001d);
  static const ERROR_NDIS_RESOURCE_CONFLICT = WIN32_ERROR(0x8034001e);
  static const ERROR_NDIS_MEDIA_DISCONNECTED = WIN32_ERROR(0x8034001f);
  static const ERROR_NDIS_INVALID_ADDRESS = WIN32_ERROR(0x80340022);
  static const ERROR_NDIS_INVALID_DEVICE_REQUEST = WIN32_ERROR(0x80340010);
  static const ERROR_NDIS_PAUSED = WIN32_ERROR(0x8034002a);
  static const ERROR_NDIS_INTERFACE_NOT_FOUND = WIN32_ERROR(0x8034002b);
  static const ERROR_NDIS_UNSUPPORTED_REVISION = WIN32_ERROR(0x8034002c);
  static const ERROR_NDIS_INVALID_PORT = WIN32_ERROR(0x8034002d);
  static const ERROR_NDIS_INVALID_PORT_STATE = WIN32_ERROR(0x8034002e);
  static const ERROR_NDIS_LOW_POWER_STATE = WIN32_ERROR(0x8034002f);
  static const ERROR_NDIS_REINIT_REQUIRED = WIN32_ERROR(0x80340030);
  static const ERROR_NDIS_NO_QUEUES = WIN32_ERROR(0x80340031);
  static const ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED = WIN32_ERROR(0x80342000);
  static const ERROR_NDIS_DOT11_MEDIA_IN_USE = WIN32_ERROR(0x80342001);
  static const ERROR_NDIS_DOT11_POWER_STATE_INVALID = WIN32_ERROR(0x80342002);
  static const ERROR_NDIS_PM_WOL_PATTERN_LIST_FULL = WIN32_ERROR(0x80342003);
  static const ERROR_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL =
      WIN32_ERROR(0x80342004);
  static const ERROR_NDIS_DOT11_AP_CHANNEL_CURRENTLY_NOT_AVAILABLE =
      WIN32_ERROR(0x80342005);
  static const ERROR_NDIS_DOT11_AP_BAND_CURRENTLY_NOT_AVAILABLE =
      WIN32_ERROR(0x80342006);
  static const ERROR_NDIS_DOT11_AP_CHANNEL_NOT_ALLOWED =
      WIN32_ERROR(0x80342007);
  static const ERROR_NDIS_DOT11_AP_BAND_NOT_ALLOWED = WIN32_ERROR(0x80342008);
  static const ERROR_NDIS_INDICATION_REQUIRED = WIN32_ERROR(0x00340001);
  static const ERROR_NDIS_OFFLOAD_POLICY = WIN32_ERROR(0xc034100f);
  static const ERROR_NDIS_OFFLOAD_CONNECTION_REJECTED = WIN32_ERROR(0xc0341012);
  static const ERROR_NDIS_OFFLOAD_PATH_REJECTED = WIN32_ERROR(0xc0341013);
  static const ERROR_HV_INVALID_HYPERCALL_CODE = WIN32_ERROR(0xc0350002);
  static const ERROR_HV_INVALID_HYPERCALL_INPUT = WIN32_ERROR(0xc0350003);
  static const ERROR_HV_INVALID_ALIGNMENT = WIN32_ERROR(0xc0350004);
  static const ERROR_HV_INVALID_PARAMETER = WIN32_ERROR(0xc0350005);
  static const ERROR_HV_ACCESS_DENIED = WIN32_ERROR(0xc0350006);
  static const ERROR_HV_INVALID_PARTITION_STATE = WIN32_ERROR(0xc0350007);
  static const ERROR_HV_OPERATION_DENIED = WIN32_ERROR(0xc0350008);
  static const ERROR_HV_UNKNOWN_PROPERTY = WIN32_ERROR(0xc0350009);
  static const ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE = WIN32_ERROR(0xc035000a);
  static const ERROR_HV_INSUFFICIENT_MEMORY = WIN32_ERROR(0xc035000b);
  static const ERROR_HV_PARTITION_TOO_DEEP = WIN32_ERROR(0xc035000c);
  static const ERROR_HV_INVALID_PARTITION_ID = WIN32_ERROR(0xc035000d);
  static const ERROR_HV_INVALID_VP_INDEX = WIN32_ERROR(0xc035000e);
  static const ERROR_HV_INVALID_PORT_ID = WIN32_ERROR(0xc0350011);
  static const ERROR_HV_INVALID_CONNECTION_ID = WIN32_ERROR(0xc0350012);
  static const ERROR_HV_INSUFFICIENT_BUFFERS = WIN32_ERROR(0xc0350013);
  static const ERROR_HV_NOT_ACKNOWLEDGED = WIN32_ERROR(0xc0350014);
  static const ERROR_HV_INVALID_VP_STATE = WIN32_ERROR(0xc0350015);
  static const ERROR_HV_ACKNOWLEDGED = WIN32_ERROR(0xc0350016);
  static const ERROR_HV_INVALID_SAVE_RESTORE_STATE = WIN32_ERROR(0xc0350017);
  static const ERROR_HV_INVALID_SYNIC_STATE = WIN32_ERROR(0xc0350018);
  static const ERROR_HV_OBJECT_IN_USE = WIN32_ERROR(0xc0350019);
  static const ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO = WIN32_ERROR(0xc035001a);
  static const ERROR_HV_NO_DATA = WIN32_ERROR(0xc035001b);
  static const ERROR_HV_INACTIVE = WIN32_ERROR(0xc035001c);
  static const ERROR_HV_NO_RESOURCES = WIN32_ERROR(0xc035001d);
  static const ERROR_HV_FEATURE_UNAVAILABLE = WIN32_ERROR(0xc035001e);
  static const ERROR_HV_INSUFFICIENT_BUFFER = WIN32_ERROR(0xc0350033);
  static const ERROR_HV_INSUFFICIENT_DEVICE_DOMAINS = WIN32_ERROR(0xc0350038);
  static const ERROR_HV_CPUID_FEATURE_VALIDATION = WIN32_ERROR(0xc035003c);
  static const ERROR_HV_CPUID_XSAVE_FEATURE_VALIDATION =
      WIN32_ERROR(0xc035003d);
  static const ERROR_HV_PROCESSOR_STARTUP_TIMEOUT = WIN32_ERROR(0xc035003e);
  static const ERROR_HV_SMX_ENABLED = WIN32_ERROR(0xc035003f);
  static const ERROR_HV_INVALID_LP_INDEX = WIN32_ERROR(0xc0350041);
  static const ERROR_HV_INVALID_REGISTER_VALUE = WIN32_ERROR(0xc0350050);
  static const ERROR_HV_INVALID_VTL_STATE = WIN32_ERROR(0xc0350051);
  static const ERROR_HV_NX_NOT_DETECTED = WIN32_ERROR(0xc0350055);
  static const ERROR_HV_INVALID_DEVICE_ID = WIN32_ERROR(0xc0350057);
  static const ERROR_HV_INVALID_DEVICE_STATE = WIN32_ERROR(0xc0350058);
  static const ERROR_HV_PENDING_PAGE_REQUESTS = WIN32_ERROR(0x00350059);
  static const ERROR_HV_PAGE_REQUEST_INVALID = WIN32_ERROR(0xc0350060);
  static const ERROR_HV_INVALID_CPU_GROUP_ID = WIN32_ERROR(0xc035006f);
  static const ERROR_HV_INVALID_CPU_GROUP_STATE = WIN32_ERROR(0xc0350070);
  static const ERROR_HV_OPERATION_FAILED = WIN32_ERROR(0xc0350071);
  static const ERROR_HV_NOT_ALLOWED_WITH_NESTED_VIRT_ACTIVE =
      WIN32_ERROR(0xc0350072);
  static const ERROR_HV_INSUFFICIENT_ROOT_MEMORY = WIN32_ERROR(0xc0350073);
  static const ERROR_HV_EVENT_BUFFER_ALREADY_FREED = WIN32_ERROR(0xc0350074);
  static const ERROR_HV_INSUFFICIENT_CONTIGUOUS_MEMORY =
      WIN32_ERROR(0xc0350075);
  static const ERROR_HV_DEVICE_NOT_IN_DOMAIN = WIN32_ERROR(0xc0350076);
  static const ERROR_HV_NESTED_VM_EXIT = WIN32_ERROR(0xc0350077);
  static const ERROR_HV_MSR_ACCESS_FAILED = WIN32_ERROR(0xc0350080);
  static const ERROR_HV_INSUFFICIENT_MEMORY_MIRRORING = WIN32_ERROR(0xc0350081);
  static const ERROR_HV_INSUFFICIENT_CONTIGUOUS_MEMORY_MIRRORING =
      WIN32_ERROR(0xc0350082);
  static const ERROR_HV_INSUFFICIENT_CONTIGUOUS_ROOT_MEMORY =
      WIN32_ERROR(0xc0350083);
  static const ERROR_HV_INSUFFICIENT_ROOT_MEMORY_MIRRORING =
      WIN32_ERROR(0xc0350084);
  static const ERROR_HV_INSUFFICIENT_CONTIGUOUS_ROOT_MEMORY_MIRRORING =
      WIN32_ERROR(0xc0350085);
  static const ERROR_HV_NOT_PRESENT = WIN32_ERROR(0xc0351000);
  static const ERROR_VID_DUPLICATE_HANDLER = WIN32_ERROR(0xc0370001);
  static const ERROR_VID_TOO_MANY_HANDLERS = WIN32_ERROR(0xc0370002);
  static const ERROR_VID_QUEUE_FULL = WIN32_ERROR(0xc0370003);
  static const ERROR_VID_HANDLER_NOT_PRESENT = WIN32_ERROR(0xc0370004);
  static const ERROR_VID_INVALID_OBJECT_NAME = WIN32_ERROR(0xc0370005);
  static const ERROR_VID_PARTITION_NAME_TOO_LONG = WIN32_ERROR(0xc0370006);
  static const ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG = WIN32_ERROR(0xc0370007);
  static const ERROR_VID_PARTITION_ALREADY_EXISTS = WIN32_ERROR(0xc0370008);
  static const ERROR_VID_PARTITION_DOES_NOT_EXIST = WIN32_ERROR(0xc0370009);
  static const ERROR_VID_PARTITION_NAME_NOT_FOUND = WIN32_ERROR(0xc037000a);
  static const ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS = WIN32_ERROR(0xc037000b);
  static const ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT = WIN32_ERROR(0xc037000c);
  static const ERROR_VID_MB_STILL_REFERENCED = WIN32_ERROR(0xc037000d);
  static const ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED = WIN32_ERROR(0xc037000e);
  static const ERROR_VID_INVALID_NUMA_SETTINGS = WIN32_ERROR(0xc037000f);
  static const ERROR_VID_INVALID_NUMA_NODE_INDEX = WIN32_ERROR(0xc0370010);
  static const ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED =
      WIN32_ERROR(0xc0370011);
  static const ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE = WIN32_ERROR(0xc0370012);
  static const ERROR_VID_PAGE_RANGE_OVERFLOW = WIN32_ERROR(0xc0370013);
  static const ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE = WIN32_ERROR(0xc0370014);
  static const ERROR_VID_INVALID_GPA_RANGE_HANDLE = WIN32_ERROR(0xc0370015);
  static const ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE =
      WIN32_ERROR(0xc0370016);
  static const ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED =
      WIN32_ERROR(0xc0370017);
  static const ERROR_VID_INVALID_PPM_HANDLE = WIN32_ERROR(0xc0370018);
  static const ERROR_VID_MBPS_ARE_LOCKED = WIN32_ERROR(0xc0370019);
  static const ERROR_VID_MESSAGE_QUEUE_CLOSED = WIN32_ERROR(0xc037001a);
  static const ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED =
      WIN32_ERROR(0xc037001b);
  static const ERROR_VID_STOP_PENDING = WIN32_ERROR(0xc037001c);
  static const ERROR_VID_INVALID_PROCESSOR_STATE = WIN32_ERROR(0xc037001d);
  static const ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT =
      WIN32_ERROR(0xc037001e);
  static const ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED =
      WIN32_ERROR(0xc037001f);
  static const ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET =
      WIN32_ERROR(0xc0370020);
  static const ERROR_VID_MMIO_RANGE_DESTROYED = WIN32_ERROR(0xc0370021);
  static const ERROR_VID_INVALID_CHILD_GPA_PAGE_SET = WIN32_ERROR(0xc0370022);
  static const ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED =
      WIN32_ERROR(0xc0370023);
  static const ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL = WIN32_ERROR(0xc0370024);
  static const ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE =
      WIN32_ERROR(0xc0370025);
  static const ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT = WIN32_ERROR(0xc0370026);
  static const ERROR_VID_SAVED_STATE_CORRUPT = WIN32_ERROR(0xc0370027);
  static const ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM =
      WIN32_ERROR(0xc0370028);
  static const ERROR_VID_SAVED_STATE_INCOMPATIBLE = WIN32_ERROR(0xc0370029);
  static const ERROR_VID_VTL_ACCESS_DENIED = WIN32_ERROR(0xc037002a);
  static const ERROR_VID_INSUFFICIENT_RESOURCES_RESERVE =
      WIN32_ERROR(0xc037002b);
  static const ERROR_VID_INSUFFICIENT_RESOURCES_PHYSICAL_BUFFER =
      WIN32_ERROR(0xc037002c);
  static const ERROR_VID_INSUFFICIENT_RESOURCES_HV_DEPOSIT =
      WIN32_ERROR(0xc037002d);
  static const ERROR_VID_MEMORY_TYPE_NOT_SUPPORTED = WIN32_ERROR(0xc037002e);
  static const ERROR_VID_INSUFFICIENT_RESOURCES_WITHDRAW =
      WIN32_ERROR(0xc037002f);
  static const ERROR_VID_PROCESS_ALREADY_SET = WIN32_ERROR(0xc0370030);
  static const ERROR_VMCOMPUTE_TERMINATED_DURING_START =
      WIN32_ERROR(0xc0370100);
  static const ERROR_VMCOMPUTE_IMAGE_MISMATCH = WIN32_ERROR(0xc0370101);
  static const ERROR_VMCOMPUTE_HYPERV_NOT_INSTALLED = WIN32_ERROR(0xc0370102);
  static const ERROR_VMCOMPUTE_OPERATION_PENDING = WIN32_ERROR(0xc0370103);
  static const ERROR_VMCOMPUTE_TOO_MANY_NOTIFICATIONS = WIN32_ERROR(0xc0370104);
  static const ERROR_VMCOMPUTE_INVALID_STATE = WIN32_ERROR(0xc0370105);
  static const ERROR_VMCOMPUTE_UNEXPECTED_EXIT = WIN32_ERROR(0xc0370106);
  static const ERROR_VMCOMPUTE_TERMINATED = WIN32_ERROR(0xc0370107);
  static const ERROR_VMCOMPUTE_CONNECT_FAILED = WIN32_ERROR(0xc0370108);
  static const ERROR_VMCOMPUTE_TIMEOUT = WIN32_ERROR(0xc0370109);
  static const ERROR_VMCOMPUTE_CONNECTION_CLOSED = WIN32_ERROR(0xc037010a);
  static const ERROR_VMCOMPUTE_UNKNOWN_MESSAGE = WIN32_ERROR(0xc037010b);
  static const ERROR_VMCOMPUTE_UNSUPPORTED_PROTOCOL_VERSION =
      WIN32_ERROR(0xc037010c);
  static const ERROR_VMCOMPUTE_INVALID_JSON = WIN32_ERROR(0xc037010d);
  static const ERROR_VMCOMPUTE_SYSTEM_NOT_FOUND = WIN32_ERROR(0xc037010e);
  static const ERROR_VMCOMPUTE_SYSTEM_ALREADY_EXISTS = WIN32_ERROR(0xc037010f);
  static const ERROR_VMCOMPUTE_SYSTEM_ALREADY_STOPPED = WIN32_ERROR(0xc0370110);
  static const ERROR_VMCOMPUTE_PROTOCOL_ERROR = WIN32_ERROR(0xc0370111);
  static const ERROR_VMCOMPUTE_INVALID_LAYER = WIN32_ERROR(0xc0370112);
  static const ERROR_VMCOMPUTE_WINDOWS_INSIDER_REQUIRED =
      WIN32_ERROR(0xc0370113);
  static const ERROR_VNET_VIRTUAL_SWITCH_NAME_NOT_FOUND =
      WIN32_ERROR(0xc0370200);
  static const ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED =
      WIN32_ERROR(0x80370001);
  static const ERROR_VSMB_SAVED_STATE_FILE_NOT_FOUND = WIN32_ERROR(0xc0370400);
  static const ERROR_VSMB_SAVED_STATE_CORRUPT = WIN32_ERROR(0xc0370401);
  static const ERROR_VOLMGR_INCOMPLETE_REGENERATION = WIN32_ERROR(0x80380001);
  static const ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION = WIN32_ERROR(0x80380002);
  static const ERROR_VOLMGR_DATABASE_FULL = WIN32_ERROR(0xc0380001);
  static const ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED =
      WIN32_ERROR(0xc0380002);
  static const ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC =
      WIN32_ERROR(0xc0380003);
  static const ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED = WIN32_ERROR(0xc0380004);
  static const ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME =
      WIN32_ERROR(0xc0380005);
  static const ERROR_VOLMGR_DISK_DUPLICATE = WIN32_ERROR(0xc0380006);
  static const ERROR_VOLMGR_DISK_DYNAMIC = WIN32_ERROR(0xc0380007);
  static const ERROR_VOLMGR_DISK_ID_INVALID = WIN32_ERROR(0xc0380008);
  static const ERROR_VOLMGR_DISK_INVALID = WIN32_ERROR(0xc0380009);
  static const ERROR_VOLMGR_DISK_LAST_VOTER = WIN32_ERROR(0xc038000a);
  static const ERROR_VOLMGR_DISK_LAYOUT_INVALID = WIN32_ERROR(0xc038000b);
  static const ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS =
      WIN32_ERROR(0xc038000c);
  static const ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED =
      WIN32_ERROR(0xc038000d);
  static const ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL =
      WIN32_ERROR(0xc038000e);
  static const ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS =
      WIN32_ERROR(0xc038000f);
  static const ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS =
      WIN32_ERROR(0xc0380010);
  static const ERROR_VOLMGR_DISK_MISSING = WIN32_ERROR(0xc0380011);
  static const ERROR_VOLMGR_DISK_NOT_EMPTY = WIN32_ERROR(0xc0380012);
  static const ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE = WIN32_ERROR(0xc0380013);
  static const ERROR_VOLMGR_DISK_REVECTORING_FAILED = WIN32_ERROR(0xc0380014);
  static const ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID = WIN32_ERROR(0xc0380015);
  static const ERROR_VOLMGR_DISK_SET_NOT_CONTAINED = WIN32_ERROR(0xc0380016);
  static const ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS =
      WIN32_ERROR(0xc0380017);
  static const ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES =
      WIN32_ERROR(0xc0380018);
  static const ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED =
      WIN32_ERROR(0xc0380019);
  static const ERROR_VOLMGR_EXTENT_ALREADY_USED = WIN32_ERROR(0xc038001a);
  static const ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS = WIN32_ERROR(0xc038001b);
  static const ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION =
      WIN32_ERROR(0xc038001c);
  static const ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED = WIN32_ERROR(0xc038001d);
  static const ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION =
      WIN32_ERROR(0xc038001e);
  static const ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH =
      WIN32_ERROR(0xc038001f);
  static const ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED =
      WIN32_ERROR(0xc0380020);
  static const ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID = WIN32_ERROR(0xc0380021);
  static const ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS = WIN32_ERROR(0xc0380022);
  static const ERROR_VOLMGR_MEMBER_IN_SYNC = WIN32_ERROR(0xc0380023);
  static const ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE = WIN32_ERROR(0xc0380024);
  static const ERROR_VOLMGR_MEMBER_INDEX_INVALID = WIN32_ERROR(0xc0380025);
  static const ERROR_VOLMGR_MEMBER_MISSING = WIN32_ERROR(0xc0380026);
  static const ERROR_VOLMGR_MEMBER_NOT_DETACHED = WIN32_ERROR(0xc0380027);
  static const ERROR_VOLMGR_MEMBER_REGENERATING = WIN32_ERROR(0xc0380028);
  static const ERROR_VOLMGR_ALL_DISKS_FAILED = WIN32_ERROR(0xc0380029);
  static const ERROR_VOLMGR_NO_REGISTERED_USERS = WIN32_ERROR(0xc038002a);
  static const ERROR_VOLMGR_NO_SUCH_USER = WIN32_ERROR(0xc038002b);
  static const ERROR_VOLMGR_NOTIFICATION_RESET = WIN32_ERROR(0xc038002c);
  static const ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID = WIN32_ERROR(0xc038002d);
  static const ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID = WIN32_ERROR(0xc038002e);
  static const ERROR_VOLMGR_PACK_DUPLICATE = WIN32_ERROR(0xc038002f);
  static const ERROR_VOLMGR_PACK_ID_INVALID = WIN32_ERROR(0xc0380030);
  static const ERROR_VOLMGR_PACK_INVALID = WIN32_ERROR(0xc0380031);
  static const ERROR_VOLMGR_PACK_NAME_INVALID = WIN32_ERROR(0xc0380032);
  static const ERROR_VOLMGR_PACK_OFFLINE = WIN32_ERROR(0xc0380033);
  static const ERROR_VOLMGR_PACK_HAS_QUORUM = WIN32_ERROR(0xc0380034);
  static const ERROR_VOLMGR_PACK_WITHOUT_QUORUM = WIN32_ERROR(0xc0380035);
  static const ERROR_VOLMGR_PARTITION_STYLE_INVALID = WIN32_ERROR(0xc0380036);
  static const ERROR_VOLMGR_PARTITION_UPDATE_FAILED = WIN32_ERROR(0xc0380037);
  static const ERROR_VOLMGR_PLEX_IN_SYNC = WIN32_ERROR(0xc0380038);
  static const ERROR_VOLMGR_PLEX_INDEX_DUPLICATE = WIN32_ERROR(0xc0380039);
  static const ERROR_VOLMGR_PLEX_INDEX_INVALID = WIN32_ERROR(0xc038003a);
  static const ERROR_VOLMGR_PLEX_LAST_ACTIVE = WIN32_ERROR(0xc038003b);
  static const ERROR_VOLMGR_PLEX_MISSING = WIN32_ERROR(0xc038003c);
  static const ERROR_VOLMGR_PLEX_REGENERATING = WIN32_ERROR(0xc038003d);
  static const ERROR_VOLMGR_PLEX_TYPE_INVALID = WIN32_ERROR(0xc038003e);
  static const ERROR_VOLMGR_PLEX_NOT_RAID5 = WIN32_ERROR(0xc038003f);
  static const ERROR_VOLMGR_PLEX_NOT_SIMPLE = WIN32_ERROR(0xc0380040);
  static const ERROR_VOLMGR_STRUCTURE_SIZE_INVALID = WIN32_ERROR(0xc0380041);
  static const ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS =
      WIN32_ERROR(0xc0380042);
  static const ERROR_VOLMGR_TRANSACTION_IN_PROGRESS = WIN32_ERROR(0xc0380043);
  static const ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE =
      WIN32_ERROR(0xc0380044);
  static const ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK =
      WIN32_ERROR(0xc0380045);
  static const ERROR_VOLMGR_VOLUME_ID_INVALID = WIN32_ERROR(0xc0380046);
  static const ERROR_VOLMGR_VOLUME_LENGTH_INVALID = WIN32_ERROR(0xc0380047);
  static const ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE =
      WIN32_ERROR(0xc0380048);
  static const ERROR_VOLMGR_VOLUME_NOT_MIRRORED = WIN32_ERROR(0xc0380049);
  static const ERROR_VOLMGR_VOLUME_NOT_RETAINED = WIN32_ERROR(0xc038004a);
  static const ERROR_VOLMGR_VOLUME_OFFLINE = WIN32_ERROR(0xc038004b);
  static const ERROR_VOLMGR_VOLUME_RETAINED = WIN32_ERROR(0xc038004c);
  static const ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID = WIN32_ERROR(0xc038004d);
  static const ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE = WIN32_ERROR(0xc038004e);
  static const ERROR_VOLMGR_BAD_BOOT_DISK = WIN32_ERROR(0xc038004f);
  static const ERROR_VOLMGR_PACK_CONFIG_OFFLINE = WIN32_ERROR(0xc0380050);
  static const ERROR_VOLMGR_PACK_CONFIG_ONLINE = WIN32_ERROR(0xc0380051);
  static const ERROR_VOLMGR_NOT_PRIMARY_PACK = WIN32_ERROR(0xc0380052);
  static const ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED = WIN32_ERROR(0xc0380053);
  static const ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID =
      WIN32_ERROR(0xc0380054);
  static const ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID =
      WIN32_ERROR(0xc0380055);
  static const ERROR_VOLMGR_VOLUME_MIRRORED = WIN32_ERROR(0xc0380056);
  static const ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED = WIN32_ERROR(0xc0380057);
  static const ERROR_VOLMGR_NO_VALID_LOG_COPIES = WIN32_ERROR(0xc0380058);
  static const ERROR_VOLMGR_PRIMARY_PACK_PRESENT = WIN32_ERROR(0xc0380059);
  static const ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID = WIN32_ERROR(0xc038005a);
  static const ERROR_VOLMGR_MIRROR_NOT_SUPPORTED = WIN32_ERROR(0xc038005b);
  static const ERROR_VOLMGR_RAID5_NOT_SUPPORTED = WIN32_ERROR(0xc038005c);
  static const ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED = WIN32_ERROR(0x80390001);
  static const ERROR_BCD_TOO_MANY_ELEMENTS = WIN32_ERROR(0xc0390002);
  static const ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED = WIN32_ERROR(0x80390003);
  static const ERROR_VHD_DRIVE_FOOTER_MISSING = WIN32_ERROR(0xc03a0001);
  static const ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH =
      WIN32_ERROR(0xc03a0002);
  static const ERROR_VHD_DRIVE_FOOTER_CORRUPT = WIN32_ERROR(0xc03a0003);
  static const ERROR_VHD_FORMAT_UNKNOWN = WIN32_ERROR(0xc03a0004);
  static const ERROR_VHD_FORMAT_UNSUPPORTED_VERSION = WIN32_ERROR(0xc03a0005);
  static const ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH =
      WIN32_ERROR(0xc03a0006);
  static const ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION =
      WIN32_ERROR(0xc03a0007);
  static const ERROR_VHD_SPARSE_HEADER_CORRUPT = WIN32_ERROR(0xc03a0008);
  static const ERROR_VHD_BLOCK_ALLOCATION_FAILURE = WIN32_ERROR(0xc03a0009);
  static const ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT =
      WIN32_ERROR(0xc03a000a);
  static const ERROR_VHD_INVALID_BLOCK_SIZE = WIN32_ERROR(0xc03a000b);
  static const ERROR_VHD_BITMAP_MISMATCH = WIN32_ERROR(0xc03a000c);
  static const ERROR_VHD_PARENT_VHD_NOT_FOUND = WIN32_ERROR(0xc03a000d);
  static const ERROR_VHD_CHILD_PARENT_ID_MISMATCH = WIN32_ERROR(0xc03a000e);
  static const ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH =
      WIN32_ERROR(0xc03a000f);
  static const ERROR_VHD_METADATA_READ_FAILURE = WIN32_ERROR(0xc03a0010);
  static const ERROR_VHD_METADATA_WRITE_FAILURE = WIN32_ERROR(0xc03a0011);
  static const ERROR_VHD_INVALID_SIZE = WIN32_ERROR(0xc03a0012);
  static const ERROR_VHD_INVALID_FILE_SIZE = WIN32_ERROR(0xc03a0013);
  static const ERROR_VIRTDISK_PROVIDER_NOT_FOUND = WIN32_ERROR(0xc03a0014);
  static const ERROR_VIRTDISK_NOT_VIRTUAL_DISK = WIN32_ERROR(0xc03a0015);
  static const ERROR_VHD_PARENT_VHD_ACCESS_DENIED = WIN32_ERROR(0xc03a0016);
  static const ERROR_VHD_CHILD_PARENT_SIZE_MISMATCH = WIN32_ERROR(0xc03a0017);
  static const ERROR_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED =
      WIN32_ERROR(0xc03a0018);
  static const ERROR_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT =
      WIN32_ERROR(0xc03a0019);
  static const ERROR_VIRTUAL_DISK_LIMITATION = WIN32_ERROR(0xc03a001a);
  static const ERROR_VHD_INVALID_TYPE = WIN32_ERROR(0xc03a001b);
  static const ERROR_VHD_INVALID_STATE = WIN32_ERROR(0xc03a001c);
  static const ERROR_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE =
      WIN32_ERROR(0xc03a001d);
  static const ERROR_VIRTDISK_DISK_ALREADY_OWNED = WIN32_ERROR(0xc03a001e);
  static const ERROR_VIRTDISK_DISK_ONLINE_AND_WRITABLE =
      WIN32_ERROR(0xc03a001f);
  static const ERROR_CTLOG_TRACKING_NOT_INITIALIZED = WIN32_ERROR(0xc03a0020);
  static const ERROR_CTLOG_LOGFILE_SIZE_EXCEEDED_MAXSIZE =
      WIN32_ERROR(0xc03a0021);
  static const ERROR_CTLOG_VHD_CHANGED_OFFLINE = WIN32_ERROR(0xc03a0022);
  static const ERROR_CTLOG_INVALID_TRACKING_STATE = WIN32_ERROR(0xc03a0023);
  static const ERROR_CTLOG_INCONSISTENT_TRACKING_FILE = WIN32_ERROR(0xc03a0024);
  static const ERROR_VHD_RESIZE_WOULD_TRUNCATE_DATA = WIN32_ERROR(0xc03a0025);
  static const ERROR_VHD_COULD_NOT_COMPUTE_MINIMUM_VIRTUAL_SIZE =
      WIN32_ERROR(0xc03a0026);
  static const ERROR_VHD_ALREADY_AT_OR_BELOW_MINIMUM_VIRTUAL_SIZE =
      WIN32_ERROR(0xc03a0027);
  static const ERROR_VHD_METADATA_FULL = WIN32_ERROR(0xc03a0028);
  static const ERROR_VHD_INVALID_CHANGE_TRACKING_ID = WIN32_ERROR(0xc03a0029);
  static const ERROR_VHD_CHANGE_TRACKING_DISABLED = WIN32_ERROR(0xc03a002a);
  static const ERROR_VHD_MISSING_CHANGE_TRACKING_INFORMATION =
      WIN32_ERROR(0xc03a0030);
  static const ERROR_VHD_UNEXPECTED_ID = WIN32_ERROR(0xc03a0034);
  static const ERROR_QUERY_STORAGE_ERROR = WIN32_ERROR(0x803a0001);
}
