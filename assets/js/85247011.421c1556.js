"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1483],{1779:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=t(4848),r=t(8453);const i={title:"Strings"},o=void 0,c={id:"guides-concepts/com/strings",title:"Strings",description:"Most COM interfaces use regular C strings, which are allocated and managed using",source:"@site/docs/guides-concepts/com/strings.md",sourceDirName:"guides-concepts/com",slug:"/guides-concepts/com/strings",permalink:"/docs/guides-concepts/com/strings",draft:!1,unlisted:!1,editUrl:"https://github.com/halildurmus/win32/tree/main/website/docs/guides-concepts/com/strings.md",tags:[],version:"current",lastUpdatedBy:"Halil Durmus",lastUpdatedAt:1722074681e3,frontMatter:{title:"Strings"},sidebar:"mainSidebar",previous:{title:"Basic Concepts",permalink:"/docs/guides-concepts/com/basic-concepts"},next:{title:"Contributing",permalink:"/docs/guides-concepts/contributing"}},a={},d=[{value:"Creating <code>BSTR</code> Objects",id:"creating-bstr-objects",level:2},{value:"Freeing <code>BSTR</code> Objects",id:"freeing-bstr-objects",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Most COM interfaces use regular C strings, which are allocated and managed using\nthe techniques described in\n",(0,s.jsx)(n.a,{href:"../memory-allocation#allocating-strings",children:"Allocating strings"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["However, some COM APIs use the ",(0,s.jsx)(n.a,{href:"https://learn.microsoft.com/previous-versions/windows/desktop/automat/bstr",children:(0,s.jsx)(n.code,{children:"BSTR"})})," type, particularly those that\nsupport late binding (often known as ",(0,s.jsx)(n.code,{children:"IDispatch"}),") interfaces."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"BSTR"})," types differ from ",(0,s.jsx)(n.code,{children:"Pointer<Utf16>"})," in that they include a\n",(0,s.jsx)(n.strong,{children:"4-byte prefix"})," stored immediately prior to the string itself, representing\nits length in bytes. The pointer points to the ",(0,s.jsx)(n.strong,{children:"first character"})," of the data\nstring, not to the length prefix."]}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"BSTR"}),"s should never be created using Dart's memory allocation functions."]}),(0,s.jsxs)(n.p,{children:["For example, the following code is ",(0,s.jsx)(n.strong,{children:"incorrect"})," because it does not\n",(0,s.jsx)(n.strong,{children:"allocate"})," and ",(0,s.jsx)(n.strong,{children:"store"})," the ",(0,s.jsx)(n.strong,{children:"length prefix"}),"."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"final bstr = 'I am a happy BSTR'.toNativeUtf16();\n"})})]}),"\n",(0,s.jsxs)(n.h2,{id:"creating-bstr-objects",children:["Creating ",(0,s.jsx)(n.code,{children:"BSTR"})," Objects"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"win32"})," package offers a ",(0,s.jsx)(n.strong,{children:"wrapper"})," for the COM memory allocation functions,\nensuring that ",(0,s.jsx)(n.code,{children:"BSTR"})," types can be created correctly. Instead of using Dart's\nmemory allocation directly, you should use the wrapper provided:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"final bstr = BSTR.fromString('I am a happy BSTR');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When examined by a debugger, the ",(0,s.jsx)(n.strong,{children:"4-bytes"})," prior to this location will contain\na 32-bit integer with the value ",(0,s.jsx)(n.strong,{children:"34"}),", representing the ",(0,s.jsx)(n.strong,{children:"length"})," of the\nstring encoded in ",(0,s.jsx)(n.strong,{children:"UTF-16"})," (two bytes per character):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"  final bstr = BSTR.fromString('I am a happy BSTR');\n  final len = bstr.ptr.cast<Uint32>()[-1];\n  print('Length of bstr: $len');\n  bstr.free();\n"})}),"\n",(0,s.jsxs)(n.p,{children:["As demonstrated above, you can access the pointer for a ",(0,s.jsx)(n.code,{children:"BSTR"})," using its ",(0,s.jsx)(n.code,{children:".ptr"}),"\nproperty."]}),"\n",(0,s.jsxs)(n.h2,{id:"freeing-bstr-objects",children:["Freeing ",(0,s.jsx)(n.code,{children:"BSTR"})," Objects"]}),"\n",(0,s.jsxs)(n.p,{children:["As with other manually allocated memory, Dart does not garbage collect ",(0,s.jsx)(n.code,{children:"BSTR"}),"\nobjects; therefore, you are responsible for freeing the memory allocated for a\n",(0,s.jsx)(n.code,{children:"BSTR"})," when it is no longer needed."]}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsxs)(n.p,{children:["Do not use the global ",(0,s.jsx)(n.code,{children:"free()"})," function to release ",(0,s.jsx)(n.code,{children:"BSTR"})," memory, as it will\n",(0,s.jsx)(n.strong,{children:"not free"})," the length prefix. Instead, use either the ",(0,s.jsx)(n.code,{children:".free()"})," method on the\n",(0,s.jsx)(n.code,{children:"BSTR"})," object itself, or the Windows API ",(0,s.jsx)(n.a,{href:"https://learn.microsoft.com/windows/win32/api/oleauto/nf-oleauto-sysfreestring",children:(0,s.jsx)(n.code,{children:"SysFreeString"})}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"free(bstr);              // BAD!!! This will leak memory\n\nbstr.free();             // OK\nSysFreeString(bstr.ptr); // Also OK\n"})})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);